   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ccu8.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_CCU8_StartPrescaler:
  23              	.LFB44:
  24              	 .file 1 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-07-29
   4:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
   7:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.
  11:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  12:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  14:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * do so, all subject to the following:
  20:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  21:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a source language processor.
  27:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  28:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
  40:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  41:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  42:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  43:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  44:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  45:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  46:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  47:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  49:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  51:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  52:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  53:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  54:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  55:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  56:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  57:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  58:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  59:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  60:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  61:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  62:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  63:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  64:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  65:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  66:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  67:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  68:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  69:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  70:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  71:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  72:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  73:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  74:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  75:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  76:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  77:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  78:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  79:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  80:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  81:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  82:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  83:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  84:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  85:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  86:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  87:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  88:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer()
  89:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  90:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  91:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  92:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  93:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  94:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  95:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  96:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  97:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  98:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  99:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
 100:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
 101:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
 102:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
 103:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 104:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-07-29:
 105:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_GetSliceStatusBit()
 106:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 107:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 108:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 109:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 110:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 111:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 112:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 114:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 115:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 116:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 117:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 119:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 120:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 121:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc1_ccu8_map.h"
 122:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 123:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 124:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 125:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc4_ccu8_map.h"
 126:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 127:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 128:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 129:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 130:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 131:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 132:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 133:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 134:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 135:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 137:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 138:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 139:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 140:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 141:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 142:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 143:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 144:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 145:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 146:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 147:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 148:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 149:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 150:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 151:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 152:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t,
 153:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 154:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 155:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 156:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 157:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 158:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 159:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 160:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 161:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 162:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 163:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 164:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 165:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 166:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 167:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 168:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 169:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 170:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 171:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 172:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 173:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 174:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 175:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 176:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 177:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 178:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(),
 179:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 180:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 181:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 182:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 183:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 184:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 185:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 186:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 187:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 188:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 189:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 190:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 191:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 192:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 193:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 194:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 195:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 196:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 197:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 198:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 199:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 200:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 201:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 202:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 203:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 204:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 205:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 207:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 208:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 209:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 210:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 211:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 212:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 213:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 214:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 215:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 216:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 217:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 218:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 219:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 220:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 221:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 222:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 223:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 224:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 225:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 226:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 227:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 228:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 229:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 230:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 231:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR,        /**< API cannot fulfil request */
 232:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING,      /**< The timer slice is currently running */
 233:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 234:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 235:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 236:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 237:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 238:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 239:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 240:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 241:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 242:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A,      /**< External clock-A */
 243:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B,      /**< External clock-B */
 244:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 245:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 246:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 247:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 248:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 249:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 250:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 251:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 252:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 253:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 254:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 255:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 256:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 257:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 258:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 259:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 260:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 261:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 262:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 263:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 264:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 265:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 266:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 267:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 268:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 269:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 270:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 271:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 272:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 273:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 274:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 275:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 276:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 277:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 278:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 279:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 280:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 281:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 282:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 283:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 284:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 285:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 286:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 287:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 288:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 289:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 290:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 291:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 292:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 293:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 294:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 295:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 296:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 297:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 298:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 299:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 300:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 301:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 302:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 303:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 304:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 305:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 306:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 307:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 308:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 309:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 310:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 311:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 312:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 313:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 314:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 315:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 316:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 317:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 318:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 319:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 320:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 321:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 322:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 323:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 324:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 325:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 326:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 327:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 328:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 329:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 330:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 331:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 332:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 333:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 334:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 335:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 336:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 337:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 338:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 339:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 340:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 341:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 342:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 343:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 344:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 345:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 346:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 347:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 348:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 349:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 350:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 351:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 352:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 353:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 354:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 355:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 356:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 357:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 358:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 359:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 360:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2,       /**< Slice Clock = fccu8/2 */
 361:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4,       /**< Slice Clock = fccu8/4 */
 362:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8,       /**< Slice Clock = fccu8/8 */
 363:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16,      /**< Slice Clock = fccu8/16 */
 364:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32,      /**< Slice Clock = fccu8/32 */
 365:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64,      /**< Slice Clock = fccu8/64 */
 366:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128,     /**< Slice Clock = fccu8/128 */
 367:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256,     /**< Slice Clock = fccu8/256 */
 368:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512,     /**< Slice Clock = fccu8/512 */
 369:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024,    /**< Slice Clock = fccu8/1024 */
 370:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048,    /**< Slice Clock = fccu8/2048 */
 371:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096,    /**< Slice Clock = fccu8/4096 */
 372:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192,    /**< Slice Clock = fccu8/8192 */
 373:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384,   /**< Slice Clock = fccu8/16384 */
 374:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 375:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 376:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 377:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 378:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 379:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 380:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 381:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 382:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 383:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2,       /**< DTC clock = Slice Clock/2 */
 384:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4,       /**< DTC clock = Slice Clock/4 */
 385:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 386:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 387:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 388:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 391:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 393:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 395:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2,             /**< Channel-2 status connected to Slice Status */
 396:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2, /**< \b Wired \b AND of Channel-1 and Channel-2 status con
 397:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 398:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 399:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 400:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 401:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 402:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 403:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 404:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 405:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 406:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 407:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 408:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 409:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 410:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1,          /**< Modulation for Compare Channel-1 */
 411:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2,          /**< Modulation for Compare Channel-2 */
 412:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 413:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 414:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 415:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 416:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 417:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 418:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 419:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 420:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 421:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP,                 /**< Stop function */
 422:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0, /**< Capture Event-0 function, CCycapt0 signal is used fo
 423:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 424:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1, /**< Capture Event-1 function, CCycapt1 signal is used fo
 425:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 426:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING,               /**< Gating function */
 427:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION,            /**< Direction function */
 428:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD,                 /**< Load function */
 429:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT,                /**< Counting function */
 430:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE,             /**< Override function */
 431:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION,           /**< Modulation function */
 432:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 433:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 434:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 435:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 436:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 437:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 438:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 439:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 440:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 441:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0,          /**< Event-0 */
 442:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1,          /**< Event-1 */
 443:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 444:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 445:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 446:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 447:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 448:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 449:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 450:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 451:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 452:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE, /**< Rising Edge of the input signal generates
 453:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 454:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE, /**< Falling Edge of the input signal generat
 455:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 456:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 457:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 458:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 459:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 460:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 461:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 462:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 463:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 464:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 465:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 466:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* Below enum items can be utilised specific to the functionality */
 467:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 468:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 469:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 470:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 471:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 472:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 473:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 474:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 475:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 476:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 477:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES,       /**< Input should be stable for 3 clock cycles */
 478:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES,       /**< Input should be stable for 5 clock cycles */
 479:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 480:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 481:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 482:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 483:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 484:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 485:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 486:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 487:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 488:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 489:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 490:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 491:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 492:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 493:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 494:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 495:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR,           /**< Without stopping timer, clears the TIMER regi
 496:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 497:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 498:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 499:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 500:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 501:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 502:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 503:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 504:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 505:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 506:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 507:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 508:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 509:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 510:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 511:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 512:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 513:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 514:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 515:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 516:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 517:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 518:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 519:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 520:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 521:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 522:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 523:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 524:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 525:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 526:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 527:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 528:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 529:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 530:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 531:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 532:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH,      /**< Clear only when timer value has been captured
 533:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW,       /**< Clear only when timer value has been captured
 534:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 535:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 536:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 539:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 541:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 543:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 544:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 545:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 546:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 547:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 548:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 549:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 550:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 551:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 552:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 553:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 554:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 555:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 556:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 557:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U,  /**< Period match counting up */
 558:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U,  /**< One match counting down */
 559:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U,  /**< Compare match counting up for channel 1
 560:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U,  /**< Compare match counting down for channel
 561:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U,  /**< Compare match counting up for channel 2
 562:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U,  /**< Compare match counting down for channel
 563:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U,  /**< Event-0 occurrence */
 564:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U,  /**< Event-1 occurrence */
 565:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 566:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 567:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 568:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 569:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 570:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 571:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 572:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 573:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 574:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 575:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 576:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 577:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 578:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 579:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 580:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 581:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 582:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 583:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 584:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 585:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 586:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 587:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 588:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 589:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 590:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 591:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1,         /**< Service Request Line-1 selected  */
 592:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2,         /**< Service Request Line-2 selected  */
 593:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 594:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 595:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 596:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 597:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 598:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 599:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 600:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 601:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 602:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 603:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 604:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 605:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 606:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 607:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 608:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 609:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 610:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 611:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 612:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 613:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 614:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 615:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 616:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 617:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 618:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 619:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 620:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 621:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 622:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 623:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 624:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 625:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 626:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 627:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 628:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 629:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 630:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 631:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 632:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 633:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 634:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 635:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 636:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 637:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 638:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 639:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 640:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 641:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 642:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 643:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 644:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 645:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 646:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 647:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 648:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 649:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 650:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 651:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT0
 652:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 653:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 654:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 655:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 656:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 657:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 658:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 659:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 660:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 661:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 662:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 663:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT1
 664:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 665:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 666:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 667:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 668:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 669:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 670:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 671:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 672:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 673:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 674:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 675:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT2
 676:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 677:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 678:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 679:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 680:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 681:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 682:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 683:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 684:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 685:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 686:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 687:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT3
 688:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 689:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 690:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 691:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 692:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 693:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 694:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 695:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 696:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 697:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 698:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 699:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 700:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 701:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 702:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 703:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 704:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 705:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 706:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 707:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 708:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 709:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 710:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 711:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 712:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 713:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 714:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 715:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 716:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 717:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 718:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 719:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 720:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 721:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 722:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 723:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 724:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 725:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 726:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 727:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 728:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 729:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 730:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 731:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 732:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 733:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 734:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 735:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 736:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 737:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 738:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 739:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 740:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 742:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 743:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 744:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 745:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 746:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 747:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 748:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 749:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 750:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 751:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 752:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 753:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 754:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 755:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 756:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 757:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 758:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 759:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 760:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 761:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 762:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 763:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 764:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 765:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 766:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 767:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 770:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 771:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 773:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 774:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 775:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 776:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 777:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 778:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 779:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 780:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 781:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 782:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 783:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 784:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 785:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 786:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 787:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 788:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 789:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 790:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 791:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 792:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 793:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 794:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 795:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 796:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 797:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U,  /**< SLICE-0 */
 798:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U,  /**< SLICE-1 */
 799:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U,  /**< SLICE-2 */
 800:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 801:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 802:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 803:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 804:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 805:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 806:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 807:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 808:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 809:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 810:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 811:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 812:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 813:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 814:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 815:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 816:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 817:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 818:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 819:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 820:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 821:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 822:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 823:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 824:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 825:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 826:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 827:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 828:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 830:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 832:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 833:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 834:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 835:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 836:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 837:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 838:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 839:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 840:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 841:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 842:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 843:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 844:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 845:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 846:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 847:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice status bit
 848:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 849:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS_BIT
 850:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 851:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 852:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 853:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_BIT_t;
 854:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 855:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 856:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 857:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 858:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 859:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 860:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 861:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 862:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 863:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 864:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 865:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 866:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 867:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 868:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 869:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 870:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 871:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 872:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 873:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 874:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 875:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 876:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 877:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma push
 878:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma anon_unions
 879:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 880:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning 586
 881:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 882:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 883:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 884:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 885:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 886:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 887:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 888:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 889:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 890:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 891:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 892:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 893:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 894:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 895:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 896:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 897:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 898:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 899:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 900:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 901:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 902:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 903:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 904:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 905:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 906:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 907:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 908:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 909:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 910:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 911:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 912:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 913:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 914:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 915:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 916:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 917:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 918:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 919:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 920:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 921:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 922:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 923:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 924:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 925:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 926:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 927:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 928:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 929:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 930:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 931:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 932:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 933:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 934:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 935:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 936:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 937:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 938:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 939:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 940:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 941:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 942:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 943:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 944:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 945:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 946:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 947:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 948:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 949:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 950:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 951:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 952:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 953:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 954:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 955:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 956:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 957:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 958:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 959:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 960:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 961:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 962:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 963:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 964:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 965:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 966:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 967:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0.
 968:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 969:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1.
 970:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 971:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2.
 972:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 973:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3.
 974:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 975:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 976:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 977:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 978:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 979:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 980:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 981:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 982:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 983:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 984:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 985:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */
 986:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 987:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 988:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 989:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 990:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 991:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 992:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 993:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 994:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t
 995:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register.
 996:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 997:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 998:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 999:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t
1000:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register.
1001:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1002:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1003:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1004:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t
1005:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
1006:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1007:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1008:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1009:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t
1010:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
1011:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1012:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
1013:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1015:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
1016:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1017:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value
1018:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1019:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1020:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1021:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering
1022:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1023:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1024:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1025:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1026:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1027:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1028:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1029:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1030:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1031:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1033:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1034:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1035:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1036:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1037:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1038:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1039:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1040:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1041:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1042:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1043:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1044:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1045:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1046:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1047:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1048:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1049:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1050:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1051:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1052:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1053:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1054:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1055:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma pop
1056:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1057:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning restore
1058:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1059:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1060:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1061:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1062:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1063:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1064:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1066:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1067:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1068:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1069:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1070:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1071:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1072:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1073:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1074:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1075:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1076:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1077:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1078:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1079:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1080:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1081:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1082:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1083:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1084:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)
1085:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1086:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1087:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)
1088:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1089:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1090:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)
1091:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1092:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1093:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1094:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1095:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)
1096:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1097:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1098:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)
1099:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1100:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1101:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)
1102:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1103:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1104:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1105:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1107:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1108:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1109:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1110:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1111:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1112:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1113:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1114:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1115:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1116:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1117:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1118:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1119:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1120:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1121:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1122:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1123:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1124:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1125:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1126:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1127:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1128:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1129:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1130:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1131:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1132:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1133:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1134:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1135:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1136:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1137:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1138:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1139:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1140:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1141:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1142:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1143:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1144:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1145:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1146:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1147:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1148:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1149:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1150:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1151:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1152:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1153:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1154:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1155:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1156:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1157:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1158:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1159:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1160:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1161:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1162:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1163:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1164:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1165:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1166:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1167:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1168:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1171:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1173:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1174:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1175:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1176:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1177:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1178:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1179:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1180:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1181:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1182:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1183:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1184:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1185:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1186:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1187:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1188:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1189:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1190:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  25              	 .loc 1 1190 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1191:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1192:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
  39              	 .loc 1 1192 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 8022     	 mov r2,#128
  42 000c 5200     	 lsl r2,r2,#1
  43 000e DA60     	 str r2,[r3,#12]
1193:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  44              	 .loc 1 1193 0
  45 0010 BD46     	 mov sp,r7
  46 0012 02B0     	 add sp,sp,#8
  47              	 
  48 0014 80BD     	 pop {r7,pc}
  49              	 .cfi_endproc
  50              	.LFE44:
  52 0016 C046     	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  53              	 .align 2
  54              	 .code 16
  55              	 .thumb_func
  57              	XMC_CCU8_SLICE_StopTimer:
  58              	.LFB68:
1194:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1195:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1196:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1197:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1198:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1199:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1200:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1202:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1203:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1204:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1205:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1206:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1207:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1208:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1209:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1210:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1211:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1212:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1213:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1214:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1215:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1216:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1217:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1218:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1219:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1220:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1221:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1222:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1225:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1227:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1230:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1239:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1242:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1244:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1247:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1252:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1253:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1254:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1255:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1256:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true.
1257:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1258:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1259:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1260:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1261:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1262:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1263:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1264:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1265:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1266:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1268:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1269:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1270:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1271:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1272:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1273:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1274:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1275:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1276:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1277:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1278:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1279:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1280:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1281:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1282:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1283:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1284:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1285:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1286:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1287:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
1288:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1289:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1290:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1291:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1292:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1293:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1294:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1295:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1296:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1297:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1298:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1299:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1300:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1301:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1302:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1303:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1304:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1305:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1306:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1307:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1308:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1309:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1310:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1311:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1312:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1313:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1314:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1315:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1316:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1317:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1319:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1320:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1321:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1322:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1323:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1324:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1325:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1326:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1327:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1328:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1329:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1330:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1331:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1332:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1333:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1334:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1335:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1336:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1337:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1338:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1339:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1340:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1341:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1342:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1343:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1344:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1345:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1346:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1347:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1348:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1349:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1350:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1351:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1352:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1353:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1354:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1355:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1356:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
1357:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1358:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1359:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1360:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1361:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1362:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1363:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1364:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1365:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1366:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1367:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1368:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1369:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1370:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1371:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1372:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1373:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1374:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1375:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1376:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1377:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1378:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1379:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1380:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1381:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1382:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1383:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1384:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1385:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
1386:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1387:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1388:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1389:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1390:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1391:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1392:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1393:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1394:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1396:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I,
1397:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1398:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1399:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1400:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1401:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1402:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1403:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1404:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1405:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1406:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1407:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1408:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1410:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1411:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1412:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1413:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1414:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1415:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1416:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1417:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1418:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1419:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1420:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1421:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1422:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1423:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1424:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1425:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1426:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1427:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1428:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1429:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1430:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1431:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1432:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1433:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1434:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1435:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1436:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1437:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1438:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1439:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1440:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1441:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1442:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1443:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1444:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1445:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1446:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1447:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1448:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1449:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1450:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1451:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1452:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1453:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1454:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1455:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1456:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1457:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1458:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1459:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1460:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1461:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1462:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1463:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1464:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1465:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1466:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1467:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1468:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1469:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1470:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1471:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1472:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1473:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1474:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1475:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1476:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1477:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1478:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1479:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1480:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1481:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1482:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1483:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1484:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1485:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1486:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1487:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1488:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1489:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1490:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1491:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1492:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1493:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1494:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1495:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1496:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1497:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1498:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1499:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1500:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1501:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1502:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1503:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1504:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1505:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1506:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1507:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1509:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1510:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1511:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1512:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1513:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1514:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1515:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1516:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1517:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1518:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1519:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1520:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1521:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1522:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1523:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1524:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1525:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1526:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1527:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1528:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1529:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1530:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1531:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1532:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1533:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1534:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1535:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1536:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1537:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1538:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1539:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1540:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1541:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1542:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1543:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1544:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1545:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1546:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1547:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1548:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1549:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1550:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1551:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1552:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1553:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1554:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1555:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1556:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1557:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1558:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1559:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1560:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1562:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1563:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1564:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1565:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1566:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1567:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1568:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1569:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1570:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1571:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1572:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1573:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1574:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1575:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1576:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1577:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1578:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1579:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1581:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1582:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1583:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1584:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1586:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1587:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1588:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1589:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1590:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1591:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1592:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1593:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1594:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1595:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1596:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1597:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1598:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1599:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1600:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1601:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1602:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1603:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1604:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1605:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1606:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1607:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1608:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1609:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1610:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1611:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1612:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1613:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1614:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1615:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1616:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1617:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1618:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1619:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1620:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1621:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1622:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1623:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1624:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1625:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1626:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1627:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1628:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1629:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1630:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1631:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1632:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1633:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1634:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1635:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1636:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1637:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1638:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1639:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1640:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1641:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1642:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1643:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1644:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1645:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1646:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1647:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1648:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1649:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1650:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1651:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
1652:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1653:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     );
1654:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1655:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1656:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1657:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1658:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1659:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1660:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1661:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1662:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1663:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1664:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1665:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected.
1666:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1667:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1668:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1669:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1670:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1671:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1672:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1673:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1674:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1675:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1676:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1677:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1679:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1680:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1681:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1682:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1683:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1684:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1685:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1686:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1687:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1688:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1689:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1690:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1691:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1692:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1693:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1694:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1695:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1696:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1697:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1698:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1699:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1700:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1701:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1702:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1703:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1704:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1705:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1706:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1707:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1708:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1709:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1711:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1712:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1713:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1714:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1715:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1716:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1717:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1718:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1719:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1720:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1721:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1722:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1723:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1724:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1726:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1727:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1728:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1729:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1730:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1731:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1732:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1733:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1734:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1735:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1736:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1737:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1738:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1739:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1740:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1741:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1742:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1743:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1744:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1745:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1746:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1747:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1748:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1749:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1750:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1751:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1752:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1753:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1754:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1757:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1759:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1760:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1763:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1764:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1765:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1766:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1768:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1769:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1770:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1771:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1772:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1773:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1774:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1775:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1776:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1777:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1779:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1780:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1781:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1785:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1786:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1787:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1788:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1789:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1790:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1791:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1792:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1793:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1794:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1795:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1796:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1797:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1798:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1799:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1800:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1801:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1802:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1804:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1805:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1806:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1807:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1808:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1809:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1810:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1811:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1812:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1813:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1814:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1815:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1816:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1817:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1818:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1819:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1821:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1822:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1823:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1824:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1825:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1826:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1827:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1828:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1829:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1830:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1831:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1832:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1833:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1834:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1835:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1836:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1837:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1838:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1839:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1840:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1841:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1842:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1843:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1844:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1845:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1846:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1847:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1848:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1849:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1850:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1851:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1852:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1853:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_config,
1854:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_config);
1855:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1856:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1857:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1858:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1859:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1860:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1861:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1862:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1863:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1864:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1865:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1866:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1867:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1868:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1869:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1870:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1871:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1872:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1873:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1874:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1875:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1876:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1877:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1878:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1879:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1880:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1881:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1882:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1883:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1884:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1885:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1886:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1887:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1888:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1889:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1890:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1891:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1892:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1893:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1894:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1895:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1896:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1897:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1898:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1899:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1900:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1901:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1902:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1903:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1904:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1905:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1906:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1907:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1908:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1909:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1910:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1911:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1912:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1913:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1914:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1915:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1916:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1917:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1918:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1919:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1920:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1921:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1922:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1923:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1924:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1925:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1926:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1927:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1928:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1929:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1930:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1931:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1932:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1933:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1934:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1935:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1936:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1937:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1938:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1939:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1940:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1941:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1942:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1944:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1945:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1946:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1947:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1948:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1949:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1950:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1951:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1956:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1959:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1962:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1964:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1965:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1966:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1967:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1968:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1969:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1970:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1971:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1972:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1973:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1974:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1975:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1976:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1977:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1978:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1979:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1980:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1981:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1982:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1983:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1984:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1985:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1986:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1987:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1988:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1989:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1990:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1991:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1992:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1993:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1994:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1995:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1996:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1997:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1998:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1999:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
2000:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2001:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2002:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
2003:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2004:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2005:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2006:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2007:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2008:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
2009:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2011:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
2012:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
2013:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
2014:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2015:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2016:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2017:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2018:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2019:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2020:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2021:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_T
2022:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2023:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2024:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2025:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2026:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2027:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2028:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2029:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2030:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2031:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2032:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2033:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2034:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2035:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2036:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2037:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2038:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2039:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
2040:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2041:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2042:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2043:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2044:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2045:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2046:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2048:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2049:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2050:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2051:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2052:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2053:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2054:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2055:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  59              	 .loc 1 2055 0
  60              	 .cfi_startproc
  61 0000 80B5     	 push {r7,lr}
  62              	.LCFI3:
  63              	 .cfi_def_cfa_offset 8
  64              	 .cfi_offset 7,-8
  65              	 .cfi_offset 14,-4
  66 0002 82B0     	 sub sp,sp,#8
  67              	.LCFI4:
  68              	 .cfi_def_cfa_offset 16
  69 0004 00AF     	 add r7,sp,#0
  70              	.LCFI5:
  71              	 .cfi_def_cfa_register 7
  72 0006 7860     	 str r0,[r7,#4]
2056:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2057:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  73              	 .loc 1 2057 0
  74 0008 7B68     	 ldr r3,[r7,#4]
  75 000a 0122     	 mov r2,#1
  76 000c 1A61     	 str r2,[r3,#16]
2058:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  77              	 .loc 1 2058 0
  78 000e BD46     	 mov sp,r7
  79 0010 02B0     	 add sp,sp,#8
  80              	 
  81 0012 80BD     	 pop {r7,pc}
  82              	 .cfi_endproc
  83              	.LFE68:
  85              	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
  86              	 .align 2
  87              	 .code 16
  88              	 .thumb_func
  90              	XMC_CCU8_SLICE_SetDitherCompareValue:
  91              	.LFB85:
2059:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2060:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2061:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2062:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2063:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2064:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2065:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2066:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2067:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2068:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2069:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2071:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2072:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2073:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2074:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2075:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2076:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2077:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2078:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2079:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2080:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2081:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2082:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2083:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2084:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2085:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2086:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2088:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2089:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2090:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2091:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2092:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2093:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2094:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2095:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2096:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2097:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2098:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2099:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2100:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2101:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2102:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2103:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2104:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2105:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2106:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2107:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2109:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2110:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2111:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2112:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2113:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2114:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2115:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2116:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2117:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2118:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2119:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2120:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2121:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2122:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2123:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2124:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2125:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2126:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2127:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2128:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2129:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2130:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2131:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2132:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2133:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2134:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2135:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2136:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2137:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2138:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2139:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2140:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2141:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2142:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2143:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2144:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2145:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2147:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2148:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2149:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2150:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2151:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2152:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2153:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_
2154:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2155:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2156:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2157:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2158:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2159:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2160:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2161:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2162:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2163:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2164:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2165:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2166:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2167:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2168:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2169:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2170:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2171:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2172:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2173:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2174:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2175:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2176:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2177:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2178:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2179:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2180:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2181:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2182:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2183:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2184:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2185:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2186:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2187:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2188:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2189:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2190:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TC
2191:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2192:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2193:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2194:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2195:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2196:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2197:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2198:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2199:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2200:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2201:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2202:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2203:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2204:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2205:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2206:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2207:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2208:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2209:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2210:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2211:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2212:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2213:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2214:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2215:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2216:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2217:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2218:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2219:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2220:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2221:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2222:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2223:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2224:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2225:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2226:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2227:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2228:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2229:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2230:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2231:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2232:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2233:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->PR);
2234:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2235:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2236:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2237:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2238:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2239:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2240:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2241:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2242:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2243:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2244:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2245:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2246:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2247:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2248:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2249:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2250:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2251:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2252:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2253:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2254:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2255:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const uint16_t compare_val);
2256:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2257:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2258:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2259:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2260:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2261:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2262:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2263:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2264:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2265:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2266:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2267:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2268:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2269:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2270:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2271:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2272:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2273:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2274:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2275:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2276:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2277:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2278:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2279:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2280:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2281:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2282:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2283:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2284:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2285:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2286:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2287:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2288:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2289:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2290:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2291:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2292:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2293:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2294:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2295:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2296:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2297:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2298:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2299:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2300:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2301:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2302:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2303:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2304:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2305:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2306:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2307:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2308:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2309:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2310:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2311:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2312:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2313:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2314:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2315:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2316:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2317:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2318:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2319:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2320:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2321:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2322:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2323:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2324:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2325:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2326:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2327:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2328:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return
2329:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2330:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2331:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2332:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2333:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2334:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2335:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2336:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2337:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2338:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2339:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2340:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2341:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2342:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2343:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2344:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2345:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2346:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2347:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2348:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2349:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2350:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2351:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2352:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2353:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2354:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2355:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2356:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2357:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2358:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2359:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2360:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2361:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2362:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2363:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2364:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2365:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2366:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2367:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2368:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2369:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2370:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2371:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2372:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2373:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2374:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR>
2375:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2376:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2377:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2378:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2379:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2380:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2381:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2382:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2383:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2384:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;
2385:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2386:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2387:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2388:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2389:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2390:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2391:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2392:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2393:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2394:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2395:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2396:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2397:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2398:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2399:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2400:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2401:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2402:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->TIMER);
2403:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2404:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2405:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2406:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2407:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2408:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2409:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2410:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2411:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2412:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2413:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2414:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2415:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2416:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2418:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2419:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2421:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2422:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2423:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2424:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2425:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2426:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2427:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2428:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2429:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2430:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2435:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2436:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2437:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2438:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2439:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2440:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2441:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2442:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2443:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2444:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2445:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2446:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2447:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2448:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2449:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2450:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2451:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2452:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2453:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2454:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2455:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2456:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2457:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2458:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2459:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2460:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2461:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2462:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2463:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2464:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2465:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2466:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2467:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2468:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2469:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2470:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2471:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2472:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2473:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2474:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2475:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2476:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2477:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2478:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2479:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2480:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2481:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2482:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2483:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2484:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2485:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2486:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2487:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2488:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2489:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2490:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2491:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2492:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2493:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2494:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2495:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2496:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2501:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2502:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2503:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2504:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2505:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2506:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2507:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2508:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2509:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2510:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2511:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2512:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2513:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2514:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2515:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2516:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2517:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2518:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2519:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2520:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2521:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2522:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2523:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2524:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2525:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2526:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2527:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2528:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2529:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2530:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2531:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  92              	 .loc 1 2531 0
  93              	 .cfi_startproc
  94 0000 80B5     	 push {r7,lr}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 8
  97              	 .cfi_offset 7,-8
  98              	 .cfi_offset 14,-4
  99 0002 82B0     	 sub sp,sp,#8
 100              	.LCFI7:
 101              	 .cfi_def_cfa_offset 16
 102 0004 00AF     	 add r7,sp,#0
 103              	.LCFI8:
 104              	 .cfi_def_cfa_register 7
 105 0006 7860     	 str r0,[r7,#4]
 106 0008 0A1C     	 mov r2,r1
 107 000a FB1C     	 add r3,r7,#3
 108 000c 1A70     	 strb r2,[r3]
2532:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2533:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2534:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2535:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 109              	 .loc 1 2535 0
 110 000e FB1C     	 add r3,r7,#3
 111 0010 1A78     	 ldrb r2,[r3]
 112 0012 7B68     	 ldr r3,[r7,#4]
 113 0014 1A62     	 str r2,[r3,#32]
2536:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 114              	 .loc 1 2536 0
 115 0016 BD46     	 mov sp,r7
 116 0018 02B0     	 add sp,sp,#8
 117              	 
 118 001a 80BD     	 pop {r7,pc}
 119              	 .cfi_endproc
 120              	.LFE85:
 122              	 .section .text.XMC_CCU8_lGateClock,"ax",%progbits
 123              	 .align 2
 124              	 .code 16
 125              	 .thumb_func
 127              	XMC_CCU8_lGateClock:
 128              	.LFB121:
 129              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu8.c"
   1:../Libraries/XMCLib/src/xmc_ccu8.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @date 2017-04-27
   4:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu8.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  12:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  14:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_ccu8.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_ccu8.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_ccu8.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_ccu8.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  21:../Libraries/XMCLib/src/xmc_ccu8.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_ccu8.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_ccu8.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_ccu8.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_ccu8.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_ccu8.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  28:../Libraries/XMCLib/src/xmc_ccu8.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_ccu8.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_ccu8.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_ccu8.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_ccu8.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_ccu8.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_ccu8.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_ccu8.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_ccu8.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  41:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_ccu8.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  44:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  47:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  49:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  50:../Libraries/XMCLib/src/xmc_ccu8.c ****  *       during external load event.
  51:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  52:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  53:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  54:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  55:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  56:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  57:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  58:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  59:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  60:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  61:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  62:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  63:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  64:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  65:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  66:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2017-02-25:
  67:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_lAssertReset(), XMC_CCU8_lDeassertReset(), XMC_CCU8_lGateClock() and XMC_CCU8_lUn
  68:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  69:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2017-04-27:
  70:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  71:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  72:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2019-04-29:
  73:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_SetTimerRepeatMode() fix assertion
  74:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  75:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @endcond
  76:../Libraries/XMCLib/src/xmc_ccu8.c ****  */
  77:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  79:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  81:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  82:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  83:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  84:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  85:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ccu8.c ****  * MACROS
  87:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  89:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  90:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  91:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  92:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  93:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  94:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  95:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  96:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
  97:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  98:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  99:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
 100:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
 101:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
 102:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
 103:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
 104:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
 105:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 106:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
 107:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 108:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 109:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
 110:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
 111:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
 112:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
 113:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 114:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 115:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 116:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 117:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 118:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 119:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 120:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 121:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 122:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 123:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 124:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 125:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 126:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 127:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 128:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 129:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 130:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 131:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 132:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 133:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 134:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 135:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 136:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 137:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 138:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 139:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 140:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 141:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 142:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 143:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 144:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 145:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 146:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 147:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 148:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 149:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 150:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 151:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 152:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 153:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 154:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 155:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 156:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 157:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 158:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 159:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 160:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 161:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 162:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 163:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 164:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 165:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 166:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 167:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 168:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 169:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 170:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 171:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 172:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 173:../Libraries/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 174:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 175:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 176:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 177:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 178:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 179:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 180:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 183:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 184:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 185:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 186:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 187:../Libraries/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 188:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 189:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 190:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 191:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 192:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 193:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 194:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 195:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 196:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 197:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 198:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 199:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 200:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 201:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 203:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 204:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 205:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 206:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 207:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 208:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 209:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 210:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 211:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 212:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 213:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 214:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 215:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 216:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 217:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 218:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 219:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 220:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 221:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 222:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 224:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 225:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 226:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 227:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 228:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 229:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 130              	 .loc 2 229 0
 131              	 .cfi_startproc
 132 0000 80B5     	 push {r7,lr}
 133              	.LCFI9:
 134              	 .cfi_def_cfa_offset 8
 135              	 .cfi_offset 7,-8
 136              	 .cfi_offset 14,-4
 137 0002 82B0     	 sub sp,sp,#8
 138              	.LCFI10:
 139              	 .cfi_def_cfa_offset 16
 140 0004 00AF     	 add r7,sp,#0
 141              	.LCFI11:
 142              	 .cfi_def_cfa_register 7
 143 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 144              	 .loc 2 230 0
 145 0008 7A68     	 ldr r2,[r7,#4]
 146 000a A023     	 mov r3,#160
 147 000c DB05     	 lsl r3,r3,#23
 148 000e 9A42     	 cmp r2,r3
 149 0010 02D1     	 bne .L4
 231:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 232:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 150              	 .loc 2 232 0
 151 0012 0220     	 mov r0,#2
 152 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 153              	.L4:
 233:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 234:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 235:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 236:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 237:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 238:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 239:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 240:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 241:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 242:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 244:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 154              	 .loc 2 244 0
 155 0018 BD46     	 mov sp,r7
 156 001a 02B0     	 add sp,sp,#8
 157              	 
 158 001c 80BD     	 pop {r7,pc}
 159              	 .cfi_endproc
 160              	.LFE121:
 162 001e C046     	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
 163              	 .align 2
 164              	 .code 16
 165              	 .thumb_func
 167              	XMC_CCU8_lUngateClock:
 168              	.LFB122:
 245:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 246:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 247:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 169              	 .loc 2 247 0
 170              	 .cfi_startproc
 171 0000 80B5     	 push {r7,lr}
 172              	.LCFI12:
 173              	 .cfi_def_cfa_offset 8
 174              	 .cfi_offset 7,-8
 175              	 .cfi_offset 14,-4
 176 0002 82B0     	 sub sp,sp,#8
 177              	.LCFI13:
 178              	 .cfi_def_cfa_offset 16
 179 0004 00AF     	 add r7,sp,#0
 180              	.LCFI14:
 181              	 .cfi_def_cfa_register 7
 182 0006 7860     	 str r0,[r7,#4]
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 183              	 .loc 2 248 0
 184 0008 7A68     	 ldr r2,[r7,#4]
 185 000a A023     	 mov r3,#160
 186 000c DB05     	 lsl r3,r3,#23
 187 000e 9A42     	 cmp r2,r3
 188 0010 02D1     	 bne .L6
 249:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 250:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 189              	 .loc 2 250 0
 190 0012 0220     	 mov r0,#2
 191 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 192              	.L6:
 251:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 252:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 253:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 254:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 255:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 256:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 257:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 258:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 259:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 260:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 261:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 262:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 193              	 .loc 2 262 0
 194 0018 BD46     	 mov sp,r7
 195 001a 02B0     	 add sp,sp,#8
 196              	 
 197 001c 80BD     	 pop {r7,pc}
 198              	 .cfi_endproc
 199              	.LFE122:
 201 001e C046     	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 202              	 .align 2
 203              	 .global XMC_CCU8_EnableModule
 204              	 .code 16
 205              	 .thumb_func
 207              	XMC_CCU8_EnableModule:
 208              	.LFB123:
 263:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 264:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 265:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 266:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 267:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 268:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 269:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 270:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 271:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 272:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 273:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 274:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 275:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 276:../Libraries/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 277:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 278:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 279:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 280:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 281:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 209              	 .loc 2 281 0
 210              	 .cfi_startproc
 211 0000 80B5     	 push {r7,lr}
 212              	.LCFI15:
 213              	 .cfi_def_cfa_offset 8
 214              	 .cfi_offset 7,-8
 215              	 .cfi_offset 14,-4
 216 0002 82B0     	 sub sp,sp,#8
 217              	.LCFI16:
 218              	 .cfi_def_cfa_offset 16
 219 0004 00AF     	 add r7,sp,#0
 220              	.LCFI17:
 221              	 .cfi_def_cfa_register 7
 222 0006 7860     	 str r0,[r7,#4]
 282:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 283:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 284:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 285:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 286:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 287:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 288:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 289:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 290:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 223              	 .loc 2 290 0
 224 0008 7B68     	 ldr r3,[r7,#4]
 225 000a 181C     	 mov r0,r3
 226 000c FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 291:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 292:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 293:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 294:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 295:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 296:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 227              	 .loc 2 296 0
 228 0010 BD46     	 mov sp,r7
 229 0012 02B0     	 add sp,sp,#8
 230              	 
 231 0014 80BD     	 pop {r7,pc}
 232              	 .cfi_endproc
 233              	.LFE123:
 235 0016 C046     	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 236              	 .align 2
 237              	 .global XMC_CCU8_DisableModule
 238              	 .code 16
 239              	 .thumb_func
 241              	XMC_CCU8_DisableModule:
 242              	.LFB124:
 297:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 298:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 299:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 300:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 243              	 .loc 2 300 0
 244              	 .cfi_startproc
 245 0000 80B5     	 push {r7,lr}
 246              	.LCFI18:
 247              	 .cfi_def_cfa_offset 8
 248              	 .cfi_offset 7,-8
 249              	 .cfi_offset 14,-4
 250 0002 82B0     	 sub sp,sp,#8
 251              	.LCFI19:
 252              	 .cfi_def_cfa_offset 16
 253 0004 00AF     	 add r7,sp,#0
 254              	.LCFI20:
 255              	 .cfi_def_cfa_register 7
 256 0006 7860     	 str r0,[r7,#4]
 301:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 302:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 303:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 304:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 305:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 306:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 307:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 308:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 257              	 .loc 2 308 0
 258 0008 7B68     	 ldr r3,[r7,#4]
 259 000a 181C     	 mov r0,r3
 260 000c FFF7FEFF 	 bl XMC_CCU8_lGateClock
 309:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 310:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 261              	 .loc 2 310 0
 262 0010 BD46     	 mov sp,r7
 263 0012 02B0     	 add sp,sp,#8
 264              	 
 265 0014 80BD     	 pop {r7,pc}
 266              	 .cfi_endproc
 267              	.LFE124:
 269 0016 C046     	 .section .text.XMC_CCU8_Init,"ax",%progbits
 270              	 .align 2
 271              	 .global XMC_CCU8_Init
 272              	 .code 16
 273              	 .thumb_func
 275              	XMC_CCU8_Init:
 276              	.LFB125:
 311:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 312:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 313:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 314:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 277              	 .loc 2 314 0
 278              	 .cfi_startproc
 279 0000 80B5     	 push {r7,lr}
 280              	.LCFI21:
 281              	 .cfi_def_cfa_offset 8
 282              	 .cfi_offset 7,-8
 283              	 .cfi_offset 14,-4
 284 0002 84B0     	 sub sp,sp,#16
 285              	.LCFI22:
 286              	 .cfi_def_cfa_offset 24
 287 0004 00AF     	 add r7,sp,#0
 288              	.LCFI23:
 289              	 .cfi_def_cfa_register 7
 290 0006 7860     	 str r0,[r7,#4]
 291 0008 0A1C     	 mov r2,r1
 292 000a FB1C     	 add r3,r7,#3
 293 000c 1A70     	 strb r2,[r3]
 315:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 316:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 317:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 318:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 319:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 320:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 321:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 294              	 .loc 2 321 0
 295 000e 7B68     	 ldr r3,[r7,#4]
 296 0010 181C     	 mov r0,r3
 297 0012 FFF7FEFF 	 bl XMC_CCU8_EnableModule
 322:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 323:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 298              	 .loc 2 323 0
 299 0016 7B68     	 ldr r3,[r7,#4]
 300 0018 181C     	 mov r0,r3
 301 001a FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 324:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 325:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 302              	 .loc 2 325 0
 303 001e 7B68     	 ldr r3,[r7,#4]
 304 0020 1B68     	 ldr r3,[r3]
 305 0022 FB60     	 str r3,[r7,#12]
 326:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 306              	 .loc 2 326 0
 307 0024 FB68     	 ldr r3,[r7,#12]
 308 0026 074A     	 ldr r2,.L11
 309 0028 1340     	 and r3,r2
 310 002a FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 311              	 .loc 2 327 0
 312 002c FB1C     	 add r3,r7,#3
 313 002e 1B78     	 ldrb r3,[r3]
 314 0030 9B03     	 lsl r3,r3,#14
 315 0032 FA68     	 ldr r2,[r7,#12]
 316 0034 1343     	 orr r3,r2
 317 0036 FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 329:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 318              	 .loc 2 329 0
 319 0038 7B68     	 ldr r3,[r7,#4]
 320 003a FA68     	 ldr r2,[r7,#12]
 321 003c 1A60     	 str r2,[r3]
 330:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 322              	 .loc 2 330 0
 323 003e BD46     	 mov sp,r7
 324 0040 04B0     	 add sp,sp,#16
 325              	 
 326 0042 80BD     	 pop {r7,pc}
 327              	.L12:
 328              	 .align 2
 329              	.L11:
 330 0044 FF3FFFFF 	 .word -49153
 331              	 .cfi_endproc
 332              	.LFE125:
 334              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 335              	 .align 2
 336              	 .global XMC_CCU8_SetModuleClock
 337              	 .code 16
 338              	 .thumb_func
 340              	XMC_CCU8_SetModuleClock:
 341              	.LFB126:
 331:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 332:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 333:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 334:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 342              	 .loc 2 334 0
 343              	 .cfi_startproc
 344 0000 80B5     	 push {r7,lr}
 345              	.LCFI24:
 346              	 .cfi_def_cfa_offset 8
 347              	 .cfi_offset 7,-8
 348              	 .cfi_offset 14,-4
 349 0002 84B0     	 sub sp,sp,#16
 350              	.LCFI25:
 351              	 .cfi_def_cfa_offset 24
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI26:
 354              	 .cfi_def_cfa_register 7
 355 0006 7860     	 str r0,[r7,#4]
 356 0008 0A1C     	 mov r2,r1
 357 000a FB1C     	 add r3,r7,#3
 358 000c 1A70     	 strb r2,[r3]
 335:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 336:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 337:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 338:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 339:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 340:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 359              	 .loc 2 340 0
 360 000e 7B68     	 ldr r3,[r7,#4]
 361 0010 1B68     	 ldr r3,[r3]
 362 0012 FB60     	 str r3,[r7,#12]
 341:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 363              	 .loc 2 341 0
 364 0014 FB68     	 ldr r3,[r7,#12]
 365 0016 3022     	 mov r2,#48
 366 0018 9343     	 bic r3,r2
 367 001a FB60     	 str r3,[r7,#12]
 342:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 368              	 .loc 2 342 0
 369 001c FB1C     	 add r3,r7,#3
 370 001e 1B78     	 ldrb r3,[r3]
 371 0020 1B01     	 lsl r3,r3,#4
 372 0022 FA68     	 ldr r2,[r7,#12]
 373 0024 1343     	 orr r3,r2
 374 0026 FB60     	 str r3,[r7,#12]
 343:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 344:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 375              	 .loc 2 344 0
 376 0028 7B68     	 ldr r3,[r7,#4]
 377 002a FA68     	 ldr r2,[r7,#12]
 378 002c 1A60     	 str r2,[r3]
 345:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 379              	 .loc 2 345 0
 380 002e BD46     	 mov sp,r7
 381 0030 04B0     	 add sp,sp,#16
 382              	 
 383 0032 80BD     	 pop {r7,pc}
 384              	 .cfi_endproc
 385              	.LFE126:
 387              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 388              	 .align 2
 389              	 .global XMC_CCU8_SLICE_CompareInit
 390              	 .code 16
 391              	 .thumb_func
 393              	XMC_CCU8_SLICE_CompareInit:
 394              	.LFB127:
 346:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 347:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 348:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 349:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 350:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 395              	 .loc 2 350 0
 396              	 .cfi_startproc
 397 0000 80B5     	 push {r7,lr}
 398              	.LCFI27:
 399              	 .cfi_def_cfa_offset 8
 400              	 .cfi_offset 7,-8
 401              	 .cfi_offset 14,-4
 402 0002 82B0     	 sub sp,sp,#8
 403              	.LCFI28:
 404              	 .cfi_def_cfa_offset 16
 405 0004 00AF     	 add r7,sp,#0
 406              	.LCFI29:
 407              	 .cfi_def_cfa_register 7
 408 0006 7860     	 str r0,[r7,#4]
 409 0008 3960     	 str r1,[r7]
 351:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 352:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 353:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 354:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 355:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 410              	 .loc 2 355 0
 411 000a 7B68     	 ldr r3,[r7,#4]
 412 000c 181C     	 mov r0,r3
 413 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 356:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 357:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 414              	 .loc 2 357 0
 415 0012 3B68     	 ldr r3,[r7]
 416 0014 1A68     	 ldr r2,[r3]
 417 0016 7B68     	 ldr r3,[r7,#4]
 418 0018 5A61     	 str r2,[r3,#20]
 358:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 359:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 419              	 .loc 2 359 0
 420 001a 3B68     	 ldr r3,[r7]
 421 001c 5B7B     	 ldrb r3,[r3,#13]
 422 001e DB06     	 lsl r3,r3,#27
 423 0020 DB0F     	 lsr r3,r3,#31
 424 0022 DBB2     	 uxtb r3,r3
 425 0024 1A05     	 lsl r2,r3,#20
 426 0026 7B68     	 ldr r3,[r7,#4]
 427 0028 5A60     	 str r2,[r3,#4]
 360:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 361:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 428              	 .loc 2 361 0
 429 002a 3B68     	 ldr r3,[r7]
 430 002c 1B7B     	 ldrb r3,[r3,#12]
 431 002e 1B07     	 lsl r3,r3,#28
 432 0030 1B0F     	 lsr r3,r3,#28
 433 0032 DBB2     	 uxtb r3,r3
 434 0034 1A1C     	 mov r2,r3
 435 0036 7B68     	 ldr r3,[r7,#4]
 436 0038 5A62     	 str r2,[r3,#36]
 362:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 363:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 437              	 .loc 2 363 0
 438 003a 3B68     	 ldr r3,[r7]
 439 003c 1B7B     	 ldrb r3,[r3,#12]
 440 003e 1B06     	 lsl r3,r3,#24
 441 0040 1B0F     	 lsr r3,r3,#28
 442 0042 DBB2     	 uxtb r3,r3
 443 0044 1A1C     	 mov r2,r3
 444 0046 7B68     	 ldr r3,[r7,#4]
 445 0048 DA62     	 str r2,[r3,#44]
 364:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 365:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 446              	 .loc 2 365 0
 447 004a 3B68     	 ldr r3,[r7]
 448 004c 5B7B     	 ldrb r3,[r3,#13]
 449 004e 1B07     	 lsl r3,r3,#28
 450 0050 1B0F     	 lsr r3,r3,#28
 451 0052 DBB2     	 uxtb r3,r3
 452 0054 1A1C     	 mov r2,r3
 453 0056 7B68     	 ldr r3,[r7,#4]
 454 0058 1A62     	 str r2,[r3,#32]
 366:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 367:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 455              	 .loc 2 367 0
 456 005a 3B68     	 ldr r3,[r7]
 457 005c 5A68     	 ldr r2,[r3,#4]
 458 005e 7B68     	 ldr r3,[r7,#4]
 459 0060 9A61     	 str r2,[r3,#24]
 368:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 369:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 370:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 371:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 372:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 460              	 .loc 2 372 0
 461 0062 3B68     	 ldr r3,[r7]
 462 0064 9B68     	 ldr r3,[r3,#8]
 463 0066 1422     	 mov r2,#20
 464 0068 5A40     	 eor r2,r3
 465 006a 7B68     	 ldr r3,[r7,#4]
 466 006c 9A64     	 str r2,[r3,#72]
 373:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 374:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 467              	 .loc 2 374 0
 468 006e BD46     	 mov sp,r7
 469 0070 02B0     	 add sp,sp,#8
 470              	 
 471 0072 80BD     	 pop {r7,pc}
 472              	 .cfi_endproc
 473              	.LFE127:
 475              	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 476              	 .align 2
 477              	 .global XMC_CCU8_SLICE_CaptureInit
 478              	 .code 16
 479              	 .thumb_func
 481              	XMC_CCU8_SLICE_CaptureInit:
 482              	.LFB128:
 375:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 376:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 377:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
 378:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 379:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 483              	 .loc 2 379 0
 484              	 .cfi_startproc
 485 0000 80B5     	 push {r7,lr}
 486              	.LCFI30:
 487              	 .cfi_def_cfa_offset 8
 488              	 .cfi_offset 7,-8
 489              	 .cfi_offset 14,-4
 490 0002 82B0     	 sub sp,sp,#8
 491              	.LCFI31:
 492              	 .cfi_def_cfa_offset 16
 493 0004 00AF     	 add r7,sp,#0
 494              	.LCFI32:
 495              	 .cfi_def_cfa_register 7
 496 0006 7860     	 str r0,[r7,#4]
 497 0008 3960     	 str r1,[r7]
 380:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 381:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL",
 382:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 383:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 384:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 498              	 .loc 2 384 0
 499 000a 7B68     	 ldr r3,[r7,#4]
 500 000c 181C     	 mov r0,r3
 501 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 385:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 386:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 502              	 .loc 2 386 0
 503 0012 3B68     	 ldr r3,[r7]
 504 0014 1A68     	 ldr r2,[r3]
 505 0016 7B68     	 ldr r3,[r7,#4]
 506 0018 5A61     	 str r2,[r3,#20]
 387:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 388:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 507              	 .loc 2 388 0
 508 001a 3B68     	 ldr r3,[r7]
 509 001c 5B79     	 ldrb r3,[r3,#5]
 510 001e DB07     	 lsl r3,r3,#31
 511 0020 DB0F     	 lsr r3,r3,#31
 512 0022 DBB2     	 uxtb r3,r3
 513 0024 1A05     	 lsl r2,r3,#20
 514 0026 7B68     	 ldr r3,[r7,#4]
 515 0028 5A60     	 str r2,[r3,#4]
 389:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 390:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 516              	 .loc 2 390 0
 517 002a 3B68     	 ldr r3,[r7]
 518 002c 1B79     	 ldrb r3,[r3,#4]
 519 002e 1B06     	 lsl r3,r3,#24
 520 0030 1B0F     	 lsr r3,r3,#28
 521 0032 DBB2     	 uxtb r3,r3
 522 0034 1A1C     	 mov r2,r3
 523 0036 7B68     	 ldr r3,[r7,#4]
 524 0038 DA62     	 str r2,[r3,#44]
 391:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 392:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 525              	 .loc 2 392 0
 526 003a 3B68     	 ldr r3,[r7]
 527 003c 1B79     	 ldrb r3,[r3,#4]
 528 003e 1B07     	 lsl r3,r3,#28
 529 0040 1B0F     	 lsr r3,r3,#28
 530 0042 DBB2     	 uxtb r3,r3
 531 0044 1A1C     	 mov r2,r3
 532 0046 7B68     	 ldr r3,[r7,#4]
 533 0048 5A62     	 str r2,[r3,#36]
 393:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 534              	 .loc 2 393 0
 535 004a BD46     	 mov sp,r7
 536 004c 02B0     	 add sp,sp,#8
 537              	 
 538 004e 80BD     	 pop {r7,pc}
 539              	 .cfi_endproc
 540              	.LFE128:
 542              	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 543              	 .align 2
 544              	 .global XMC_CCU8_SLICE_SetOutPath
 545              	 .code 16
 546              	 .thumb_func
 548              	XMC_CCU8_SLICE_SetOutPath:
 549              	.LFB129:
 394:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 395:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 396:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 397:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 550              	 .loc 2 397 0
 551              	 .cfi_startproc
 552 0000 80B5     	 push {r7,lr}
 553              	.LCFI33:
 554              	 .cfi_def_cfa_offset 8
 555              	 .cfi_offset 7,-8
 556              	 .cfi_offset 14,-4
 557 0002 84B0     	 sub sp,sp,#16
 558              	.LCFI34:
 559              	 .cfi_def_cfa_offset 24
 560 0004 00AF     	 add r7,sp,#0
 561              	.LCFI35:
 562              	 .cfi_def_cfa_register 7
 563 0006 7860     	 str r0,[r7,#4]
 564 0008 3960     	 str r1,[r7]
 398:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 399:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 400:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 565              	 .loc 2 400 0
 566 000a 7B68     	 ldr r3,[r7,#4]
 567 000c 9B6C     	 ldr r3,[r3,#72]
 568 000e FB60     	 str r3,[r7,#12]
 401:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 402:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 569              	 .loc 2 402 0
 570 0010 3B68     	 ldr r3,[r7]
 571 0012 1B0C     	 lsr r3,r3,#16
 572 0014 DA43     	 mvn r2,r3
 573 0016 FB68     	 ldr r3,[r7,#12]
 574 0018 1340     	 and r3,r2
 575 001a FB60     	 str r3,[r7,#12]
 403:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 576              	 .loc 2 403 0
 577 001c 3B68     	 ldr r3,[r7]
 578 001e 1B04     	 lsl r3,r3,#16
 579 0020 1B0C     	 lsr r3,r3,#16
 580 0022 FA68     	 ldr r2,[r7,#12]
 581 0024 1343     	 orr r3,r2
 582 0026 FB60     	 str r3,[r7,#12]
 404:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 405:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 406:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 407:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 408:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 583              	 .loc 2 408 0
 584 0028 7B68     	 ldr r3,[r7,#4]
 585 002a FA68     	 ldr r2,[r7,#12]
 586 002c 9A64     	 str r2,[r3,#72]
 409:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 587              	 .loc 2 409 0
 588 002e BD46     	 mov sp,r7
 589 0030 04B0     	 add sp,sp,#16
 590              	 
 591 0032 80BD     	 pop {r7,pc}
 592              	 .cfi_endproc
 593              	.LFE129:
 595              	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 596              	 .align 2
 597              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 598              	 .code 16
 599              	 .thumb_func
 601              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 602              	.LFB130:
 410:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 411:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 412:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 413:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 603              	 .loc 2 413 0
 604              	 .cfi_startproc
 605 0000 80B5     	 push {r7,lr}
 606              	.LCFI36:
 607              	 .cfi_def_cfa_offset 8
 608              	 .cfi_offset 7,-8
 609              	 .cfi_offset 14,-4
 610 0002 84B0     	 sub sp,sp,#16
 611              	.LCFI37:
 612              	 .cfi_def_cfa_offset 24
 613 0004 00AF     	 add r7,sp,#0
 614              	.LCFI38:
 615              	 .cfi_def_cfa_register 7
 616 0006 7860     	 str r0,[r7,#4]
 617 0008 3960     	 str r1,[r7]
 414:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 415:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 416:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 417:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 418:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 618              	 .loc 2 418 0
 619 000a 7B68     	 ldr r3,[r7,#4]
 620 000c 1B68     	 ldr r3,[r3]
 621 000e FB60     	 str r3,[r7,#12]
 419:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 622              	 .loc 2 419 0
 623 0010 3B68     	 ldr r3,[r7]
 624 0012 1B0C     	 lsr r3,r3,#16
 625 0014 DA43     	 mvn r2,r3
 626 0016 FB68     	 ldr r3,[r7,#12]
 627 0018 1340     	 and r3,r2
 628 001a FB60     	 str r3,[r7,#12]
 420:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 629              	 .loc 2 420 0
 630 001c 3B68     	 ldr r3,[r7]
 631 001e 1B04     	 lsl r3,r3,#16
 632 0020 1B0C     	 lsr r3,r3,#16
 633 0022 FA68     	 ldr r2,[r7,#12]
 634 0024 1343     	 orr r3,r2
 635 0026 FB60     	 str r3,[r7,#12]
 421:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 636              	 .loc 2 421 0
 637 0028 7B68     	 ldr r3,[r7,#4]
 638 002a FA68     	 ldr r2,[r7,#12]
 639 002c 1A60     	 str r2,[r3]
 422:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 640              	 .loc 2 422 0
 641 002e BD46     	 mov sp,r7
 642 0030 04B0     	 add sp,sp,#16
 643              	 
 644 0032 80BD     	 pop {r7,pc}
 645              	 .cfi_endproc
 646              	.LFE130:
 648              	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 649              	 .align 2
 650              	 .global XMC_CCU8_SLICE_StartConfig
 651              	 .code 16
 652              	 .thumb_func
 654              	XMC_CCU8_SLICE_StartConfig:
 655              	.LFB131:
 423:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 424:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 425:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 426:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 427:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 428:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 429:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 656              	 .loc 2 429 0
 657              	 .cfi_startproc
 658 0000 80B5     	 push {r7,lr}
 659              	.LCFI39:
 660              	 .cfi_def_cfa_offset 8
 661              	 .cfi_offset 7,-8
 662              	 .cfi_offset 14,-4
 663 0002 84B0     	 sub sp,sp,#16
 664              	.LCFI40:
 665              	 .cfi_def_cfa_offset 24
 666 0004 00AF     	 add r7,sp,#0
 667              	.LCFI41:
 668              	 .cfi_def_cfa_register 7
 669 0006 7860     	 str r0,[r7,#4]
 670 0008 081C     	 mov r0,r1
 671 000a 111C     	 mov r1,r2
 672 000c FB1C     	 add r3,r7,#3
 673 000e 021C     	 add r2,r0,#0
 674 0010 1A70     	 strb r2,[r3]
 675 0012 BB1C     	 add r3,r7,#2
 676 0014 0A1C     	 add r2,r1,#0
 677 0016 1A70     	 strb r2,[r3]
 430:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 431:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 432:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 433:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 434:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 435:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode",
 436:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) || \
 437:../Libraries/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 438:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 678              	 .loc 2 438 0
 679 0018 7B68     	 ldr r3,[r7,#4]
 680 001a 5B68     	 ldr r3,[r3,#4]
 681 001c BB60     	 str r3,[r7,#8]
 439:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 440:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 682              	 .loc 2 440 0
 683 001e BB68     	 ldr r3,[r7,#8]
 684 0020 0322     	 mov r2,#3
 685 0022 9343     	 bic r3,r2
 686 0024 BB60     	 str r3,[r7,#8]
 441:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 687              	 .loc 2 441 0
 688 0026 FB1C     	 add r3,r7,#3
 689 0028 1B78     	 ldrb r3,[r3]
 690 002a BA68     	 ldr r2,[r7,#8]
 691 002c 1343     	 orr r3,r2
 692 002e BB60     	 str r3,[r7,#8]
 442:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 443:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 693              	 .loc 2 443 0
 694 0030 7B68     	 ldr r3,[r7,#4]
 695 0032 BA68     	 ldr r2,[r7,#8]
 696 0034 5A60     	 str r2,[r3,#4]
 444:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 445:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 697              	 .loc 2 445 0
 698 0036 7B68     	 ldr r3,[r7,#4]
 699 0038 5B69     	 ldr r3,[r3,#20]
 700 003a FB60     	 str r3,[r7,#12]
 446:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 447:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 701              	 .loc 2 447 0
 702 003c BB1C     	 add r3,r7,#2
 703 003e 1B78     	 ldrb r3,[r3]
 704 0040 012B     	 cmp r3,#1
 705 0042 05D1     	 bne .L19
 448:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 449:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 706              	 .loc 2 449 0
 707 0044 FB68     	 ldr r3,[r7,#12]
 708 0046 8022     	 mov r2,#128
 709 0048 D200     	 lsl r2,r2,#3
 710 004a 1343     	 orr r3,r2
 711 004c FB60     	 str r3,[r7,#12]
 712 004e 03E0     	 b .L20
 713              	.L19:
 450:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 451:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 452:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 453:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 714              	 .loc 2 453 0
 715 0050 FB68     	 ldr r3,[r7,#12]
 716 0052 044A     	 ldr r2,.L21
 717 0054 1340     	 and r3,r2
 718 0056 FB60     	 str r3,[r7,#12]
 719              	.L20:
 454:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 455:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 456:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 720              	 .loc 2 456 0
 721 0058 7B68     	 ldr r3,[r7,#4]
 722 005a FA68     	 ldr r2,[r7,#12]
 723 005c 5A61     	 str r2,[r3,#20]
 457:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 724              	 .loc 2 457 0
 725 005e BD46     	 mov sp,r7
 726 0060 04B0     	 add sp,sp,#16
 727              	 
 728 0062 80BD     	 pop {r7,pc}
 729              	.L22:
 730              	 .align 2
 731              	.L21:
 732 0064 FFFBFFFF 	 .word -1025
 733              	 .cfi_endproc
 734              	.LFE131:
 736              	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 737              	 .align 2
 738              	 .global XMC_CCU8_SLICE_StopConfig
 739              	 .code 16
 740              	 .thumb_func
 742              	XMC_CCU8_SLICE_StopConfig:
 743              	.LFB132:
 458:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 459:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 460:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 461:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 462:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 463:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 744              	 .loc 2 463 0
 745              	 .cfi_startproc
 746 0000 80B5     	 push {r7,lr}
 747              	.LCFI42:
 748              	 .cfi_def_cfa_offset 8
 749              	 .cfi_offset 7,-8
 750              	 .cfi_offset 14,-4
 751 0002 84B0     	 sub sp,sp,#16
 752              	.LCFI43:
 753              	 .cfi_def_cfa_offset 24
 754 0004 00AF     	 add r7,sp,#0
 755              	.LCFI44:
 756              	 .cfi_def_cfa_register 7
 757 0006 7860     	 str r0,[r7,#4]
 758 0008 081C     	 mov r0,r1
 759 000a 111C     	 mov r1,r2
 760 000c FB1C     	 add r3,r7,#3
 761 000e 021C     	 add r2,r0,#0
 762 0010 1A70     	 strb r2,[r3]
 763 0012 BB1C     	 add r3,r7,#2
 764 0014 0A1C     	 add r2,r1,#0
 765 0016 1A70     	 strb r2,[r3]
 464:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 465:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 466:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 467:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 468:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 469:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 470:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 471:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 766              	 .loc 2 471 0
 767 0018 7B68     	 ldr r3,[r7,#4]
 768 001a 5B68     	 ldr r3,[r3,#4]
 769 001c FB60     	 str r3,[r7,#12]
 472:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 473:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 770              	 .loc 2 473 0
 771 001e FB68     	 ldr r3,[r7,#12]
 772 0020 0C22     	 mov r2,#12
 773 0022 9343     	 bic r3,r2
 774 0024 FB60     	 str r3,[r7,#12]
 474:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 775              	 .loc 2 474 0
 776 0026 FB1C     	 add r3,r7,#3
 777 0028 1B78     	 ldrb r3,[r3]
 778 002a 9B00     	 lsl r3,r3,#2
 779 002c FA68     	 ldr r2,[r7,#12]
 780 002e 1343     	 orr r3,r2
 781 0030 FB60     	 str r3,[r7,#12]
 475:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 476:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 782              	 .loc 2 476 0
 783 0032 7B68     	 ldr r3,[r7,#4]
 784 0034 FA68     	 ldr r2,[r7,#12]
 785 0036 5A60     	 str r2,[r3,#4]
 477:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 478:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 479:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 786              	 .loc 2 479 0
 787 0038 7B68     	 ldr r3,[r7,#4]
 788 003a 5B69     	 ldr r3,[r3,#20]
 789 003c BB60     	 str r3,[r7,#8]
 480:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 790              	 .loc 2 480 0
 791 003e BB68     	 ldr r3,[r7,#8]
 792 0040 074A     	 ldr r2,.L24
 793 0042 1340     	 and r3,r2
 794 0044 BB60     	 str r3,[r7,#8]
 481:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 795              	 .loc 2 481 0
 796 0046 BB1C     	 add r3,r7,#2
 797 0048 1B78     	 ldrb r3,[r3]
 798 004a 1B02     	 lsl r3,r3,#8
 799 004c BA68     	 ldr r2,[r7,#8]
 800 004e 1343     	 orr r3,r2
 801 0050 BB60     	 str r3,[r7,#8]
 482:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 483:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 802              	 .loc 2 483 0
 803 0052 7B68     	 ldr r3,[r7,#4]
 804 0054 BA68     	 ldr r2,[r7,#8]
 805 0056 5A61     	 str r2,[r3,#20]
 484:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 806              	 .loc 2 484 0
 807 0058 BD46     	 mov sp,r7
 808 005a 04B0     	 add sp,sp,#16
 809              	 
 810 005c 80BD     	 pop {r7,pc}
 811              	.L25:
 812 005e C046     	 .align 2
 813              	.L24:
 814 0060 FFFCFFFF 	 .word -769
 815              	 .cfi_endproc
 816              	.LFE132:
 818              	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 819              	 .align 2
 820              	 .global XMC_CCU8_SLICE_LoadConfig
 821              	 .code 16
 822              	 .thumb_func
 824              	XMC_CCU8_SLICE_LoadConfig:
 825              	.LFB133:
 485:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 486:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 487:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 488:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 826              	 .loc 2 488 0
 827              	 .cfi_startproc
 828 0000 80B5     	 push {r7,lr}
 829              	.LCFI45:
 830              	 .cfi_def_cfa_offset 8
 831              	 .cfi_offset 7,-8
 832              	 .cfi_offset 14,-4
 833 0002 84B0     	 sub sp,sp,#16
 834              	.LCFI46:
 835              	 .cfi_def_cfa_offset 24
 836 0004 00AF     	 add r7,sp,#0
 837              	.LCFI47:
 838              	 .cfi_def_cfa_register 7
 839 0006 7860     	 str r0,[r7,#4]
 840 0008 0A1C     	 mov r2,r1
 841 000a FB1C     	 add r3,r7,#3
 842 000c 1A70     	 strb r2,[r3]
 489:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 490:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 491:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 492:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 493:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 494:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 843              	 .loc 2 494 0
 844 000e 7B68     	 ldr r3,[r7,#4]
 845 0010 5B68     	 ldr r3,[r3,#4]
 846 0012 FB60     	 str r3,[r7,#12]
 495:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 496:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 497:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 847              	 .loc 2 497 0
 848 0014 FB68     	 ldr r3,[r7,#12]
 849 0016 074A     	 ldr r2,.L27
 850 0018 1340     	 and r3,r2
 851 001a FB60     	 str r3,[r7,#12]
 498:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 852              	 .loc 2 498 0
 853 001c FB1C     	 add r3,r7,#3
 854 001e 1B78     	 ldrb r3,[r3]
 855 0020 1B03     	 lsl r3,r3,#12
 856 0022 FA68     	 ldr r2,[r7,#12]
 857 0024 1343     	 orr r3,r2
 858 0026 FB60     	 str r3,[r7,#12]
 499:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 500:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 859              	 .loc 2 500 0
 860 0028 7B68     	 ldr r3,[r7,#4]
 861 002a FA68     	 ldr r2,[r7,#12]
 862 002c 5A60     	 str r2,[r3,#4]
 501:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 863              	 .loc 2 501 0
 864 002e BD46     	 mov sp,r7
 865 0030 04B0     	 add sp,sp,#16
 866              	 
 867 0032 80BD     	 pop {r7,pc}
 868              	.L28:
 869              	 .align 2
 870              	.L27:
 871 0034 FFCFFFFF 	 .word -12289
 872              	 .cfi_endproc
 873              	.LFE133:
 875              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 876              	 .align 2
 877              	 .global XMC_CCU8_SLICE_LoadSelector
 878              	 .code 16
 879              	 .thumb_func
 881              	XMC_CCU8_SLICE_LoadSelector:
 882              	.LFB134:
 502:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 503:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 504:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 505:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 883              	 .loc 2 505 0
 884              	 .cfi_startproc
 885 0000 80B5     	 push {r7,lr}
 886              	.LCFI48:
 887              	 .cfi_def_cfa_offset 8
 888              	 .cfi_offset 7,-8
 889              	 .cfi_offset 14,-4
 890 0002 84B0     	 sub sp,sp,#16
 891              	.LCFI49:
 892              	 .cfi_def_cfa_offset 24
 893 0004 00AF     	 add r7,sp,#0
 894              	.LCFI50:
 895              	 .cfi_def_cfa_register 7
 896 0006 7860     	 str r0,[r7,#4]
 897 0008 0A1C     	 mov r2,r1
 898 000a FB1C     	 add r3,r7,#3
 899 000c 1A70     	 strb r2,[r3]
 506:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 507:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 508:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 509:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 510:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 511:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 900              	 .loc 2 511 0
 901 000e 7B68     	 ldr r3,[r7,#4]
 902 0010 5B69     	 ldr r3,[r3,#20]
 903 0012 FB60     	 str r3,[r7,#12]
 512:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 513:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 514:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 904              	 .loc 2 514 0
 905 0014 FB68     	 ldr r3,[r7,#12]
 906 0016 8022     	 mov r2,#128
 907 0018 9343     	 bic r3,r2
 908 001a FB60     	 str r3,[r7,#12]
 515:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 909              	 .loc 2 515 0
 910 001c FB1C     	 add r3,r7,#3
 911 001e 1B78     	 ldrb r3,[r3]
 912 0020 DB01     	 lsl r3,r3,#7
 913 0022 FA68     	 ldr r2,[r7,#12]
 914 0024 1343     	 orr r3,r2
 915 0026 FB60     	 str r3,[r7,#12]
 516:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 517:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 916              	 .loc 2 517 0
 917 0028 7B68     	 ldr r3,[r7,#4]
 918 002a FA68     	 ldr r2,[r7,#12]
 919 002c 5A61     	 str r2,[r3,#20]
 518:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 920              	 .loc 2 518 0
 921 002e BD46     	 mov sp,r7
 922 0030 04B0     	 add sp,sp,#16
 923              	 
 924 0032 80BD     	 pop {r7,pc}
 925              	 .cfi_endproc
 926              	.LFE134:
 928              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 929              	 .align 2
 930              	 .global XMC_CCU8_SLICE_ModulationConfig
 931              	 .code 16
 932              	 .thumb_func
 934              	XMC_CCU8_SLICE_ModulationConfig:
 935              	.LFB135:
 519:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 520:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 521:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 522:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 523:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 524:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 525:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 526:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 936              	 .loc 2 526 0
 937              	 .cfi_startproc
 938 0000 90B5     	 push {r4,r7,lr}
 939              	.LCFI51:
 940              	 .cfi_def_cfa_offset 12
 941              	 .cfi_offset 4,-12
 942              	 .cfi_offset 7,-8
 943              	 .cfi_offset 14,-4
 944 0002 85B0     	 sub sp,sp,#20
 945              	.LCFI52:
 946              	 .cfi_def_cfa_offset 32
 947 0004 00AF     	 add r7,sp,#0
 948              	.LCFI53:
 949              	 .cfi_def_cfa_register 7
 950 0006 7860     	 str r0,[r7,#4]
 951 0008 0C1C     	 mov r4,r1
 952 000a 101C     	 mov r0,r2
 953 000c 191C     	 mov r1,r3
 954 000e FB1C     	 add r3,r7,#3
 955 0010 221C     	 add r2,r4,#0
 956 0012 1A70     	 strb r2,[r3]
 957 0014 BB1C     	 add r3,r7,#2
 958 0016 021C     	 add r2,r0,#0
 959 0018 1A70     	 strb r2,[r3]
 960 001a 7B1C     	 add r3,r7,#1
 961 001c 0A1C     	 add r2,r1,#0
 962 001e 1A70     	 strb r2,[r3]
 527:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 528:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 529:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 530:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 531:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 532:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation",
 533:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 534:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode",
 535:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) || \
 536:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 537:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 538:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 963              	 .loc 2 538 0
 964 0020 7B68     	 ldr r3,[r7,#4]
 965 0022 5B68     	 ldr r3,[r3,#4]
 966 0024 BB60     	 str r3,[r7,#8]
 539:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 540:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 541:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 967              	 .loc 2 541 0
 968 0026 BB68     	 ldr r3,[r7,#8]
 969 0028 1D4A     	 ldr r2,.L35
 970 002a 1340     	 and r3,r2
 971 002c BB60     	 str r3,[r7,#8]
 542:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 972              	 .loc 2 542 0
 973 002e FB1C     	 add r3,r7,#3
 974 0030 1B78     	 ldrb r3,[r3]
 975 0032 9B04     	 lsl r3,r3,#18
 976 0034 BA68     	 ldr r2,[r7,#8]
 977 0036 1343     	 orr r3,r2
 978 0038 BB60     	 str r3,[r7,#8]
 543:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 544:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 979              	 .loc 2 544 0
 980 003a 7B68     	 ldr r3,[r7,#4]
 981 003c BA68     	 ldr r2,[r7,#8]
 982 003e 5A60     	 str r2,[r3,#4]
 545:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 546:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 983              	 .loc 2 546 0
 984 0040 7B68     	 ldr r3,[r7,#4]
 985 0042 5B69     	 ldr r3,[r3,#20]
 986 0044 FB60     	 str r3,[r7,#12]
 547:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 548:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 549:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 987              	 .loc 2 549 0
 988 0046 BB1C     	 add r3,r7,#2
 989 0048 1B78     	 ldrb r3,[r3]
 990 004a 012B     	 cmp r3,#1
 991 004c 05D1     	 bne .L31
 550:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 551:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 992              	 .loc 2 551 0
 993 004e FB68     	 ldr r3,[r7,#12]
 994 0050 8022     	 mov r2,#128
 995 0052 5204     	 lsl r2,r2,#17
 996 0054 1343     	 orr r3,r2
 997 0056 FB60     	 str r3,[r7,#12]
 998 0058 03E0     	 b .L32
 999              	.L31:
 552:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 553:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 554:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 555:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1000              	 .loc 2 555 0
 1001 005a FB68     	 ldr r3,[r7,#12]
 1002 005c 114A     	 ldr r2,.L35+4
 1003 005e 1340     	 and r3,r2
 1004 0060 FB60     	 str r3,[r7,#12]
 1005              	.L32:
 556:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 557:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 558:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 559:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (synch_with_pwm == true)
 1006              	 .loc 2 559 0
 1007 0062 2023     	 mov r3,#32
 1008 0064 FB18     	 add r3,r7,r3
 1009 0066 1B78     	 ldrb r3,[r3]
 1010 0068 002B     	 cmp r3,#0
 1011 006a 05D0     	 beq .L33
 560:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 561:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1012              	 .loc 2 561 0
 1013 006c FB68     	 ldr r3,[r7,#12]
 1014 006e 8022     	 mov r2,#128
 1015 0070 1204     	 lsl r2,r2,#16
 1016 0072 1343     	 orr r3,r2
 1017 0074 FB60     	 str r3,[r7,#12]
 1018 0076 03E0     	 b .L34
 1019              	.L33:
 562:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 563:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 564:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 565:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1020              	 .loc 2 565 0
 1021 0078 FB68     	 ldr r3,[r7,#12]
 1022 007a 0B4A     	 ldr r2,.L35+8
 1023 007c 1340     	 and r3,r2
 1024 007e FB60     	 str r3,[r7,#12]
 1025              	.L34:
 566:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 567:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 568:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 569:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1026              	 .loc 2 569 0
 1027 0080 FB68     	 ldr r3,[r7,#12]
 1028 0082 0A4A     	 ldr r2,.L35+12
 1029 0084 1340     	 and r3,r2
 1030 0086 FB60     	 str r3,[r7,#12]
 570:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1031              	 .loc 2 570 0
 1032 0088 7B1C     	 add r3,r7,#1
 1033 008a 1B78     	 ldrb r3,[r3]
 1034 008c DB06     	 lsl r3,r3,#27
 1035 008e FA68     	 ldr r2,[r7,#12]
 1036 0090 1343     	 orr r3,r2
 1037 0092 FB60     	 str r3,[r7,#12]
 571:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 572:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1038              	 .loc 2 572 0
 1039 0094 7B68     	 ldr r3,[r7,#4]
 1040 0096 FA68     	 ldr r2,[r7,#12]
 1041 0098 5A61     	 str r2,[r3,#20]
 573:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1042              	 .loc 2 573 0
 1043 009a BD46     	 mov sp,r7
 1044 009c 05B0     	 add sp,sp,#20
 1045              	 
 1046 009e 90BD     	 pop {r4,r7,pc}
 1047              	.L36:
 1048              	 .align 2
 1049              	.L35:
 1050 00a0 FFFFF3FF 	 .word -786433
 1051 00a4 FFFFFFFE 	 .word -16777217
 1052 00a8 FFFF7FFF 	 .word -8388609
 1053 00ac FFFFFFE7 	 .word -402653185
 1054              	 .cfi_endproc
 1055              	.LFE135:
 1057              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1058              	 .align 2
 1059              	 .global XMC_CCU8_SLICE_CountConfig
 1060              	 .code 16
 1061              	 .thumb_func
 1063              	XMC_CCU8_SLICE_CountConfig:
 1064              	.LFB136:
 574:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 575:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 576:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 577:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1065              	 .loc 2 577 0
 1066              	 .cfi_startproc
 1067 0000 80B5     	 push {r7,lr}
 1068              	.LCFI54:
 1069              	 .cfi_def_cfa_offset 8
 1070              	 .cfi_offset 7,-8
 1071              	 .cfi_offset 14,-4
 1072 0002 84B0     	 sub sp,sp,#16
 1073              	.LCFI55:
 1074              	 .cfi_def_cfa_offset 24
 1075 0004 00AF     	 add r7,sp,#0
 1076              	.LCFI56:
 1077              	 .cfi_def_cfa_register 7
 1078 0006 7860     	 str r0,[r7,#4]
 1079 0008 0A1C     	 mov r2,r1
 1080 000a FB1C     	 add r3,r7,#3
 1081 000c 1A70     	 strb r2,[r3]
 578:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 579:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 580:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 581:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 582:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 583:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1082              	 .loc 2 583 0
 1083 000e 7B68     	 ldr r3,[r7,#4]
 1084 0010 5B68     	 ldr r3,[r3,#4]
 1085 0012 FB60     	 str r3,[r7,#12]
 584:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 585:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 586:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1086              	 .loc 2 586 0
 1087 0014 FB68     	 ldr r3,[r7,#12]
 1088 0016 074A     	 ldr r2,.L38
 1089 0018 1340     	 and r3,r2
 1090 001a FB60     	 str r3,[r7,#12]
 587:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1091              	 .loc 2 587 0
 1092 001c FB1C     	 add r3,r7,#3
 1093 001e 1B78     	 ldrb r3,[r3]
 1094 0020 9B03     	 lsl r3,r3,#14
 1095 0022 FA68     	 ldr r2,[r7,#12]
 1096 0024 1343     	 orr r3,r2
 1097 0026 FB60     	 str r3,[r7,#12]
 588:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 589:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1098              	 .loc 2 589 0
 1099 0028 7B68     	 ldr r3,[r7,#4]
 1100 002a FA68     	 ldr r2,[r7,#12]
 1101 002c 5A60     	 str r2,[r3,#4]
 590:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1102              	 .loc 2 590 0
 1103 002e BD46     	 mov sp,r7
 1104 0030 04B0     	 add sp,sp,#16
 1105              	 
 1106 0032 80BD     	 pop {r7,pc}
 1107              	.L39:
 1108              	 .align 2
 1109              	.L38:
 1110 0034 FF3FFFFF 	 .word -49153
 1111              	 .cfi_endproc
 1112              	.LFE136:
 1114              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1115              	 .align 2
 1116              	 .global XMC_CCU8_SLICE_GateConfig
 1117              	 .code 16
 1118              	 .thumb_func
 1120              	XMC_CCU8_SLICE_GateConfig:
 1121              	.LFB137:
 591:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 592:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 593:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 594:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1122              	 .loc 2 594 0
 1123              	 .cfi_startproc
 1124 0000 80B5     	 push {r7,lr}
 1125              	.LCFI57:
 1126              	 .cfi_def_cfa_offset 8
 1127              	 .cfi_offset 7,-8
 1128              	 .cfi_offset 14,-4
 1129 0002 84B0     	 sub sp,sp,#16
 1130              	.LCFI58:
 1131              	 .cfi_def_cfa_offset 24
 1132 0004 00AF     	 add r7,sp,#0
 1133              	.LCFI59:
 1134              	 .cfi_def_cfa_register 7
 1135 0006 7860     	 str r0,[r7,#4]
 1136 0008 0A1C     	 mov r2,r1
 1137 000a FB1C     	 add r3,r7,#3
 1138 000c 1A70     	 strb r2,[r3]
 595:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 596:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 597:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 598:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 599:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 600:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1139              	 .loc 2 600 0
 1140 000e 7B68     	 ldr r3,[r7,#4]
 1141 0010 5B68     	 ldr r3,[r3,#4]
 1142 0012 FB60     	 str r3,[r7,#12]
 601:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 602:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 603:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1143              	 .loc 2 603 0
 1144 0014 FB68     	 ldr r3,[r7,#12]
 1145 0016 074A     	 ldr r2,.L41
 1146 0018 1340     	 and r3,r2
 1147 001a FB60     	 str r3,[r7,#12]
 604:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1148              	 .loc 2 604 0
 1149 001c FB1C     	 add r3,r7,#3
 1150 001e 1B78     	 ldrb r3,[r3]
 1151 0020 1B02     	 lsl r3,r3,#8
 1152 0022 FA68     	 ldr r2,[r7,#12]
 1153 0024 1343     	 orr r3,r2
 1154 0026 FB60     	 str r3,[r7,#12]
 605:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 606:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1155              	 .loc 2 606 0
 1156 0028 7B68     	 ldr r3,[r7,#4]
 1157 002a FA68     	 ldr r2,[r7,#12]
 1158 002c 5A60     	 str r2,[r3,#4]
 607:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1159              	 .loc 2 607 0
 1160 002e BD46     	 mov sp,r7
 1161 0030 04B0     	 add sp,sp,#16
 1162              	 
 1163 0032 80BD     	 pop {r7,pc}
 1164              	.L42:
 1165              	 .align 2
 1166              	.L41:
 1167 0034 FFFCFFFF 	 .word -769
 1168              	 .cfi_endproc
 1169              	.LFE137:
 1171              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1172              	 .align 2
 1173              	 .global XMC_CCU8_SLICE_Capture0Config
 1174              	 .code 16
 1175              	 .thumb_func
 1177              	XMC_CCU8_SLICE_Capture0Config:
 1178              	.LFB138:
 608:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 609:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 610:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 611:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1179              	 .loc 2 611 0
 1180              	 .cfi_startproc
 1181 0000 80B5     	 push {r7,lr}
 1182              	.LCFI60:
 1183              	 .cfi_def_cfa_offset 8
 1184              	 .cfi_offset 7,-8
 1185              	 .cfi_offset 14,-4
 1186 0002 84B0     	 sub sp,sp,#16
 1187              	.LCFI61:
 1188              	 .cfi_def_cfa_offset 24
 1189 0004 00AF     	 add r7,sp,#0
 1190              	.LCFI62:
 1191              	 .cfi_def_cfa_register 7
 1192 0006 7860     	 str r0,[r7,#4]
 1193 0008 0A1C     	 mov r2,r1
 1194 000a FB1C     	 add r3,r7,#3
 1195 000c 1A70     	 strb r2,[r3]
 612:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 613:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 614:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 615:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 616:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 617:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1196              	 .loc 2 617 0
 1197 000e 7B68     	 ldr r3,[r7,#4]
 1198 0010 5B68     	 ldr r3,[r3,#4]
 1199 0012 FB60     	 str r3,[r7,#12]
 618:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 619:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 620:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1200              	 .loc 2 620 0
 1201 0014 FB68     	 ldr r3,[r7,#12]
 1202 0016 3022     	 mov r2,#48
 1203 0018 9343     	 bic r3,r2
 1204 001a FB60     	 str r3,[r7,#12]
 621:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1205              	 .loc 2 621 0
 1206 001c FB1C     	 add r3,r7,#3
 1207 001e 1B78     	 ldrb r3,[r3]
 1208 0020 1B01     	 lsl r3,r3,#4
 1209 0022 FA68     	 ldr r2,[r7,#12]
 1210 0024 1343     	 orr r3,r2
 1211 0026 FB60     	 str r3,[r7,#12]
 622:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 623:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1212              	 .loc 2 623 0
 1213 0028 7B68     	 ldr r3,[r7,#4]
 1214 002a FA68     	 ldr r2,[r7,#12]
 1215 002c 5A60     	 str r2,[r3,#4]
 624:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1216              	 .loc 2 624 0
 1217 002e BD46     	 mov sp,r7
 1218 0030 04B0     	 add sp,sp,#16
 1219              	 
 1220 0032 80BD     	 pop {r7,pc}
 1221              	 .cfi_endproc
 1222              	.LFE138:
 1224              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1225              	 .align 2
 1226              	 .global XMC_CCU8_SLICE_Capture1Config
 1227              	 .code 16
 1228              	 .thumb_func
 1230              	XMC_CCU8_SLICE_Capture1Config:
 1231              	.LFB139:
 625:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 626:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 627:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 628:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1232              	 .loc 2 628 0
 1233              	 .cfi_startproc
 1234 0000 80B5     	 push {r7,lr}
 1235              	.LCFI63:
 1236              	 .cfi_def_cfa_offset 8
 1237              	 .cfi_offset 7,-8
 1238              	 .cfi_offset 14,-4
 1239 0002 84B0     	 sub sp,sp,#16
 1240              	.LCFI64:
 1241              	 .cfi_def_cfa_offset 24
 1242 0004 00AF     	 add r7,sp,#0
 1243              	.LCFI65:
 1244              	 .cfi_def_cfa_register 7
 1245 0006 7860     	 str r0,[r7,#4]
 1246 0008 0A1C     	 mov r2,r1
 1247 000a FB1C     	 add r3,r7,#3
 1248 000c 1A70     	 strb r2,[r3]
 629:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 630:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 632:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 633:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 634:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 635:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1249              	 .loc 2 635 0
 1250 000e 7B68     	 ldr r3,[r7,#4]
 1251 0010 5B68     	 ldr r3,[r3,#4]
 1252 0012 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 637:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 638:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1253              	 .loc 2 638 0
 1254 0014 FB68     	 ldr r3,[r7,#12]
 1255 0016 C022     	 mov r2,#192
 1256 0018 9343     	 bic r3,r2
 1257 001a FB60     	 str r3,[r7,#12]
 639:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1258              	 .loc 2 639 0
 1259 001c FB1C     	 add r3,r7,#3
 1260 001e 1B78     	 ldrb r3,[r3]
 1261 0020 9B01     	 lsl r3,r3,#6
 1262 0022 FA68     	 ldr r2,[r7,#12]
 1263 0024 1343     	 orr r3,r2
 1264 0026 FB60     	 str r3,[r7,#12]
 640:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 641:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1265              	 .loc 2 641 0
 1266 0028 7B68     	 ldr r3,[r7,#4]
 1267 002a FA68     	 ldr r2,[r7,#12]
 1268 002c 5A60     	 str r2,[r3,#4]
 642:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1269              	 .loc 2 642 0
 1270 002e BD46     	 mov sp,r7
 1271 0030 04B0     	 add sp,sp,#16
 1272              	 
 1273 0032 80BD     	 pop {r7,pc}
 1274              	 .cfi_endproc
 1275              	.LFE139:
 1277              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1278              	 .align 2
 1279              	 .global XMC_CCU8_SLICE_DirectionConfig
 1280              	 .code 16
 1281              	 .thumb_func
 1283              	XMC_CCU8_SLICE_DirectionConfig:
 1284              	.LFB140:
 643:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 644:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 645:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 646:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1285              	 .loc 2 646 0
 1286              	 .cfi_startproc
 1287 0000 80B5     	 push {r7,lr}
 1288              	.LCFI66:
 1289              	 .cfi_def_cfa_offset 8
 1290              	 .cfi_offset 7,-8
 1291              	 .cfi_offset 14,-4
 1292 0002 84B0     	 sub sp,sp,#16
 1293              	.LCFI67:
 1294              	 .cfi_def_cfa_offset 24
 1295 0004 00AF     	 add r7,sp,#0
 1296              	.LCFI68:
 1297              	 .cfi_def_cfa_register 7
 1298 0006 7860     	 str r0,[r7,#4]
 1299 0008 0A1C     	 mov r2,r1
 1300 000a FB1C     	 add r3,r7,#3
 1301 000c 1A70     	 strb r2,[r3]
 647:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 648:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 649:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 650:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 651:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1302              	 .loc 2 652 0
 1303 000e 7B68     	 ldr r3,[r7,#4]
 1304 0010 5B68     	 ldr r3,[r3,#4]
 1305 0012 FB60     	 str r3,[r7,#12]
 653:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 654:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 655:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1306              	 .loc 2 655 0
 1307 0014 FB68     	 ldr r3,[r7,#12]
 1308 0016 074A     	 ldr r2,.L46
 1309 0018 1340     	 and r3,r2
 1310 001a FB60     	 str r3,[r7,#12]
 656:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1311              	 .loc 2 656 0
 1312 001c FB1C     	 add r3,r7,#3
 1313 001e 1B78     	 ldrb r3,[r3]
 1314 0020 9B02     	 lsl r3,r3,#10
 1315 0022 FA68     	 ldr r2,[r7,#12]
 1316 0024 1343     	 orr r3,r2
 1317 0026 FB60     	 str r3,[r7,#12]
 657:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 658:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1318              	 .loc 2 658 0
 1319 0028 7B68     	 ldr r3,[r7,#4]
 1320 002a FA68     	 ldr r2,[r7,#12]
 1321 002c 5A60     	 str r2,[r3,#4]
 659:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1322              	 .loc 2 659 0
 1323 002e BD46     	 mov sp,r7
 1324 0030 04B0     	 add sp,sp,#16
 1325              	 
 1326 0032 80BD     	 pop {r7,pc}
 1327              	.L47:
 1328              	 .align 2
 1329              	.L46:
 1330 0034 FFF3FFFF 	 .word -3073
 1331              	 .cfi_endproc
 1332              	.LFE140:
 1334              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1335              	 .align 2
 1336              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1337              	 .code 16
 1338              	 .thumb_func
 1340              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1341              	.LFB141:
 660:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 661:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 662:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 663:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1342              	 .loc 2 663 0
 1343              	 .cfi_startproc
 1344 0000 80B5     	 push {r7,lr}
 1345              	.LCFI69:
 1346              	 .cfi_def_cfa_offset 8
 1347              	 .cfi_offset 7,-8
 1348              	 .cfi_offset 14,-4
 1349 0002 84B0     	 sub sp,sp,#16
 1350              	.LCFI70:
 1351              	 .cfi_def_cfa_offset 24
 1352 0004 00AF     	 add r7,sp,#0
 1353              	.LCFI71:
 1354              	 .cfi_def_cfa_register 7
 1355 0006 7860     	 str r0,[r7,#4]
 664:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 665:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 666:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 667:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 668:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1356              	 .loc 2 668 0
 1357 0008 7B68     	 ldr r3,[r7,#4]
 1358 000a 5B68     	 ldr r3,[r3,#4]
 1359 000c FB60     	 str r3,[r7,#12]
 669:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 670:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 671:../Libraries/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 672:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1360              	 .loc 2 672 0
 1361 000e FB68     	 ldr r3,[r7,#12]
 1362 0010 064A     	 ldr r2,.L49
 1363 0012 1340     	 and r3,r2
 1364 0014 FB60     	 str r3,[r7,#12]
 673:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1365              	 .loc 2 673 0
 1366 0016 FB68     	 ldr r3,[r7,#12]
 1367 0018 8022     	 mov r2,#128
 1368 001a 5202     	 lsl r2,r2,#9
 1369 001c 1343     	 orr r3,r2
 1370 001e FB60     	 str r3,[r7,#12]
 674:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 675:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1371              	 .loc 2 675 0
 1372 0020 7B68     	 ldr r3,[r7,#4]
 1373 0022 FA68     	 ldr r2,[r7,#12]
 1374 0024 5A60     	 str r2,[r3,#4]
 676:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1375              	 .loc 2 676 0
 1376 0026 BD46     	 mov sp,r7
 1377 0028 04B0     	 add sp,sp,#16
 1378              	 
 1379 002a 80BD     	 pop {r7,pc}
 1380              	.L50:
 1381              	 .align 2
 1382              	.L49:
 1383 002c FFFFFEFF 	 .word -65537
 1384              	 .cfi_endproc
 1385              	.LFE141:
 1387              	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1388              	 .align 2
 1389              	 .global XMC_CCU8_SLICE_TrapConfig
 1390              	 .code 16
 1391              	 .thumb_func
 1393              	XMC_CCU8_SLICE_TrapConfig:
 1394              	.LFB142:
 677:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 678:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 679:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 680:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 681:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 682:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1395              	 .loc 2 682 0
 1396              	 .cfi_startproc
 1397 0000 80B5     	 push {r7,lr}
 1398              	.LCFI72:
 1399              	 .cfi_def_cfa_offset 8
 1400              	 .cfi_offset 7,-8
 1401              	 .cfi_offset 14,-4
 1402 0002 84B0     	 sub sp,sp,#16
 1403              	.LCFI73:
 1404              	 .cfi_def_cfa_offset 24
 1405 0004 00AF     	 add r7,sp,#0
 1406              	.LCFI74:
 1407              	 .cfi_def_cfa_register 7
 1408 0006 7860     	 str r0,[r7,#4]
 1409 0008 081C     	 mov r0,r1
 1410 000a 111C     	 mov r1,r2
 1411 000c FB1C     	 add r3,r7,#3
 1412 000e 021C     	 add r2,r0,#0
 1413 0010 1A70     	 strb r2,[r3]
 1414 0012 BB1C     	 add r3,r7,#2
 1415 0014 0A1C     	 add r2,r1,#0
 1416 0016 1A70     	 strb r2,[r3]
 683:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 684:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 685:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 686:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 687:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 688:../Libraries/XMCLib/src/xmc_ccu8.c ****              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)));
 689:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 690:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1417              	 .loc 2 690 0
 1418 0018 7B68     	 ldr r3,[r7,#4]
 1419 001a 5B68     	 ldr r3,[r3,#4]
 1420 001c BB60     	 str r3,[r7,#8]
 691:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 692:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 693:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1421              	 .loc 2 693 0
 1422 001e BB68     	 ldr r3,[r7,#8]
 1423 0020 174A     	 ldr r2,.L56
 1424 0022 1340     	 and r3,r2
 1425 0024 BB60     	 str r3,[r7,#8]
 694:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1426              	 .loc 2 694 0
 1427 0026 BB68     	 ldr r3,[r7,#8]
 1428 0028 8022     	 mov r2,#128
 1429 002a 9202     	 lsl r2,r2,#10
 1430 002c 1343     	 orr r3,r2
 1431 002e BB60     	 str r3,[r7,#8]
 695:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 696:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1432              	 .loc 2 696 0
 1433 0030 7B68     	 ldr r3,[r7,#4]
 1434 0032 BA68     	 ldr r2,[r7,#8]
 1435 0034 5A60     	 str r2,[r3,#4]
 697:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 698:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1436              	 .loc 2 698 0
 1437 0036 7B68     	 ldr r3,[r7,#4]
 1438 0038 5B69     	 ldr r3,[r3,#20]
 1439 003a FB60     	 str r3,[r7,#12]
 699:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 700:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 701:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (synch_with_pwm == true)
 1440              	 .loc 2 701 0
 1441 003c BB1C     	 add r3,r7,#2
 1442 003e 1B78     	 ldrb r3,[r3]
 1443 0040 002B     	 cmp r3,#0
 1444 0042 05D0     	 beq .L52
 702:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 703:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1445              	 .loc 2 703 0
 1446 0044 FB68     	 ldr r3,[r7,#12]
 1447 0046 8022     	 mov r2,#128
 1448 0048 9203     	 lsl r2,r2,#14
 1449 004a 1343     	 orr r3,r2
 1450 004c FB60     	 str r3,[r7,#12]
 1451 004e 03E0     	 b .L53
 1452              	.L52:
 704:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 705:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 706:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 707:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1453              	 .loc 2 707 0
 1454 0050 FB68     	 ldr r3,[r7,#12]
 1455 0052 0C4A     	 ldr r2,.L56+4
 1456 0054 1340     	 and r3,r2
 1457 0056 FB60     	 str r3,[r7,#12]
 1458              	.L53:
 708:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 709:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 710:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 711:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1459              	 .loc 2 711 0
 1460 0058 FB1C     	 add r3,r7,#3
 1461 005a 1B78     	 ldrb r3,[r3]
 1462 005c 012B     	 cmp r3,#1
 1463 005e 05D1     	 bne .L54
 712:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 713:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1464              	 .loc 2 713 0
 1465 0060 FB68     	 ldr r3,[r7,#12]
 1466 0062 8022     	 mov r2,#128
 1467 0064 D203     	 lsl r2,r2,#15
 1468 0066 1343     	 orr r3,r2
 1469 0068 FB60     	 str r3,[r7,#12]
 1470 006a 03E0     	 b .L55
 1471              	.L54:
 714:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 715:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 716:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 717:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1472              	 .loc 2 717 0
 1473 006c FB68     	 ldr r3,[r7,#12]
 1474 006e 064A     	 ldr r2,.L56+8
 1475 0070 1340     	 and r3,r2
 1476 0072 FB60     	 str r3,[r7,#12]
 1477              	.L55:
 718:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 719:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 720:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1478              	 .loc 2 720 0
 1479 0074 7B68     	 ldr r3,[r7,#4]
 1480 0076 FA68     	 ldr r2,[r7,#12]
 1481 0078 5A61     	 str r2,[r3,#20]
 721:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1482              	 .loc 2 721 0
 1483 007a BD46     	 mov sp,r7
 1484 007c 04B0     	 add sp,sp,#16
 1485              	 
 1486 007e 80BD     	 pop {r7,pc}
 1487              	.L57:
 1488              	 .align 2
 1489              	.L56:
 1490 0080 FFFFFDFF 	 .word -131073
 1491 0084 FFFFDFFF 	 .word -2097153
 1492 0088 FFFFBFFF 	 .word -4194305
 1493              	 .cfi_endproc
 1494              	.LFE142:
 1496              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1497              	 .align 2
 1498              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1499              	 .code 16
 1500              	 .thumb_func
 1502              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1503              	.LFB143:
 722:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 723:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 724:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 725:../Libraries/XMCLib/src/xmc_ccu8.c ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_config,
 726:../Libraries/XMCLib/src/xmc_ccu8.c ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_config)
 727:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1504              	 .loc 2 727 0
 1505              	 .cfi_startproc
 1506 0000 80B5     	 push {r7,lr}
 1507              	.LCFI75:
 1508              	 .cfi_def_cfa_offset 8
 1509              	 .cfi_offset 7,-8
 1510              	 .cfi_offset 14,-4
 1511 0002 86B0     	 sub sp,sp,#24
 1512              	.LCFI76:
 1513              	 .cfi_def_cfa_offset 32
 1514 0004 00AF     	 add r7,sp,#0
 1515              	.LCFI77:
 1516              	 .cfi_def_cfa_register 7
 1517 0006 F860     	 str r0,[r7,#12]
 1518 0008 B960     	 str r1,[r7,#8]
 1519 000a 7A60     	 str r2,[r7,#4]
 728:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 729:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 730:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 731:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 732:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 733:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 734:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 735:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 736:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) || \
 737:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 738:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 739:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 740:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 741:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 742:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 743:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 744:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 745:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) || \
 746:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 747:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 748:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 749:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 750:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 751:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 752:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 753:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 754:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 755:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 756:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 757:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 758:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 759:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 760:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 761:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 762:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 763:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 764:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 765:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 766:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 767:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 768:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 769:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 770:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 771:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 772:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 773:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 774:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 775:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 776:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 777:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 778:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 779:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 780:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 781:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 782:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 783:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 784:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 785:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 786:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 787:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 788:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 789:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 790:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1520              	 .loc 2 790 0
 1521 000c FB68     	 ldr r3,[r7,#12]
 1522 000e 1B68     	 ldr r3,[r3]
 1523 0010 7B61     	 str r3,[r7,#20]
 791:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 792:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 793:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1524              	 .loc 2 793 0
 1525 0012 7B69     	 ldr r3,[r7,#20]
 1526 0014 2A4A     	 ldr r2,.L59
 1527 0016 1340     	 and r3,r2
 1528 0018 7B61     	 str r3,[r7,#20]
 794:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1529              	 .loc 2 794 0
 1530 001a BB68     	 ldr r3,[r7,#8]
 1531 001c 5B78     	 ldrb r3,[r3,#1]
 1532 001e 9B04     	 lsl r3,r3,#18
 1533 0020 7A69     	 ldr r2,[r7,#20]
 1534 0022 1343     	 orr r3,r2
 1535 0024 7B61     	 str r3,[r7,#20]
 795:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 796:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 797:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1536              	 .loc 2 797 0
 1537 0026 7B69     	 ldr r3,[r7,#20]
 1538 0028 264A     	 ldr r2,.L59+4
 1539 002a 1340     	 and r3,r2
 1540 002c 7B61     	 str r3,[r7,#20]
 798:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1541              	 .loc 2 798 0
 1542 002e 7B68     	 ldr r3,[r7,#4]
 1543 0030 5B78     	 ldrb r3,[r3,#1]
 1544 0032 1B05     	 lsl r3,r3,#20
 1545 0034 7A69     	 ldr r2,[r7,#20]
 1546 0036 1343     	 orr r3,r2
 1547 0038 7B61     	 str r3,[r7,#20]
 799:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 800:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 801:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1548              	 .loc 2 801 0
 1549 003a 7B69     	 ldr r3,[r7,#20]
 1550 003c 224A     	 ldr r2,.L59+8
 1551 003e 1340     	 and r3,r2
 1552 0040 7B61     	 str r3,[r7,#20]
 802:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1553              	 .loc 2 802 0
 1554 0042 BB68     	 ldr r3,[r7,#8]
 1555 0044 9B78     	 ldrb r3,[r3,#2]
 1556 0046 DB05     	 lsl r3,r3,#23
 1557 0048 7A69     	 ldr r2,[r7,#20]
 1558 004a 1343     	 orr r3,r2
 1559 004c 7B61     	 str r3,[r7,#20]
 803:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 804:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 805:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1560              	 .loc 2 805 0
 1561 004e 7B69     	 ldr r3,[r7,#20]
 1562 0050 1E4A     	 ldr r2,.L59+12
 1563 0052 1340     	 and r3,r2
 1564 0054 7B61     	 str r3,[r7,#20]
 806:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1565              	 .loc 2 806 0
 1566 0056 7B68     	 ldr r3,[r7,#4]
 1567 0058 9B78     	 ldrb r3,[r3,#2]
 1568 005a 1B06     	 lsl r3,r3,#24
 1569 005c 7A69     	 ldr r2,[r7,#20]
 1570 005e 1343     	 orr r3,r2
 1571 0060 7B61     	 str r3,[r7,#20]
 807:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 808:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 809:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1572              	 .loc 2 809 0
 1573 0062 7B69     	 ldr r3,[r7,#20]
 1574 0064 1A4A     	 ldr r2,.L59+16
 1575 0066 1340     	 and r3,r2
 1576 0068 7B61     	 str r3,[r7,#20]
 810:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1577              	 .loc 2 810 0
 1578 006a BB68     	 ldr r3,[r7,#8]
 1579 006c DB78     	 ldrb r3,[r3,#3]
 1580 006e DB06     	 lsl r3,r3,#27
 1581 0070 7A69     	 ldr r2,[r7,#20]
 1582 0072 1343     	 orr r3,r2
 1583 0074 7B61     	 str r3,[r7,#20]
 811:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 812:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 813:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1584              	 .loc 2 813 0
 1585 0076 7B69     	 ldr r3,[r7,#20]
 1586 0078 164A     	 ldr r2,.L59+20
 1587 007a 1340     	 and r3,r2
 1588 007c 7B61     	 str r3,[r7,#20]
 814:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1589              	 .loc 2 814 0
 1590 007e 7B68     	 ldr r3,[r7,#4]
 1591 0080 DB78     	 ldrb r3,[r3,#3]
 1592 0082 5B07     	 lsl r3,r3,#29
 1593 0084 7A69     	 ldr r2,[r7,#20]
 1594 0086 1343     	 orr r3,r2
 1595 0088 7B61     	 str r3,[r7,#20]
 815:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 816:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 817:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1596              	 .loc 2 817 0
 1597 008a 7B69     	 ldr r3,[r7,#20]
 1598 008c F022     	 mov r2,#240
 1599 008e 9343     	 bic r3,r2
 1600 0090 7B61     	 str r3,[r7,#20]
 818:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1601              	 .loc 2 818 0
 1602 0092 BB68     	 ldr r3,[r7,#8]
 1603 0094 1B78     	 ldrb r3,[r3]
 1604 0096 1B01     	 lsl r3,r3,#4
 1605 0098 7A69     	 ldr r2,[r7,#20]
 1606 009a 1343     	 orr r3,r2
 1607 009c 7B61     	 str r3,[r7,#20]
 819:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 820:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 821:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1608              	 .loc 2 821 0
 1609 009e 7B69     	 ldr r3,[r7,#20]
 1610 00a0 0D4A     	 ldr r2,.L59+24
 1611 00a2 1340     	 and r3,r2
 1612 00a4 7B61     	 str r3,[r7,#20]
 822:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1613              	 .loc 2 822 0
 1614 00a6 7B68     	 ldr r3,[r7,#4]
 1615 00a8 1B78     	 ldrb r3,[r3]
 1616 00aa 1B02     	 lsl r3,r3,#8
 1617 00ac 7A69     	 ldr r2,[r7,#20]
 1618 00ae 1343     	 orr r3,r2
 1619 00b0 7B61     	 str r3,[r7,#20]
 823:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 824:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1620              	 .loc 2 824 0
 1621 00b2 FB68     	 ldr r3,[r7,#12]
 1622 00b4 7A69     	 ldr r2,[r7,#20]
 1623 00b6 1A60     	 str r2,[r3]
 825:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 826:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1624              	 .loc 2 826 0
 1625 00b8 BD46     	 mov sp,r7
 1626 00ba 06B0     	 add sp,sp,#24
 1627              	 
 1628 00bc 80BD     	 pop {r7,pc}
 1629              	.L60:
 1630 00be C046     	 .align 2
 1631              	.L59:
 1632 00c0 FFFFF3FF 	 .word -786433
 1633 00c4 FFFFCFFF 	 .word -3145729
 1634 00c8 FFFF7FFF 	 .word -8388609
 1635 00cc FFFFFFFE 	 .word -16777217
 1636 00d0 FFFFFFE7 	 .word -402653185
 1637 00d4 FFFFFF9F 	 .word -1610612737
 1638 00d8 FFF0FFFF 	 .word -3841
 1639              	 .cfi_endproc
 1640              	.LFE143:
 1642              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1643              	 .align 2
 1644              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1645              	 .code 16
 1646              	 .thumb_func
 1648              	XMC_CCU8_SLICE_ConfigureEvent:
 1649              	.LFB144:
 827:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 828:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 829:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 830:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 831:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 832:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1650              	 .loc 2 832 0
 1651              	 .cfi_startproc
 1652 0000 80B5     	 push {r7,lr}
 1653              	.LCFI78:
 1654              	 .cfi_def_cfa_offset 8
 1655              	 .cfi_offset 7,-8
 1656              	 .cfi_offset 14,-4
 1657 0002 88B0     	 sub sp,sp,#32
 1658              	.LCFI79:
 1659              	 .cfi_def_cfa_offset 40
 1660 0004 00AF     	 add r7,sp,#0
 1661              	.LCFI80:
 1662              	 .cfi_def_cfa_register 7
 1663 0006 F860     	 str r0,[r7,#12]
 1664 0008 7A60     	 str r2,[r7,#4]
 1665 000a 0B23     	 mov r3,#11
 1666 000c FB18     	 add r3,r7,r3
 1667 000e 0A1C     	 add r2,r1,#0
 1668 0010 1A70     	 strb r2,[r3]
 833:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 834:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 835:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 836:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 837:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 838:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 839:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 840:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 841:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 842:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 843:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) || \
 844:../Libraries/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 845:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 846:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 847:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 849:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1669              	 .loc 2 849 0
 1670 0012 1F23     	 mov r3,#31
 1671 0014 FB18     	 add r3,r7,r3
 1672 0016 0B22     	 mov r2,#11
 1673 0018 BA18     	 add r2,r7,r2
 1674 001a 1278     	 ldrb r2,[r2]
 1675 001c 013A     	 sub r2,r2,#1
 1676 001e 1A70     	 strb r2,[r3]
 850:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 851:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 852:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 853:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 854:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 855:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 856:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 857:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 858:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 859:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 860:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 861:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 862:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 863:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 864:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 865:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 866:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 867:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 868:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 869:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 870:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 871:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 872:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 873:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 874:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 875:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 876:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 877:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 878:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 879:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 880:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 881:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1677              	 .loc 2 881 0
 1678 0020 FB68     	 ldr r3,[r7,#12]
 1679 0022 1B68     	 ldr r3,[r3]
 1680 0024 BB61     	 str r3,[r7,#24]
 882:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 883:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 884:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1681              	 .loc 2 884 0
 1682 0026 1F23     	 mov r3,#31
 1683 0028 FB18     	 add r3,r7,r3
 1684 002a 1B78     	 ldrb r3,[r3]
 1685 002c DB18     	 add r3,r3,r3
 1686 002e DAB2     	 uxtb r2,r3
 1687 0030 1723     	 mov r3,#23
 1688 0032 FB18     	 add r3,r7,r3
 1689 0034 1032     	 add r2,r2,#16
 1690 0036 1A70     	 strb r2,[r3]
 885:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1691              	 .loc 2 885 0
 1692 0038 1723     	 mov r3,#23
 1693 003a FB18     	 add r3,r7,r3
 1694 003c 1B78     	 ldrb r3,[r3]
 1695 003e 0322     	 mov r2,#3
 1696 0040 9A40     	 lsl r2,r2,r3
 1697 0042 131C     	 mov r3,r2
 1698 0044 DA43     	 mvn r2,r3
 1699 0046 BB69     	 ldr r3,[r7,#24]
 1700 0048 1340     	 and r3,r2
 1701 004a BB61     	 str r3,[r7,#24]
 886:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 1702              	 .loc 2 886 0
 1703 004c 7B68     	 ldr r3,[r7,#4]
 1704 004e 5B78     	 ldrb r3,[r3,#1]
 1705 0050 1A1C     	 mov r2,r3
 1706 0052 1723     	 mov r3,#23
 1707 0054 FB18     	 add r3,r7,r3
 1708 0056 1B78     	 ldrb r3,[r3]
 1709 0058 9A40     	 lsl r2,r2,r3
 1710 005a 131C     	 mov r3,r2
 1711 005c BA69     	 ldr r2,[r7,#24]
 1712 005e 1343     	 orr r3,r2
 1713 0060 BB61     	 str r3,[r7,#24]
 887:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 888:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 889:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 1714              	 .loc 2 889 0
 1715 0062 1723     	 mov r3,#23
 1716 0064 FB18     	 add r3,r7,r3
 1717 0066 1F22     	 mov r2,#31
 1718 0068 BA18     	 add r2,r7,r2
 1719 006a 1278     	 ldrb r2,[r2]
 1720 006c 1632     	 add r2,r2,#22
 1721 006e 1A70     	 strb r2,[r3]
 890:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1722              	 .loc 2 890 0
 1723 0070 1723     	 mov r3,#23
 1724 0072 FB18     	 add r3,r7,r3
 1725 0074 1B78     	 ldrb r3,[r3]
 1726 0076 0122     	 mov r2,#1
 1727 0078 9A40     	 lsl r2,r2,r3
 1728 007a 131C     	 mov r3,r2
 1729 007c DA43     	 mvn r2,r3
 1730 007e BB69     	 ldr r3,[r7,#24]
 1731 0080 1340     	 and r3,r2
 1732 0082 BB61     	 str r3,[r7,#24]
 891:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 1733              	 .loc 2 891 0
 1734 0084 7B68     	 ldr r3,[r7,#4]
 1735 0086 9B78     	 ldrb r3,[r3,#2]
 1736 0088 1A1C     	 mov r2,r3
 1737 008a 1723     	 mov r3,#23
 1738 008c FB18     	 add r3,r7,r3
 1739 008e 1B78     	 ldrb r3,[r3]
 1740 0090 9A40     	 lsl r2,r2,r3
 1741 0092 131C     	 mov r3,r2
 1742 0094 BA69     	 ldr r2,[r7,#24]
 1743 0096 1343     	 orr r3,r2
 1744 0098 BB61     	 str r3,[r7,#24]
 892:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 893:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 894:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1745              	 .loc 2 894 0
 1746 009a 1F23     	 mov r3,#31
 1747 009c FB18     	 add r3,r7,r3
 1748 009e 1B78     	 ldrb r3,[r3]
 1749 00a0 DB18     	 add r3,r3,r3
 1750 00a2 DAB2     	 uxtb r2,r3
 1751 00a4 1723     	 mov r3,#23
 1752 00a6 FB18     	 add r3,r7,r3
 1753 00a8 1932     	 add r2,r2,#25
 1754 00aa 1A70     	 strb r2,[r3]
 895:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1755              	 .loc 2 895 0
 1756 00ac 1723     	 mov r3,#23
 1757 00ae FB18     	 add r3,r7,r3
 1758 00b0 1B78     	 ldrb r3,[r3]
 1759 00b2 0322     	 mov r2,#3
 1760 00b4 9A40     	 lsl r2,r2,r3
 1761 00b6 131C     	 mov r3,r2
 1762 00b8 DA43     	 mvn r2,r3
 1763 00ba BB69     	 ldr r3,[r7,#24]
 1764 00bc 1340     	 and r3,r2
 1765 00be BB61     	 str r3,[r7,#24]
 896:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 1766              	 .loc 2 896 0
 1767 00c0 7B68     	 ldr r3,[r7,#4]
 1768 00c2 DB78     	 ldrb r3,[r3,#3]
 1769 00c4 1A1C     	 mov r2,r3
 1770 00c6 1723     	 mov r3,#23
 1771 00c8 FB18     	 add r3,r7,r3
 1772 00ca 1B78     	 ldrb r3,[r3]
 1773 00cc 9A40     	 lsl r2,r2,r3
 1774 00ce 131C     	 mov r3,r2
 1775 00d0 BA69     	 ldr r2,[r7,#24]
 1776 00d2 1343     	 orr r3,r2
 1777 00d4 BB61     	 str r3,[r7,#24]
 897:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 898:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 899:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1778              	 .loc 2 899 0
 1779 00d6 1723     	 mov r3,#23
 1780 00d8 FB18     	 add r3,r7,r3
 1781 00da 1F22     	 mov r2,#31
 1782 00dc BA18     	 add r2,r7,r2
 1783 00de 1278     	 ldrb r2,[r2]
 1784 00e0 9200     	 lsl r2,r2,#2
 1785 00e2 1A70     	 strb r2,[r3]
 900:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1786              	 .loc 2 900 0
 1787 00e4 1723     	 mov r3,#23
 1788 00e6 FB18     	 add r3,r7,r3
 1789 00e8 1B78     	 ldrb r3,[r3]
 1790 00ea 0F22     	 mov r2,#15
 1791 00ec 9A40     	 lsl r2,r2,r3
 1792 00ee 131C     	 mov r3,r2
 1793 00f0 DA43     	 mvn r2,r3
 1794 00f2 BB69     	 ldr r3,[r7,#24]
 1795 00f4 1340     	 and r3,r2
 1796 00f6 BB61     	 str r3,[r7,#24]
 901:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1797              	 .loc 2 901 0
 1798 00f8 7B68     	 ldr r3,[r7,#4]
 1799 00fa 1B78     	 ldrb r3,[r3]
 1800 00fc 1A1C     	 mov r2,r3
 1801 00fe 1723     	 mov r3,#23
 1802 0100 FB18     	 add r3,r7,r3
 1803 0102 1B78     	 ldrb r3,[r3]
 1804 0104 9A40     	 lsl r2,r2,r3
 1805 0106 131C     	 mov r3,r2
 1806 0108 BA69     	 ldr r2,[r7,#24]
 1807 010a 1343     	 orr r3,r2
 1808 010c BB61     	 str r3,[r7,#24]
 902:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 903:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1809              	 .loc 2 903 0
 1810 010e FB68     	 ldr r3,[r7,#12]
 1811 0110 BA69     	 ldr r2,[r7,#24]
 1812 0112 1A60     	 str r2,[r3]
 904:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 905:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1813              	 .loc 2 905 0
 1814 0114 BD46     	 mov sp,r7
 1815 0116 08B0     	 add sp,sp,#32
 1816              	 
 1817 0118 80BD     	 pop {r7,pc}
 1818              	 .cfi_endproc
 1819              	.LFE144:
 1821 011a C046     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 1822              	 .align 2
 1823              	 .global XMC_CCU8_SLICE_SetInput
 1824              	 .code 16
 1825              	 .thumb_func
 1827              	XMC_CCU8_SLICE_SetInput:
 1828              	.LFB145:
 906:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 907:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 908:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 909:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_EVENT_t event,
 910:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 911:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1829              	 .loc 2 911 0
 1830              	 .cfi_startproc
 1831 0000 80B5     	 push {r7,lr}
 1832              	.LCFI81:
 1833              	 .cfi_def_cfa_offset 8
 1834              	 .cfi_offset 7,-8
 1835              	 .cfi_offset 14,-4
 1836 0002 84B0     	 sub sp,sp,#16
 1837              	.LCFI82:
 1838              	 .cfi_def_cfa_offset 24
 1839 0004 00AF     	 add r7,sp,#0
 1840              	.LCFI83:
 1841              	 .cfi_def_cfa_register 7
 1842 0006 7860     	 str r0,[r7,#4]
 1843 0008 081C     	 mov r0,r1
 1844 000a 111C     	 mov r1,r2
 1845 000c FB1C     	 add r3,r7,#3
 1846 000e 021C     	 add r2,r0,#0
 1847 0010 1A70     	 strb r2,[r3]
 1848 0012 BB1C     	 add r3,r7,#2
 1849 0014 0A1C     	 add r2,r1,#0
 1850 0016 1A70     	 strb r2,[r3]
 912:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 913:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 914:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 915:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 916:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 917:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 918:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 919:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 920:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 921:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1851              	 .loc 2 921 0
 1852 0018 0F23     	 mov r3,#15
 1853 001a FB18     	 add r3,r7,r3
 1854 001c FA1C     	 add r2,r7,#3
 1855 001e 1278     	 ldrb r2,[r2]
 1856 0020 013A     	 sub r2,r2,#1
 1857 0022 1A70     	 strb r2,[r3]
 922:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 923:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 924:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 925:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 926:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 927:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 928:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 929:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 930:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 931:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 932:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1858              	 .loc 2 932 0
 1859 0024 0E23     	 mov r3,#14
 1860 0026 FB18     	 add r3,r7,r3
 1861 0028 0F22     	 mov r2,#15
 1862 002a BA18     	 add r2,r7,r2
 1863 002c 1278     	 ldrb r2,[r2]
 1864 002e 9200     	 lsl r2,r2,#2
 1865 0030 1A70     	 strb r2,[r3]
 933:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1866              	 .loc 2 933 0
 1867 0032 7B68     	 ldr r3,[r7,#4]
 1868 0034 1B68     	 ldr r3,[r3]
 1869 0036 BB60     	 str r3,[r7,#8]
 934:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1870              	 .loc 2 934 0
 1871 0038 0E23     	 mov r3,#14
 1872 003a FB18     	 add r3,r7,r3
 1873 003c 1B78     	 ldrb r3,[r3]
 1874 003e 0F22     	 mov r2,#15
 1875 0040 9A40     	 lsl r2,r2,r3
 1876 0042 131C     	 mov r3,r2
 1877 0044 DA43     	 mvn r2,r3
 1878 0046 BB68     	 ldr r3,[r7,#8]
 1879 0048 1340     	 and r3,r2
 1880 004a BB60     	 str r3,[r7,#8]
 935:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 1881              	 .loc 2 935 0
 1882 004c BB1C     	 add r3,r7,#2
 1883 004e 1A78     	 ldrb r2,[r3]
 1884 0050 0E23     	 mov r3,#14
 1885 0052 FB18     	 add r3,r7,r3
 1886 0054 1B78     	 ldrb r3,[r3]
 1887 0056 9A40     	 lsl r2,r2,r3
 1888 0058 131C     	 mov r3,r2
 1889 005a BA68     	 ldr r2,[r7,#8]
 1890 005c 1343     	 orr r3,r2
 1891 005e BB60     	 str r3,[r7,#8]
 936:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 937:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1892              	 .loc 2 937 0
 1893 0060 7B68     	 ldr r3,[r7,#4]
 1894 0062 BA68     	 ldr r2,[r7,#8]
 1895 0064 1A60     	 str r2,[r3]
 938:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 939:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1896              	 .loc 2 939 0
 1897 0066 BD46     	 mov sp,r7
 1898 0068 04B0     	 add sp,sp,#16
 1899              	 
 1900 006a 80BD     	 pop {r7,pc}
 1901              	 .cfi_endproc
 1902              	.LFE145:
 1904              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 1905              	 .align 2
 1906              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 1907              	 .code 16
 1908              	 .thumb_func
 1910              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 1911              	.LFB146:
 940:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 941:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 942:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 943:../Libraries/XMCLib/src/xmc_ccu8.c ****                                        const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 944:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1912              	 .loc 2 944 0
 1913              	 .cfi_startproc
 1914 0000 80B5     	 push {r7,lr}
 1915              	.LCFI84:
 1916              	 .cfi_def_cfa_offset 8
 1917              	 .cfi_offset 7,-8
 1918              	 .cfi_offset 14,-4
 1919 0002 84B0     	 sub sp,sp,#16
 1920              	.LCFI85:
 1921              	 .cfi_def_cfa_offset 24
 1922 0004 00AF     	 add r7,sp,#0
 1923              	.LCFI86:
 1924              	 .cfi_def_cfa_register 7
 1925 0006 7860     	 str r0,[r7,#4]
 1926 0008 0A1C     	 mov r2,r1
 1927 000a FB1C     	 add r3,r7,#3
 1928 000c 1A70     	 strb r2,[r3]
 945:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 946:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 947:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 948:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 949:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) || \
 950:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 951:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 952:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1929              	 .loc 2 952 0
 1930 000e 7B68     	 ldr r3,[r7,#4]
 1931 0010 5B69     	 ldr r3,[r3,#20]
 1932 0012 FB60     	 str r3,[r7,#12]
 953:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 954:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1933              	 .loc 2 954 0
 1934 0014 FB1C     	 add r3,r7,#3
 1935 0016 1B78     	 ldrb r3,[r3]
 1936 0018 002B     	 cmp r3,#0
 1937 001a 04D1     	 bne .L64
 955:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 956:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 1938              	 .loc 2 956 0
 1939 001c FB68     	 ldr r3,[r7,#12]
 1940 001e 0222     	 mov r2,#2
 1941 0020 9343     	 bic r3,r2
 1942 0022 FB60     	 str r3,[r7,#12]
 1943 0024 03E0     	 b .L65
 1944              	.L64:
 957:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 958:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 959:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 960:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 1945              	 .loc 2 960 0
 1946 0026 FB68     	 ldr r3,[r7,#12]
 1947 0028 0222     	 mov r2,#2
 1948 002a 1343     	 orr r3,r2
 1949 002c FB60     	 str r3,[r7,#12]
 1950              	.L65:
 961:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 962:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 963:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1951              	 .loc 2 963 0
 1952 002e 7B68     	 ldr r3,[r7,#4]
 1953 0030 FA68     	 ldr r2,[r7,#12]
 1954 0032 5A61     	 str r2,[r3,#20]
 964:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1955              	 .loc 2 964 0
 1956 0034 BD46     	 mov sp,r7
 1957 0036 04B0     	 add sp,sp,#16
 1958              	 
 1959 0038 80BD     	 pop {r7,pc}
 1960              	 .cfi_endproc
 1961              	.LFE146:
 1963 003a C046     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 1964              	 .align 2
 1965              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 1966              	 .code 16
 1967              	 .thumb_func
 1969              	XMC_CCU8_SLICE_SetTimerCountingMode:
 1970              	.LFB147:
 965:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 966:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 967:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 968:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1971              	 .loc 2 968 0
 1972              	 .cfi_startproc
 1973 0000 80B5     	 push {r7,lr}
 1974              	.LCFI87:
 1975              	 .cfi_def_cfa_offset 8
 1976              	 .cfi_offset 7,-8
 1977              	 .cfi_offset 14,-4
 1978 0002 84B0     	 sub sp,sp,#16
 1979              	.LCFI88:
 1980              	 .cfi_def_cfa_offset 24
 1981 0004 00AF     	 add r7,sp,#0
 1982              	.LCFI89:
 1983              	 .cfi_def_cfa_register 7
 1984 0006 7860     	 str r0,[r7,#4]
 1985 0008 0A1C     	 mov r2,r1
 1986 000a FB1C     	 add r3,r7,#3
 1987 000c 1A70     	 strb r2,[r3]
 969:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 970:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 971:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 972:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 973:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) || \
 974:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 975:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 976:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1988              	 .loc 2 976 0
 1989 000e 7B68     	 ldr r3,[r7,#4]
 1990 0010 5B69     	 ldr r3,[r3,#20]
 1991 0012 FB60     	 str r3,[r7,#12]
 977:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 978:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 1992              	 .loc 2 978 0
 1993 0014 FB1C     	 add r3,r7,#3
 1994 0016 1B78     	 ldrb r3,[r3]
 1995 0018 002B     	 cmp r3,#0
 1996 001a 04D1     	 bne .L67
 979:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 980:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 1997              	 .loc 2 980 0
 1998 001c FB68     	 ldr r3,[r7,#12]
 1999 001e 0122     	 mov r2,#1
 2000 0020 9343     	 bic r3,r2
 2001 0022 FB60     	 str r3,[r7,#12]
 2002 0024 03E0     	 b .L68
 2003              	.L67:
 981:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 982:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 983:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 984:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2004              	 .loc 2 984 0
 2005 0026 FB68     	 ldr r3,[r7,#12]
 2006 0028 0122     	 mov r2,#1
 2007 002a 1343     	 orr r3,r2
 2008 002c FB60     	 str r3,[r7,#12]
 2009              	.L68:
 985:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 986:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 987:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2010              	 .loc 2 987 0
 2011 002e 7B68     	 ldr r3,[r7,#4]
 2012 0030 FA68     	 ldr r2,[r7,#12]
 2013 0032 5A61     	 str r2,[r3,#20]
 988:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2014              	 .loc 2 988 0
 2015 0034 BD46     	 mov sp,r7
 2016 0036 04B0     	 add sp,sp,#16
 2017              	 
 2018 0038 80BD     	 pop {r7,pc}
 2019              	 .cfi_endproc
 2020              	.LFE147:
 2022 003a C046     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2023              	 .align 2
 2024              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2025              	 .code 16
 2026              	 .thumb_func
 2028              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2029              	.LFB148:
 989:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 990:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 991:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 992:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2030              	 .loc 2 992 0
 2031              	 .cfi_startproc
 2032 0000 80B5     	 push {r7,lr}
 2033              	.LCFI90:
 2034              	 .cfi_def_cfa_offset 8
 2035              	 .cfi_offset 7,-8
 2036              	 .cfi_offset 14,-4
 2037 0002 82B0     	 sub sp,sp,#8
 2038              	.LCFI91:
 2039              	 .cfi_def_cfa_offset 16
 2040 0004 00AF     	 add r7,sp,#0
 2041              	.LCFI92:
 2042              	 .cfi_def_cfa_register 7
 2043 0006 7860     	 str r0,[r7,#4]
 2044 0008 0A1C     	 mov r2,r1
 2045 000a BB1C     	 add r3,r7,#2
 2046 000c 1A80     	 strh r2,[r3]
 993:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 994:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2047              	 .loc 2 994 0
 2048 000e BB1C     	 add r3,r7,#2
 2049 0010 1A88     	 ldrh r2,[r3]
 2050 0012 7B68     	 ldr r3,[r7,#4]
 2051 0014 5A63     	 str r2,[r3,#52]
 995:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2052              	 .loc 2 995 0
 2053 0016 BD46     	 mov sp,r7
 2054 0018 02B0     	 add sp,sp,#8
 2055              	 
 2056 001a 80BD     	 pop {r7,pc}
 2057              	 .cfi_endproc
 2058              	.LFE148:
 2060              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2061              	 .align 2
 2062              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2063              	 .code 16
 2064              	 .thumb_func
 2066              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2067              	.LFB149:
 996:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 997:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 998:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 999:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2068              	 .loc 2 999 0
 2069              	 .cfi_startproc
 2070 0000 80B5     	 push {r7,lr}
 2071              	.LCFI93:
 2072              	 .cfi_def_cfa_offset 8
 2073              	 .cfi_offset 7,-8
 2074              	 .cfi_offset 14,-4
 2075 0002 82B0     	 sub sp,sp,#8
 2076              	.LCFI94:
 2077              	 .cfi_def_cfa_offset 16
 2078 0004 00AF     	 add r7,sp,#0
 2079              	.LCFI95:
 2080              	 .cfi_def_cfa_register 7
 2081 0006 7860     	 str r0,[r7,#4]
 2082 0008 0A1C     	 mov r2,r1
 2083 000a FB1C     	 add r3,r7,#3
 2084 000c 1A70     	 strb r2,[r3]
1000:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
1001:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
1002:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (slice->CV[reg_num]);
 2085              	 .loc 2 1002 0
 2086 000e FB1C     	 add r3,r7,#3
 2087 0010 1B78     	 ldrb r3,[r3]
 2088 0012 7A68     	 ldr r2,[r7,#4]
 2089 0014 1C33     	 add r3,r3,#28
 2090 0016 9B00     	 lsl r3,r3,#2
 2091 0018 D318     	 add r3,r2,r3
 2092 001a 5B68     	 ldr r3,[r3,#4]
1003:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2093              	 .loc 2 1003 0
 2094 001c 181C     	 mov r0,r3
 2095 001e BD46     	 mov sp,r7
 2096 0020 02B0     	 add sp,sp,#8
 2097              	 
 2098 0022 80BD     	 pop {r7,pc}
 2099              	 .cfi_endproc
 2100              	.LFE149:
 2102              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2103              	 .align 2
 2104              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2105              	 .code 16
 2106              	 .thumb_func
 2108              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2109              	.LFB150:
1004:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1005:../Libraries/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
1006:../Libraries/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
1007:../Libraries/XMCLib/src/xmc_ccu8.c ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1008:../Libraries/XMCLib/src/xmc_ccu8.c ****     uint32_t *val_ptr)
1009:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2110              	 .loc 2 1009 0
 2111              	 .cfi_startproc
 2112 0000 80B5     	 push {r7,lr}
 2113              	.LCFI96:
 2114              	 .cfi_def_cfa_offset 8
 2115              	 .cfi_offset 7,-8
 2116              	 .cfi_offset 14,-4
 2117 0002 86B0     	 sub sp,sp,#24
 2118              	.LCFI97:
 2119              	 .cfi_def_cfa_offset 32
 2120 0004 00AF     	 add r7,sp,#0
 2121              	.LCFI98:
 2122              	 .cfi_def_cfa_register 7
 2123 0006 F860     	 str r0,[r7,#12]
 2124 0008 7A60     	 str r2,[r7,#4]
 2125 000a 0B23     	 mov r3,#11
 2126 000c FB18     	 add r3,r7,r3
 2127 000e 0A1C     	 add r2,r1,#0
 2128 0010 1A70     	 strb r2,[r3]
1010:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1011:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1012:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1013:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1014:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1015:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1016:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1017:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1018:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) || \
1019:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1020:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1021:../Libraries/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2129              	 .loc 2 1021 0
 2130 0012 1723     	 mov r3,#23
 2131 0014 FB18     	 add r3,r7,r3
 2132 0016 0122     	 mov r2,#1
 2133 0018 1A70     	 strb r2,[r3]
1022:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1023:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1024:../Libraries/XMCLib/src/xmc_ccu8.c ****   if ((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2134              	 .loc 2 1024 0
 2135 001a FB68     	 ldr r3,[r7,#12]
 2136 001c 5B69     	 ldr r3,[r3,#20]
 2137 001e 1022     	 mov r2,#16
 2138 0020 1340     	 and r3,r2
 2139 0022 08D0     	 beq .L73
1025:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1026:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1027:../Libraries/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2140              	 .loc 2 1027 0
 2141 0024 1523     	 mov r3,#21
 2142 0026 FB18     	 add r3,r7,r3
 2143 0028 0022     	 mov r2,#0
 2144 002a 1A70     	 strb r2,[r3]
1028:../Libraries/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2145              	 .loc 2 1028 0
 2146 002c 1423     	 mov r3,#20
 2147 002e FB18     	 add r3,r7,r3
 2148 0030 0422     	 mov r2,#4
 2149 0032 1A70     	 strb r2,[r3]
 2150 0034 15E0     	 b .L74
 2151              	.L73:
1029:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1030:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1031:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1032:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1033:../Libraries/XMCLib/src/xmc_ccu8.c ****     if (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2152              	 .loc 2 1033 0
 2153 0036 0B23     	 mov r3,#11
 2154 0038 FB18     	 add r3,r7,r3
 2155 003a 1B78     	 ldrb r3,[r3]
 2156 003c 012B     	 cmp r3,#1
 2157 003e 08D1     	 bne .L75
1034:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1035:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2158              	 .loc 2 1035 0
 2159 0040 1523     	 mov r3,#21
 2160 0042 FB18     	 add r3,r7,r3
 2161 0044 0222     	 mov r2,#2
 2162 0046 1A70     	 strb r2,[r3]
1036:../Libraries/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2163              	 .loc 2 1036 0
 2164 0048 1423     	 mov r3,#20
 2165 004a FB18     	 add r3,r7,r3
 2166 004c 0422     	 mov r2,#4
 2167 004e 1A70     	 strb r2,[r3]
 2168 0050 07E0     	 b .L74
 2169              	.L75:
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1038:../Libraries/XMCLib/src/xmc_ccu8.c ****     else
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1040:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2170              	 .loc 2 1040 0
 2171 0052 1523     	 mov r3,#21
 2172 0054 FB18     	 add r3,r7,r3
 2173 0056 0022     	 mov r2,#0
 2174 0058 1A70     	 strb r2,[r3]
1041:../Libraries/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2175              	 .loc 2 1041 0
 2176 005a 1423     	 mov r3,#20
 2177 005c FB18     	 add r3,r7,r3
 2178 005e 0222     	 mov r2,#2
 2179 0060 1A70     	 strb r2,[r3]
 2180              	.L74:
1042:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1043:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1044:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****   for (i = start; i < end; i++)
 2181              	 .loc 2 1045 0
 2182 0062 1623     	 mov r3,#22
 2183 0064 FB18     	 add r3,r7,r3
 2184 0066 1522     	 mov r2,#21
 2185 0068 BA18     	 add r2,r7,r2
 2186 006a 1278     	 ldrb r2,[r2]
 2187 006c 1A70     	 strb r2,[r3]
 2188 006e 21E0     	 b .L76
 2189              	.L79:
1046:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1047:../Libraries/XMCLib/src/xmc_ccu8.c ****     if ( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2190              	 .loc 2 1047 0
 2191 0070 1623     	 mov r3,#22
 2192 0072 FB18     	 add r3,r7,r3
 2193 0074 1B78     	 ldrb r3,[r3]
 2194 0076 FA68     	 ldr r2,[r7,#12]
 2195 0078 1C33     	 add r3,r3,#28
 2196 007a 9B00     	 lsl r3,r3,#2
 2197 007c D318     	 add r3,r2,r3
 2198 007e 5A68     	 ldr r2,[r3,#4]
 2199 0080 8023     	 mov r3,#128
 2200 0082 5B03     	 lsl r3,r3,#13
 2201 0084 1340     	 and r3,r2
 2202 0086 0ED0     	 beq .L77
1048:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1049:../Libraries/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2203              	 .loc 2 1049 0
 2204 0088 1623     	 mov r3,#22
 2205 008a FB18     	 add r3,r7,r3
 2206 008c 1B78     	 ldrb r3,[r3]
 2207 008e FA68     	 ldr r2,[r7,#12]
 2208 0090 1C33     	 add r3,r3,#28
 2209 0092 9B00     	 lsl r3,r3,#2
 2210 0094 D318     	 add r3,r2,r3
 2211 0096 5A68     	 ldr r2,[r3,#4]
 2212 0098 7B68     	 ldr r3,[r7,#4]
 2213 009a 1A60     	 str r2,[r3]
1050:../Libraries/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2214              	 .loc 2 1050 0
 2215 009c 1723     	 mov r3,#23
 2216 009e FB18     	 add r3,r7,r3
 2217 00a0 0022     	 mov r2,#0
 2218 00a2 1A70     	 strb r2,[r3]
1051:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2219              	 .loc 2 1051 0
 2220 00a4 0EE0     	 b .L78
 2221              	.L77:
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2222              	 .loc 2 1045 0 discriminator 2
 2223 00a6 1623     	 mov r3,#22
 2224 00a8 FB18     	 add r3,r7,r3
 2225 00aa 1A78     	 ldrb r2,[r3]
 2226 00ac 1623     	 mov r3,#22
 2227 00ae FB18     	 add r3,r7,r3
 2228 00b0 0132     	 add r2,r2,#1
 2229 00b2 1A70     	 strb r2,[r3]
 2230              	.L76:
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2231              	 .loc 2 1045 0 is_stmt 0 discriminator 1
 2232 00b4 1623     	 mov r3,#22
 2233 00b6 FA18     	 add r2,r7,r3
 2234 00b8 1423     	 mov r3,#20
 2235 00ba FB18     	 add r3,r7,r3
 2236 00bc 1278     	 ldrb r2,[r2]
 2237 00be 1B78     	 ldrb r3,[r3]
 2238 00c0 9A42     	 cmp r2,r3
 2239 00c2 D5D3     	 bcc .L79
 2240              	.L78:
1052:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1053:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1054:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1055:../Libraries/XMCLib/src/xmc_ccu8.c ****   return retval;
 2241              	 .loc 2 1055 0 is_stmt 1
 2242 00c4 1723     	 mov r3,#23
 2243 00c6 FB18     	 add r3,r7,r3
 2244 00c8 1B78     	 ldrb r3,[r3]
1056:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2245              	 .loc 2 1056 0
 2246 00ca 181C     	 mov r0,r3
 2247 00cc BD46     	 mov sp,r7
 2248 00ce 06B0     	 add sp,sp,#24
 2249              	 
 2250 00d0 80BD     	 pop {r7,pc}
 2251              	 .cfi_endproc
 2252              	.LFE150:
 2254 00d2 C046     	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2255              	 .align 2
 2256              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 2257              	 .code 16
 2258              	 .thumb_func
 2260              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 2261              	.LFB151:
1057:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1058:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1059:../Libraries/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1060:../Libraries/XMCLib/src/xmc_ccu8.c **** {
1061:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1062:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1063:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1064:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1065:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1066:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1067:../Libraries/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
1068:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1069:../Libraries/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
1070:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1071:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1072:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (extracted_slice != ((uint32_t)slice_number))
1073:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1074:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = -1;
1075:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1076:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1077:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (cap);
1078:../Libraries/XMCLib/src/xmc_ccu8.c **** }
1079:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
1080:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1081:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1082:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2262              	 .loc 2 1082 0
 2263              	 .cfi_startproc
 2264 0000 80B5     	 push {r7,lr}
 2265              	.LCFI99:
 2266              	 .cfi_def_cfa_offset 8
 2267              	 .cfi_offset 7,-8
 2268              	 .cfi_offset 14,-4
 2269 0002 84B0     	 sub sp,sp,#16
 2270              	.LCFI100:
 2271              	 .cfi_def_cfa_offset 24
 2272 0004 00AF     	 add r7,sp,#0
 2273              	.LCFI101:
 2274              	 .cfi_def_cfa_register 7
 2275 0006 7860     	 str r0,[r7,#4]
 2276 0008 0A1C     	 mov r2,r1
 2277 000a FB1C     	 add r3,r7,#3
 2278 000c 1A70     	 strb r2,[r3]
1083:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1084:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1085:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1086:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set",
1087:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) || \
1088:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1089:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1090:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
 2279              	 .loc 2 1090 0
 2280 000e FB1C     	 add r3,r7,#3
 2281 0010 1B78     	 ldrb r3,[r3]
 2282 0012 002B     	 cmp r3,#0
 2283 0014 04D1     	 bne .L82
1091:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1092:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD0;
 2284              	 .loc 2 1092 0
 2285 0016 7B68     	 ldr r3,[r7,#4]
 2286 0018 B822     	 mov r2,#184
 2287 001a 9B58     	 ldr r3,[r3,r2]
 2288 001c FB60     	 str r3,[r7,#12]
 2289 001e 03E0     	 b .L83
 2290              	.L82:
1093:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1094:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1095:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1096:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD1;
 2291              	 .loc 2 1096 0
 2292 0020 7B68     	 ldr r3,[r7,#4]
 2293 0022 BC22     	 mov r2,#188
 2294 0024 9B58     	 ldr r3,[r3,r2]
 2295 0026 FB60     	 str r3,[r7,#12]
 2296              	.L83:
1097:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1098:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1099:../Libraries/XMCLib/src/xmc_ccu8.c ****   return cap;
 2297              	 .loc 2 1099 0
 2298 0028 FB68     	 ldr r3,[r7,#12]
1100:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2299              	 .loc 2 1100 0
 2300 002a 181C     	 mov r0,r3
 2301 002c BD46     	 mov sp,r7
 2302 002e 04B0     	 add sp,sp,#16
 2303              	 
 2304 0030 80BD     	 pop {r7,pc}
 2305              	 .cfi_endproc
 2306              	.LFE151:
 2308 0032 C046     	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2309              	 .align 2
 2310              	 .global XMC_CCU8_SLICE_EnableDithering
 2311              	 .code 16
 2312              	 .thumb_func
 2314              	XMC_CCU8_SLICE_EnableDithering:
 2315              	.LFB152:
1101:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
1102:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1103:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1104:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1105:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1106:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1107:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1108:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2316              	 .loc 2 1108 0
 2317              	 .cfi_startproc
 2318 0000 90B5     	 push {r4,r7,lr}
 2319              	.LCFI102:
 2320              	 .cfi_def_cfa_offset 12
 2321              	 .cfi_offset 4,-12
 2322              	 .cfi_offset 7,-8
 2323              	 .cfi_offset 14,-4
 2324 0002 85B0     	 sub sp,sp,#20
 2325              	.LCFI103:
 2326              	 .cfi_def_cfa_offset 32
 2327 0004 00AF     	 add r7,sp,#0
 2328              	.LCFI104:
 2329              	 .cfi_def_cfa_register 7
 2330 0006 7860     	 str r0,[r7,#4]
 2331 0008 0C1C     	 mov r4,r1
 2332 000a 101C     	 mov r0,r2
 2333 000c 191C     	 mov r1,r3
 2334 000e FB1C     	 add r3,r7,#3
 2335 0010 221C     	 add r2,r4,#0
 2336 0012 1A70     	 strb r2,[r3]
 2337 0014 BB1C     	 add r3,r7,#2
 2338 0016 021C     	 add r2,r0,#0
 2339 0018 1A70     	 strb r2,[r3]
 2340 001a 7B1C     	 add r3,r7,#1
 2341 001c 0A1C     	 add r2,r1,#0
 2342 001e 1A70     	 strb r2,[r3]
1109:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1110:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1111:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1112:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1113:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2343              	 .loc 2 1113 0
 2344 0020 7B68     	 ldr r3,[r7,#4]
 2345 0022 5B69     	 ldr r3,[r3,#20]
 2346 0024 FB60     	 str r3,[r7,#12]
1114:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2347              	 .loc 2 1114 0
 2348 0026 FB68     	 ldr r3,[r7,#12]
 2349 0028 104A     	 ldr r2,.L88
 2350 002a 1340     	 and r3,r2
 2351 002c FB60     	 str r3,[r7,#12]
1115:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1116:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (true == period_dither)
 2352              	 .loc 2 1116 0
 2353 002e FB1C     	 add r3,r7,#3
 2354 0030 1B78     	 ldrb r3,[r3]
 2355 0032 002B     	 cmp r3,#0
 2356 0034 04D0     	 beq .L86
1117:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1118:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2357              	 .loc 2 1118 0
 2358 0036 FB68     	 ldr r3,[r7,#12]
 2359 0038 8022     	 mov r2,#128
 2360 003a 9201     	 lsl r2,r2,#6
 2361 003c 1343     	 orr r3,r2
 2362 003e FB60     	 str r3,[r7,#12]
 2363              	.L86:
1119:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1120:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (true == duty_dither)
 2364              	 .loc 2 1120 0
 2365 0040 BB1C     	 add r3,r7,#2
 2366 0042 1B78     	 ldrb r3,[r3]
 2367 0044 002B     	 cmp r3,#0
 2368 0046 04D0     	 beq .L87
1121:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1122:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2369              	 .loc 2 1122 0
 2370 0048 FB68     	 ldr r3,[r7,#12]
 2371 004a 8022     	 mov r2,#128
 2372 004c D201     	 lsl r2,r2,#7
 2373 004e 1343     	 orr r3,r2
 2374 0050 FB60     	 str r3,[r7,#12]
 2375              	.L87:
1123:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1124:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1125:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2376              	 .loc 2 1125 0
 2377 0052 7B68     	 ldr r3,[r7,#4]
 2378 0054 FA68     	 ldr r2,[r7,#12]
 2379 0056 5A61     	 str r2,[r3,#20]
1126:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1127:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2380              	 .loc 2 1127 0
 2381 0058 7A68     	 ldr r2,[r7,#4]
 2382 005a 7B1C     	 add r3,r7,#1
 2383 005c 1B78     	 ldrb r3,[r3]
 2384 005e 101C     	 mov r0,r2
 2385 0060 191C     	 mov r1,r3
 2386 0062 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1128:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2387              	 .loc 2 1128 0
 2388 0066 BD46     	 mov sp,r7
 2389 0068 05B0     	 add sp,sp,#20
 2390              	 
 2391 006a 90BD     	 pop {r4,r7,pc}
 2392              	.L89:
 2393              	 .align 2
 2394              	.L88:
 2395 006c FF9FFFFF 	 .word -24577
 2396              	 .cfi_endproc
 2397              	.LFE152:
 2399              	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2400              	 .align 2
 2401              	 .global XMC_CCU8_SLICE_SetPrescaler
 2402              	 .code 16
 2403              	 .thumb_func
 2405              	XMC_CCU8_SLICE_SetPrescaler:
 2406              	.LFB153:
1129:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1130:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1131:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
1132:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2407              	 .loc 2 1132 0
 2408              	 .cfi_startproc
 2409 0000 80B5     	 push {r7,lr}
 2410              	.LCFI105:
 2411              	 .cfi_def_cfa_offset 8
 2412              	 .cfi_offset 7,-8
 2413              	 .cfi_offset 14,-4
 2414 0002 84B0     	 sub sp,sp,#16
 2415              	.LCFI106:
 2416              	 .cfi_def_cfa_offset 24
 2417 0004 00AF     	 add r7,sp,#0
 2418              	.LCFI107:
 2419              	 .cfi_def_cfa_register 7
 2420 0006 7860     	 str r0,[r7,#4]
 2421 0008 0A1C     	 mov r2,r1
 2422 000a FB1C     	 add r3,r7,#3
 2423 000c 1A70     	 strb r2,[r3]
1133:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1134:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1135:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1136:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1137:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1138:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2424              	 .loc 2 1138 0
 2425 000e 7B68     	 ldr r3,[r7,#4]
 2426 0010 9B6A     	 ldr r3,[r3,#40]
 2427 0012 FB60     	 str r3,[r7,#12]
1139:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2428              	 .loc 2 1139 0
 2429 0014 FB68     	 ldr r3,[r7,#12]
 2430 0016 094A     	 ldr r2,.L91
 2431 0018 1340     	 and r3,r2
 2432 001a FB60     	 str r3,[r7,#12]
1140:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2433              	 .loc 2 1140 0
 2434 001c FB1C     	 add r3,r7,#3
 2435 001e 1B78     	 ldrb r3,[r3]
 2436 0020 1B02     	 lsl r3,r3,#8
 2437 0022 FA68     	 ldr r2,[r7,#12]
 2438 0024 1343     	 orr r3,r2
 2439 0026 FB60     	 str r3,[r7,#12]
1141:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2440              	 .loc 2 1141 0
 2441 0028 7B68     	 ldr r3,[r7,#4]
 2442 002a FA68     	 ldr r2,[r7,#12]
 2443 002c 9A62     	 str r2,[r3,#40]
1142:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1143:../Libraries/XMCLib/src/xmc_ccu8.c ****   /*
1144:../Libraries/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1145:../Libraries/XMCLib/src/xmc_ccu8.c ****    * compare value.
1146:../Libraries/XMCLib/src/xmc_ccu8.c ****    */
1147:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2444              	 .loc 2 1147 0
 2445 002e FB1C     	 add r3,r7,#3
 2446 0030 1A78     	 ldrb r2,[r3]
 2447 0032 7B68     	 ldr r3,[r7,#4]
 2448 0034 5A62     	 str r2,[r3,#36]
1148:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2449              	 .loc 2 1148 0
 2450 0036 BD46     	 mov sp,r7
 2451 0038 04B0     	 add sp,sp,#16
 2452              	 
 2453 003a 80BD     	 pop {r7,pc}
 2454              	.L92:
 2455              	 .align 2
 2456              	.L91:
 2457 003c FFF0FFFF 	 .word -3841
 2458              	 .cfi_endproc
 2459              	.LFE153:
 2461              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2462              	 .align 2
 2463              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2464              	 .code 16
 2465              	 .thumb_func
 2467              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2468              	.LFB154:
1149:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1150:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1151:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1152:../Libraries/XMCLib/src/xmc_ccu8.c ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1153:../Libraries/XMCLib/src/xmc_ccu8.c ****     const uint16_t compare_val)
1154:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2469              	 .loc 2 1154 0
 2470              	 .cfi_startproc
 2471 0000 80B5     	 push {r7,lr}
 2472              	.LCFI108:
 2473              	 .cfi_def_cfa_offset 8
 2474              	 .cfi_offset 7,-8
 2475              	 .cfi_offset 14,-4
 2476 0002 82B0     	 sub sp,sp,#8
 2477              	.LCFI109:
 2478              	 .cfi_def_cfa_offset 16
 2479 0004 00AF     	 add r7,sp,#0
 2480              	.LCFI110:
 2481              	 .cfi_def_cfa_register 7
 2482 0006 7860     	 str r0,[r7,#4]
 2483 0008 081C     	 mov r0,r1
 2484 000a 111C     	 mov r1,r2
 2485 000c FB1C     	 add r3,r7,#3
 2486 000e 021C     	 add r2,r0,#0
 2487 0010 1A70     	 strb r2,[r3]
 2488 0012 3B1C     	 mov r3,r7
 2489 0014 0A1C     	 add r2,r1,#0
 2490 0016 1A80     	 strh r2,[r3]
1155:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1156:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1157:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1158:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2491              	 .loc 2 1158 0
 2492 0018 FB1C     	 add r3,r7,#3
 2493 001a 1B78     	 ldrb r3,[r3]
 2494 001c 002B     	 cmp r3,#0
 2495 001e 04D1     	 bne .L94
1159:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1160:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2496              	 .loc 2 1160 0
 2497 0020 3B1C     	 mov r3,r7
 2498 0022 1A88     	 ldrh r2,[r3]
 2499 0024 7B68     	 ldr r3,[r7,#4]
 2500 0026 DA63     	 str r2,[r3,#60]
 2501 0028 03E0     	 b .L93
 2502              	.L94:
1161:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1162:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1163:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1164:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2503              	 .loc 2 1164 0
 2504 002a 3B1C     	 mov r3,r7
 2505 002c 1A88     	 ldrh r2,[r3]
 2506 002e 7B68     	 ldr r3,[r7,#4]
 2507 0030 5A64     	 str r2,[r3,#68]
 2508              	.L93:
1165:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1166:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2509              	 .loc 2 1166 0
 2510 0032 BD46     	 mov sp,r7
 2511 0034 02B0     	 add sp,sp,#8
 2512              	 
 2513 0036 80BD     	 pop {r7,pc}
 2514              	 .cfi_endproc
 2515              	.LFE154:
 2517              	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2518              	 .align 2
 2519              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2520              	 .code 16
 2521              	 .thumb_func
 2523              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2524              	.LFB155:
1167:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1168:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1169:../Libraries/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1170:../Libraries/XMCLib/src/xmc_ccu8.c ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1171:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2525              	 .loc 2 1171 0
 2526              	 .cfi_startproc
 2527 0000 80B5     	 push {r7,lr}
 2528              	.LCFI111:
 2529              	 .cfi_def_cfa_offset 8
 2530              	 .cfi_offset 7,-8
 2531              	 .cfi_offset 14,-4
 2532 0002 84B0     	 sub sp,sp,#16
 2533              	.LCFI112:
 2534              	 .cfi_def_cfa_offset 24
 2535 0004 00AF     	 add r7,sp,#0
 2536              	.LCFI113:
 2537              	 .cfi_def_cfa_register 7
 2538 0006 7860     	 str r0,[r7,#4]
 2539 0008 0A1C     	 mov r2,r1
 2540 000a FB1C     	 add r3,r7,#3
 2541 000c 1A70     	 strb r2,[r3]
1172:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1173:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1174:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1175:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1176:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1177:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2542              	 .loc 2 1177 0
 2543 000e FB1C     	 add r3,r7,#3
 2544 0010 1B78     	 ldrb r3,[r3]
 2545 0012 002B     	 cmp r3,#0
 2546 0014 05D1     	 bne .L97
1178:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1179:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2547              	 .loc 2 1179 0
 2548 0016 7B68     	 ldr r3,[r7,#4]
 2549 0018 9A6B     	 ldr r2,[r3,#56]
 2550 001a 0E23     	 mov r3,#14
 2551 001c FB18     	 add r3,r7,r3
 2552 001e 1A80     	 strh r2,[r3]
 2553 0020 04E0     	 b .L98
 2554              	.L97:
1180:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1181:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1182:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1183:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2555              	 .loc 2 1183 0
 2556 0022 7B68     	 ldr r3,[r7,#4]
 2557 0024 1A6C     	 ldr r2,[r3,#64]
 2558 0026 0E23     	 mov r3,#14
 2559 0028 FB18     	 add r3,r7,r3
 2560 002a 1A80     	 strh r2,[r3]
 2561              	.L98:
1184:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1185:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1186:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (compare_value);
 2562              	 .loc 2 1186 0
 2563 002c 0E23     	 mov r3,#14
 2564 002e FB18     	 add r3,r7,r3
 2565 0030 1B88     	 ldrh r3,[r3]
1187:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2566              	 .loc 2 1187 0
 2567 0032 181C     	 mov r0,r3
 2568 0034 BD46     	 mov sp,r7
 2569 0036 04B0     	 add sp,sp,#16
 2570              	 
 2571 0038 80BD     	 pop {r7,pc}
 2572              	 .cfi_endproc
 2573              	.LFE155:
 2575 003a C046     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2576              	 .align 2
 2577              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2578              	 .code 16
 2579              	 .thumb_func
 2581              	XMC_CCU8_SLICE_SetInterruptNode:
 2582              	.LFB156:
1188:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1189:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1190:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1191:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1192:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1193:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2583              	 .loc 2 1193 0
 2584              	 .cfi_startproc
 2585 0000 80B5     	 push {r7,lr}
 2586              	.LCFI114:
 2587              	 .cfi_def_cfa_offset 8
 2588              	 .cfi_offset 7,-8
 2589              	 .cfi_offset 14,-4
 2590 0002 86B0     	 sub sp,sp,#24
 2591              	.LCFI115:
 2592              	 .cfi_def_cfa_offset 32
 2593 0004 00AF     	 add r7,sp,#0
 2594              	.LCFI116:
 2595              	 .cfi_def_cfa_register 7
 2596 0006 7860     	 str r0,[r7,#4]
 2597 0008 081C     	 mov r0,r1
 2598 000a 111C     	 mov r1,r2
 2599 000c FB1C     	 add r3,r7,#3
 2600 000e 021C     	 add r2,r0,#0
 2601 0010 1A70     	 strb r2,[r3]
 2602 0012 BB1C     	 add r3,r7,#2
 2603 0014 0A1C     	 add r2,r1,#0
 2604 0016 1A70     	 strb r2,[r3]
1194:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1195:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1196:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t pos;
1197:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1198:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1199:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1200:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1201:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1202:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch (event)
 2605              	 .loc 2 1202 0
 2606 0018 FB1C     	 add r3,r7,#3
 2607 001a 1B78     	 ldrb r3,[r3]
 2608 001c 0B2B     	 cmp r3,#11
 2609 001e 25D8     	 bhi .L101
 2610 0020 9A00     	 lsl r2,r3,#2
 2611 0022 224B     	 ldr r3,.L111
 2612 0024 D318     	 add r3,r2,r3
 2613 0026 1B68     	 ldr r3,[r3]
 2614 0028 9F46     	 mov pc,r3
 2615              	 .section .rodata.XMC_CCU8_SLICE_SetInterruptNode,"a",%progbits
 2616              	 .align 2
 2617              	.L103:
 2618 0000 2A000000 	 .word .L102
 2619 0004 2A000000 	 .word .L102
 2620 0008 34000000 	 .word .L104
 2621 000c 34000000 	 .word .L104
 2622 0010 3E000000 	 .word .L105
 2623 0014 3E000000 	 .word .L105
 2624 0018 6C000000 	 .word .L101
 2625 001c 6C000000 	 .word .L101
 2626 0020 48000000 	 .word .L106
 2627 0024 54000000 	 .word .L107
 2628 0028 60000000 	 .word .L108
 2629 002c 60000000 	 .word .L108
 2630              	 .section .text.XMC_CCU8_SLICE_SetInterruptNode
 2631              	.L102:
1203:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1204:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1205:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1206:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2632              	 .loc 2 1206 0
 2633 002a 0323     	 mov r3,#3
 2634 002c 7B61     	 str r3,[r7,#20]
1207:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2635              	 .loc 2 1207 0
 2636 002e 0023     	 mov r3,#0
 2637 0030 3B61     	 str r3,[r7,#16]
1208:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2638              	 .loc 2 1208 0
 2639 0032 20E0     	 b .L109
 2640              	.L104:
1209:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1210:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1211:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1212:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2641              	 .loc 2 1212 0
 2642 0034 0C23     	 mov r3,#12
 2643 0036 7B61     	 str r3,[r7,#20]
1213:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2644              	 .loc 2 1213 0
 2645 0038 0223     	 mov r3,#2
 2646 003a 3B61     	 str r3,[r7,#16]
1214:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2647              	 .loc 2 1214 0
 2648 003c 1BE0     	 b .L109
 2649              	.L105:
1215:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1216:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1217:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1218:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2650              	 .loc 2 1218 0
 2651 003e 3023     	 mov r3,#48
 2652 0040 7B61     	 str r3,[r7,#20]
1219:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2653              	 .loc 2 1219 0
 2654 0042 0423     	 mov r3,#4
 2655 0044 3B61     	 str r3,[r7,#16]
1220:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2656              	 .loc 2 1220 0
 2657 0046 16E0     	 b .L109
 2658              	.L106:
1221:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1222:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1223:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2659              	 .loc 2 1223 0
 2660 0048 C023     	 mov r3,#192
 2661 004a 9B00     	 lsl r3,r3,#2
 2662 004c 7B61     	 str r3,[r7,#20]
1224:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2663              	 .loc 2 1224 0
 2664 004e 0823     	 mov r3,#8
 2665 0050 3B61     	 str r3,[r7,#16]
1225:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2666              	 .loc 2 1225 0
 2667 0052 10E0     	 b .L109
 2668              	.L107:
1226:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1227:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1228:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2669              	 .loc 2 1228 0
 2670 0054 C023     	 mov r3,#192
 2671 0056 1B01     	 lsl r3,r3,#4
 2672 0058 7B61     	 str r3,[r7,#20]
1229:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2673              	 .loc 2 1229 0
 2674 005a 0A23     	 mov r3,#10
 2675 005c 3B61     	 str r3,[r7,#16]
1230:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2676              	 .loc 2 1230 0
 2677 005e 0AE0     	 b .L109
 2678              	.L108:
1231:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1232:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT2:
1233:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_TRAP:
1234:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2679              	 .loc 2 1234 0
 2680 0060 C023     	 mov r3,#192
 2681 0062 9B01     	 lsl r3,r3,#6
 2682 0064 7B61     	 str r3,[r7,#20]
1235:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2683              	 .loc 2 1235 0
 2684 0066 0C23     	 mov r3,#12
 2685 0068 3B61     	 str r3,[r7,#16]
1236:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2686              	 .loc 2 1236 0
 2687 006a 04E0     	 b .L109
 2688              	.L101:
1237:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  
1238:../Libraries/XMCLib/src/xmc_ccu8.c **** 	default:
1239:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  mask = 0;
 2689              	 .loc 2 1239 0
 2690 006c 0023     	 mov r3,#0
 2691 006e 7B61     	 str r3,[r7,#20]
1240:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  pos = 0;
 2692              	 .loc 2 1240 0
 2693 0070 0023     	 mov r3,#0
 2694 0072 3B61     	 str r3,[r7,#16]
1241:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  break;
 2695              	 .loc 2 1241 0
 2696 0074 C046     	 mov r8,r8
 2697              	.L109:
1242:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1243:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1244:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (mask != 0)
 2698              	 .loc 2 1244 0
 2699 0076 7B69     	 ldr r3,[r7,#20]
 2700 0078 002B     	 cmp r3,#0
 2701 007a 14D0     	 beq .L100
1245:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1246:../Libraries/XMCLib/src/xmc_ccu8.c ****     srs = slice->SRS;
 2702              	 .loc 2 1246 0
 2703 007c 7B68     	 ldr r3,[r7,#4]
 2704 007e A822     	 mov r2,#168
 2705 0080 9B58     	 ldr r3,[r3,r2]
 2706 0082 FB60     	 str r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_ccu8.c ****     srs &= ~mask;
 2707              	 .loc 2 1247 0
 2708 0084 7B69     	 ldr r3,[r7,#20]
 2709 0086 DA43     	 mvn r2,r3
 2710 0088 FB68     	 ldr r3,[r7,#12]
 2711 008a 1340     	 and r3,r2
 2712 008c FB60     	 str r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_ccu8.c ****     srs |= (uint32_t)sr << pos;
 2713              	 .loc 2 1248 0
 2714 008e BB1C     	 add r3,r7,#2
 2715 0090 1A78     	 ldrb r2,[r3]
 2716 0092 3B69     	 ldr r3,[r7,#16]
 2717 0094 9A40     	 lsl r2,r2,r3
 2718 0096 131C     	 mov r3,r2
 2719 0098 FA68     	 ldr r2,[r7,#12]
 2720 009a 1343     	 orr r3,r2
 2721 009c FB60     	 str r3,[r7,#12]
1249:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->SRS = srs;
 2722              	 .loc 2 1249 0
 2723 009e 7B68     	 ldr r3,[r7,#4]
 2724 00a0 A821     	 mov r1,#168
 2725 00a2 FA68     	 ldr r2,[r7,#12]
 2726 00a4 5A50     	 str r2,[r3,r1]
 2727              	.L100:
1250:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1251:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2728              	 .loc 2 1251 0
 2729 00a6 BD46     	 mov sp,r7
 2730 00a8 06B0     	 add sp,sp,#24
 2731              	 
 2732 00aa 80BD     	 pop {r7,pc}
 2733              	.L112:
 2734              	 .align 2
 2735              	.L111:
 2736 00ac 00000000 	 .word .L103
 2737              	 .cfi_endproc
 2738              	.LFE156:
 2740              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 2741              	 .align 2
 2742              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 2743              	 .code 16
 2744              	 .thumb_func
 2746              	XMC_CCU8_SLICE_SetPassiveLevel:
 2747              	.LFB157:
1252:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1253:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1254:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1255:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1256:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1257:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2748              	 .loc 2 1257 0
 2749              	 .cfi_startproc
 2750 0000 80B5     	 push {r7,lr}
 2751              	.LCFI117:
 2752              	 .cfi_def_cfa_offset 8
 2753              	 .cfi_offset 7,-8
 2754              	 .cfi_offset 14,-4
 2755 0002 84B0     	 sub sp,sp,#16
 2756              	.LCFI118:
 2757              	 .cfi_def_cfa_offset 24
 2758 0004 00AF     	 add r7,sp,#0
 2759              	.LCFI119:
 2760              	 .cfi_def_cfa_register 7
 2761 0006 7860     	 str r0,[r7,#4]
 2762 0008 081C     	 mov r0,r1
 2763 000a 111C     	 mov r1,r2
 2764 000c FB1C     	 add r3,r7,#3
 2765 000e 021C     	 add r2,r0,#0
 2766 0010 1A70     	 strb r2,[r3]
 2767 0012 BB1C     	 add r3,r7,#2
 2768 0014 0A1C     	 add r2,r1,#0
 2769 0016 1A70     	 strb r2,[r3]
1258:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1259:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1260:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1261:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1262:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1263:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) || \
1264:../Libraries/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1265:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1266:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 2770              	 .loc 2 1266 0
 2771 0018 7B68     	 ldr r3,[r7,#4]
 2772 001a 9B69     	 ldr r3,[r3,#24]
 2773 001c FB60     	 str r3,[r7,#12]
1267:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1268:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 2774              	 .loc 2 1268 0
 2775 001e FB1C     	 add r3,r7,#3
 2776 0020 1B78     	 ldrb r3,[r3]
 2777 0022 DA43     	 mvn r2,r3
 2778 0024 FB68     	 ldr r3,[r7,#12]
 2779 0026 1340     	 and r3,r2
 2780 0028 FB60     	 str r3,[r7,#12]
1269:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 2781              	 .loc 2 1269 0
 2782 002a BB1C     	 add r3,r7,#2
 2783 002c 1B78     	 ldrb r3,[r3]
 2784 002e FA1C     	 add r2,r7,#3
 2785 0030 1278     	 ldrb r2,[r2]
 2786 0032 5208     	 lsr r2,r2,#1
 2787 0034 D2B2     	 uxtb r2,r2
 2788 0036 9340     	 lsl r3,r3,r2
 2789 0038 FA68     	 ldr r2,[r7,#12]
 2790 003a 1343     	 orr r3,r2
 2791 003c FB60     	 str r3,[r7,#12]
1270:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1271:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1272:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 2792              	 .loc 2 1272 0
 2793 003e 7B68     	 ldr r3,[r7,#4]
 2794 0040 FA68     	 ldr r2,[r7,#12]
 2795 0042 9A61     	 str r2,[r3,#24]
1273:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2796              	 .loc 2 1273 0
 2797 0044 BD46     	 mov sp,r7
 2798 0046 04B0     	 add sp,sp,#16
 2799              	 
 2800 0048 80BD     	 pop {r7,pc}
 2801              	 .cfi_endproc
 2802              	.LFE157:
 2804 004a C046     	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 2805              	 .align 2
 2806              	 .global XMC_CCU8_SLICE_DeadTimeInit
 2807              	 .code 16
 2808              	 .thumb_func
 2810              	XMC_CCU8_SLICE_DeadTimeInit:
 2811              	.LFB158:
1274:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1275:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1276:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1277:../Libraries/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1278:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2812              	 .loc 2 1278 0
 2813              	 .cfi_startproc
 2814 0000 80B5     	 push {r7,lr}
 2815              	.LCFI120:
 2816              	 .cfi_def_cfa_offset 8
 2817              	 .cfi_offset 7,-8
 2818              	 .cfi_offset 14,-4
 2819 0002 82B0     	 sub sp,sp,#8
 2820              	.LCFI121:
 2821              	 .cfi_def_cfa_offset 16
 2822 0004 00AF     	 add r7,sp,#0
 2823              	.LCFI122:
 2824              	 .cfi_def_cfa_register 7
 2825 0006 7860     	 str r0,[r7,#4]
 2826 0008 3960     	 str r1,[r7]
1279:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1280:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1281:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1282:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 2827              	 .loc 2 1282 0
 2828 000a 3B68     	 ldr r3,[r7]
 2829 000c 5A68     	 ldr r2,[r3,#4]
 2830 000e 7B68     	 ldr r3,[r7,#4]
 2831 0010 1A65     	 str r2,[r3,#80]
1283:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1284:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 2832              	 .loc 2 1284 0
 2833 0012 3B68     	 ldr r3,[r7]
 2834 0014 9A68     	 ldr r2,[r3,#8]
 2835 0016 7B68     	 ldr r3,[r7,#4]
 2836 0018 5A65     	 str r2,[r3,#84]
1285:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1286:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 2837              	 .loc 2 1286 0
 2838 001a 3B68     	 ldr r3,[r7]
 2839 001c 1A68     	 ldr r2,[r3]
 2840 001e 7B68     	 ldr r3,[r7,#4]
 2841 0020 DA64     	 str r2,[r3,#76]
1287:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2842              	 .loc 2 1287 0
 2843 0022 BD46     	 mov sp,r7
 2844 0024 02B0     	 add sp,sp,#8
 2845              	 
 2846 0026 80BD     	 pop {r7,pc}
 2847              	 .cfi_endproc
 2848              	.LFE158:
 2850              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 2851              	 .align 2
 2852              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 2853              	 .code 16
 2854              	 .thumb_func
 2856              	XMC_CCU8_SLICE_ConfigureDeadTime:
 2857              	.LFB159:
1288:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1289:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1290:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1291:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2858              	 .loc 2 1291 0
 2859              	 .cfi_startproc
 2860 0000 80B5     	 push {r7,lr}
 2861              	.LCFI123:
 2862              	 .cfi_def_cfa_offset 8
 2863              	 .cfi_offset 7,-8
 2864              	 .cfi_offset 14,-4
 2865 0002 82B0     	 sub sp,sp,#8
 2866              	.LCFI124:
 2867              	 .cfi_def_cfa_offset 16
 2868 0004 00AF     	 add r7,sp,#0
 2869              	.LCFI125:
 2870              	 .cfi_def_cfa_register 7
 2871 0006 7860     	 str r0,[r7,#4]
 2872 0008 0A1C     	 mov r2,r1
 2873 000a FB1C     	 add r3,r7,#3
 2874 000c 1A70     	 strb r2,[r3]
1292:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1293:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1294:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1295:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 2875              	 .loc 2 1295 0
 2876 000e 7B68     	 ldr r3,[r7,#4]
 2877 0010 DB6C     	 ldr r3,[r3,#76]
 2878 0012 3F22     	 mov r2,#63
 2879 0014 9343     	 bic r3,r2
 2880 0016 1A1C     	 mov r2,r3
 2881 0018 7B68     	 ldr r3,[r7,#4]
 2882 001a DA64     	 str r2,[r3,#76]
1296:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 2883              	 .loc 2 1296 0
 2884 001c 7B68     	 ldr r3,[r7,#4]
 2885 001e DA6C     	 ldr r2,[r3,#76]
 2886 0020 FB1C     	 add r3,r7,#3
 2887 0022 1B78     	 ldrb r3,[r3]
 2888 0024 1A43     	 orr r2,r3
 2889 0026 7B68     	 ldr r3,[r7,#4]
 2890 0028 DA64     	 str r2,[r3,#76]
1297:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2891              	 .loc 2 1297 0
 2892 002a BD46     	 mov sp,r7
 2893 002c 02B0     	 add sp,sp,#8
 2894              	 
 2895 002e 80BD     	 pop {r7,pc}
 2896              	 .cfi_endproc
 2897              	.LFE159:
 2899              	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 2900              	 .align 2
 2901              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 2902              	 .code 16
 2903              	 .thumb_func
 2905              	XMC_CCU8_SLICE_SetDeadTimeValue:
 2906              	.LFB160:
1298:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1299:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1300:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1301:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1302:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1303:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1304:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2907              	 .loc 2 1304 0
 2908              	 .cfi_startproc
 2909 0000 90B5     	 push {r4,r7,lr}
 2910              	.LCFI126:
 2911              	 .cfi_def_cfa_offset 12
 2912              	 .cfi_offset 4,-12
 2913              	 .cfi_offset 7,-8
 2914              	 .cfi_offset 14,-4
 2915 0002 83B0     	 sub sp,sp,#12
 2916              	.LCFI127:
 2917              	 .cfi_def_cfa_offset 24
 2918 0004 00AF     	 add r7,sp,#0
 2919              	.LCFI128:
 2920              	 .cfi_def_cfa_register 7
 2921 0006 7860     	 str r0,[r7,#4]
 2922 0008 0C1C     	 mov r4,r1
 2923 000a 101C     	 mov r0,r2
 2924 000c 191C     	 mov r1,r3
 2925 000e FB1C     	 add r3,r7,#3
 2926 0010 221C     	 add r2,r4,#0
 2927 0012 1A70     	 strb r2,[r3]
 2928 0014 BB1C     	 add r3,r7,#2
 2929 0016 021C     	 add r2,r0,#0
 2930 0018 1A70     	 strb r2,[r3]
 2931 001a 7B1C     	 add r3,r7,#1
 2932 001c 0A1C     	 add r2,r1,#0
 2933 001e 1A70     	 strb r2,[r3]
1305:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1306:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1307:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1308:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2934              	 .loc 2 1308 0
 2935 0020 FB1C     	 add r3,r7,#3
 2936 0022 1B78     	 ldrb r3,[r3]
 2937 0024 002B     	 cmp r3,#0
 2938 0026 08D1     	 bne .L117
1309:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1310:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 2939              	 .loc 2 1310 0
 2940 0028 7B1C     	 add r3,r7,#1
 2941 002a 1B78     	 ldrb r3,[r3]
 2942 002c 1A02     	 lsl r2,r3,#8
 2943 002e BB1C     	 add r3,r7,#2
 2944 0030 1B78     	 ldrb r3,[r3]
 2945 0032 1A43     	 orr r2,r3
 2946 0034 7B68     	 ldr r3,[r7,#4]
 2947 0036 1A65     	 str r2,[r3,#80]
 2948 0038 07E0     	 b .L116
 2949              	.L117:
1311:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1312:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1313:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1314:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 2950              	 .loc 2 1314 0
 2951 003a 7B1C     	 add r3,r7,#1
 2952 003c 1B78     	 ldrb r3,[r3]
 2953 003e 1A02     	 lsl r2,r3,#8
 2954 0040 BB1C     	 add r3,r7,#2
 2955 0042 1B78     	 ldrb r3,[r3]
 2956 0044 1A43     	 orr r2,r3
 2957 0046 7B68     	 ldr r3,[r7,#4]
 2958 0048 5A65     	 str r2,[r3,#84]
 2959              	.L116:
1315:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1316:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2960              	 .loc 2 1316 0
 2961 004a BD46     	 mov sp,r7
 2962 004c 03B0     	 add sp,sp,#12
 2963              	 
 2964 004e 90BD     	 pop {r4,r7,pc}
 2965              	 .cfi_endproc
 2966              	.LFE160:
 2968              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 2969              	 .align 2
 2970              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 2971              	 .code 16
 2972              	 .thumb_func
 2974              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 2975              	.LFB161:
1317:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1318:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1319:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1320:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2976              	 .loc 2 1320 0
 2977              	 .cfi_startproc
 2978 0000 80B5     	 push {r7,lr}
 2979              	.LCFI129:
 2980              	 .cfi_def_cfa_offset 8
 2981              	 .cfi_offset 7,-8
 2982              	 .cfi_offset 14,-4
 2983 0002 82B0     	 sub sp,sp,#8
 2984              	.LCFI130:
 2985              	 .cfi_def_cfa_offset 16
 2986 0004 00AF     	 add r7,sp,#0
 2987              	.LCFI131:
 2988              	 .cfi_def_cfa_register 7
 2989 0006 7860     	 str r0,[r7,#4]
 2990 0008 0A1C     	 mov r2,r1
 2991 000a FB1C     	 add r3,r7,#3
 2992 000c 1A70     	 strb r2,[r3]
1321:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1322:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1323:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1324:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 2993              	 .loc 2 1324 0
 2994 000e 7B68     	 ldr r3,[r7,#4]
 2995 0010 DB6C     	 ldr r3,[r3,#76]
 2996 0012 C022     	 mov r2,#192
 2997 0014 9343     	 bic r3,r2
 2998 0016 1A1C     	 mov r2,r3
 2999 0018 7B68     	 ldr r3,[r7,#4]
 3000 001a DA64     	 str r2,[r3,#76]
1325:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3001              	 .loc 2 1325 0
 3002 001c 7B68     	 ldr r3,[r7,#4]
 3003 001e DA6C     	 ldr r2,[r3,#76]
 3004 0020 FB1C     	 add r3,r7,#3
 3005 0022 1B78     	 ldrb r3,[r3]
 3006 0024 9B01     	 lsl r3,r3,#6
 3007 0026 1A43     	 orr r2,r3
 3008 0028 7B68     	 ldr r3,[r7,#4]
 3009 002a DA64     	 str r2,[r3,#76]
1326:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3010              	 .loc 2 1326 0
 3011 002c BD46     	 mov sp,r7
 3012 002e 02B0     	 add sp,sp,#8
 3013              	 
 3014 0030 80BD     	 pop {r7,pc}
 3015              	 .cfi_endproc
 3016              	.LFE161:
 3018 0032 C046     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3019              	 .align 2
 3020              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3021              	 .code 16
 3022              	 .thumb_func
 3024              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3025              	.LFB162:
1327:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1328:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1329:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1330:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3026              	 .loc 2 1330 0
 3027              	 .cfi_startproc
 3028 0000 80B5     	 push {r7,lr}
 3029              	.LCFI132:
 3030              	 .cfi_def_cfa_offset 8
 3031              	 .cfi_offset 7,-8
 3032              	 .cfi_offset 14,-4
 3033 0002 82B0     	 sub sp,sp,#8
 3034              	.LCFI133:
 3035              	 .cfi_def_cfa_offset 16
 3036 0004 00AF     	 add r7,sp,#0
 3037              	.LCFI134:
 3038              	 .cfi_def_cfa_register 7
 3039 0006 7860     	 str r0,[r7,#4]
 3040 0008 0A1C     	 mov r2,r1
 3041 000a FB1C     	 add r3,r7,#3
 3042 000c 1A70     	 strb r2,[r3]
1331:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1332:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1333:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1334:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3043              	 .loc 2 1334 0
 3044 000e 7B68     	 ldr r3,[r7,#4]
 3045 0010 5B69     	 ldr r3,[r3,#20]
 3046 0012 074A     	 ldr r2,.L121
 3047 0014 1A40     	 and r2,r3
 3048 0016 7B68     	 ldr r3,[r7,#4]
 3049 0018 5A61     	 str r2,[r3,#20]
1335:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3050              	 .loc 2 1335 0
 3051 001a 7B68     	 ldr r3,[r7,#4]
 3052 001c 5A69     	 ldr r2,[r3,#20]
 3053 001e FB1C     	 add r3,r7,#3
 3054 0020 1B78     	 ldrb r3,[r3]
 3055 0022 5B07     	 lsl r3,r3,#29
 3056 0024 1A43     	 orr r2,r3
 3057 0026 7B68     	 ldr r3,[r7,#4]
 3058 0028 5A61     	 str r2,[r3,#20]
1336:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3059              	 .loc 2 1336 0
 3060 002a BD46     	 mov sp,r7
 3061 002c 02B0     	 add sp,sp,#8
 3062              	 
 3063 002e 80BD     	 pop {r7,pc}
 3064              	.L122:
 3065              	 .align 2
 3066              	.L121:
 3067 0030 FFFFFF9F 	 .word -1610612737
 3068              	 .cfi_endproc
 3069              	.LFE162:
 3071              	 .text
 3072              	.Letext0:
 3073              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3074              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3075              	 .file 5 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 3076              	 .file 6 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc/xmc1_scu.h"
 3077              	 .file 7 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Include/cmsis_gcc.h"
 3078              	 .file 8 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:18     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:22     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:53     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:57     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:86     .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:90     .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:123    .text.XMC_CCU8_lGateClock:00000000 $t
    {standard input}:127    .text.XMC_CCU8_lGateClock:00000000 XMC_CCU8_lGateClock
    {standard input}:163    .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:167    .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:202    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:207    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:236    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:241    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:270    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:275    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:330    .text.XMC_CCU8_Init:00000044 $d
    {standard input}:335    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:340    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:388    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:393    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:476    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:481    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:543    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:548    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:596    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:601    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:649    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:654    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:732    .text.XMC_CCU8_SLICE_StartConfig:00000064 $d
    {standard input}:737    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:742    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:814    .text.XMC_CCU8_SLICE_StopConfig:00000060 $d
    {standard input}:819    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:824    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:871    .text.XMC_CCU8_SLICE_LoadConfig:00000034 $d
    {standard input}:876    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:881    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:929    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:934    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1050   .text.XMC_CCU8_SLICE_ModulationConfig:000000a0 $d
    {standard input}:1058   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1063   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1110   .text.XMC_CCU8_SLICE_CountConfig:00000034 $d
    {standard input}:1115   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1120   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1167   .text.XMC_CCU8_SLICE_GateConfig:00000034 $d
    {standard input}:1172   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1177   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1225   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1230   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1278   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1283   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1330   .text.XMC_CCU8_SLICE_DirectionConfig:00000034 $d
    {standard input}:1335   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1340   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1383   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:0000002c $d
    {standard input}:1388   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1393   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1490   .text.XMC_CCU8_SLICE_TrapConfig:00000080 $d
    {standard input}:1497   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1502   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1632   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:000000c0 $d
    {standard input}:1643   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1648   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:1822   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:1827   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:1905   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1910   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:1964   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:1969   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2023   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2028   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2061   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2066   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2103   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2108   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2255   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2260   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:2309   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2314   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2395   .text.XMC_CCU8_SLICE_EnableDithering:0000006c $d
    {standard input}:2400   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2405   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2457   .text.XMC_CCU8_SLICE_SetPrescaler:0000003c $d
    {standard input}:2462   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2467   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2518   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2523   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2576   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2581   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2616   .rodata.XMC_CCU8_SLICE_SetInterruptNode:00000000 $d
    {standard input}:2736   .text.XMC_CCU8_SLICE_SetInterruptNode:000000ac $d
    {standard input}:2741   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2746   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:2805   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:2810   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:2851   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:2856   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:2900   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:2905   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:2969   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:2974   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3019   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3024   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
    {standard input}:3067   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
