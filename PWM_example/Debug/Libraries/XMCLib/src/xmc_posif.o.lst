   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_posif.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_POSIF_Stop,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_POSIF_Stop:
  23              	.LFB62:
  24              	 .file 1 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc/xmc_posif.h"
   1:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
   2:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @file xmc_posif.h
   3:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @date 2019-12-02
   4:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
   5:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @cond
   6:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
   7:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
   9:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * All rights reserved.
  11:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  12:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  14:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * do so, all subject to the following:
  20:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  21:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * a source language processor.
  27:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  28:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  36:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *****************************************************************************
  40:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  41:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Change History
  42:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * --------------
  43:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  44:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-18:
  45:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Initial version
  46:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  47:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-02-20:
  48:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Driver description added <BR>
  49:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  50:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-06-19:
  51:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Removed version macros and declaration of GetDriverVersion API <BR>
  52:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  53:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2015-07-02:
  54:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Updated XMC_POSIF_QD_GetDirection API
  55:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  56:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2016-03-09:
  57:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Optimization of write only registers
  58:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  59:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2017-06-24
  60:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Added posif map connectivity file<br>
  61:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  62:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 2019-12-02:
  63:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  64:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  65:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @endcond
  66:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  67:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
  68:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  69:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  70:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #ifndef XMC_POSIF_H
  71:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_H
  72:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  73:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
  74:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * HEADER FILES
  75:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
  76:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_common.h"
  77:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  78:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(POSIF0)
  79:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_scu.h"
  80:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #include "xmc_posif_map.h"
  81:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  82:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
  83:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup XMClib XMC Peripheral Library
  84:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
  85:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
  86:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
  87:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
  88:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @addtogroup POSIF
  89:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @brief Position Interface Unit (POSIF) driver for the XMC microcontroller family <br>
  90:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  91:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The POSIF unit is a flexible and powerful component for motor control systems that use
  92:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * rotary encoders or hall sensors as feedback loop. It provides interface for motor position and v
  93:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF unit works with CCU4 and CCU8 to enable position and velocity measurement and to control P
  94:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  95:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Driver is divided in three POSIF functional blocks - Hall Sensor Control (POSIF_HSC), Quadrature
  96:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * MultiChannel Mode (POSIF_MCM). <br>
  97:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
  98:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF driver features:
  99:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Configuration structure XMC_POSIF_CONFIG_t and initialization function XMC_POSIF_Init() to c
 100:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to change the operating mode using XMC_POSIF_SetMode()
 101:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows the selection of one of the four inputs (A, B, C or D) using XMC_POSIF_SelectInputSour
 102:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * hall0, hall1 and hall2 signals. For quadrature decoder mode, inputs are phase A, phase B and ind
 103:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Hall Sensor Control (APIs prefixed with XMC_POSIF_HSC_) <br>
 104:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_HSC_CONFIG_t and initialization function XMC_POSIF_HSC_Ini
 105:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Update current and expected hall pattern in shadow register using XMC_POSIF_HSC_SetHallPatte
 106:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 	- Allows immediate shadow transfer using XMC_POSIF_HSC_UpdateHallPattern()
 107:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  Quadrature Decoder (APIs prefixed with XMC_POSIF_QD_) <br>
 108:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_QD_CONFIG_t and initialization function XMC_POSIF_QD_Init(
 109:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * 	-  Get direction of rotation using XMC_POSIF_QD_GetDirection()
 110:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -#  MultiChannel Mode (APIs prefixed with XMC_POSIF_MCM_) <br>
 111:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Configuration structure XMC_POSIF_MCM_CONFIG_t and initialization function XMC_POSIF_MCM_Init
 112:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Update multichannel pattern in shadow register using XMC_POSIF_MCM_SetMultiChannelPattern()
 113:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *	-  Allows immediate shadow transfer using XMC_POSIF_MCM_UpdateMultiChannelPattern()
 114:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -# User need to call respective init functions to configure POSIF operating mode. e.g to configu
 115:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * call both XMC_POSIF_HSC_Init() and XMC_POSIF_MCM_Init().
 116:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * -# Allows to enable and disable interrupt sources and assign to service request node using XMC_P
 117:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 118:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @note POSIF is not available on XMC11 and XMC12 devices
 119:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 120:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @{
 121:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 122:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 123:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 124:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * MACROS
 125:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 126:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC47) || (UC_SERIES == XMC48) |
 127:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0) || ((PTR)== POSIF1) ) /*< Check for val
 128:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #else
 129:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0))  /*< Check for valid module pointer */
 130:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 131:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 132:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 133:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * ENUMS
 134:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 135:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 136:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines the return status, to verify the POSIF related API calls. Use type @ref XMC_POSIF_STATU
 137:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 138:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_STATUS
 139:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 140:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_OK = 0U,     /**< API fulfills request */
 141:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_ERROR        /**< API cannot fulfill request */
 142:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_STATUS_t;
 143:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 144:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 145:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable modes.Use type @ref XMC_POSIF_MODE_t for this enum.
 146:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The members defines the function selector(FSEL) bitfields of \a PCONF register.
 147:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 148:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_MODE
 149:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 150:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_HALL_SENSOR = 0U, /**< Hall sensor mode */
 151:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_QD,               /**< Quadrature Decoder mode */
 152:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM,              /**< Standalone Multichannel mode */
 153:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM_QD           /**< Quadrature Decoder + Standalone Multichannel mode */
 154:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MODE_t;
 155:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 156:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 157:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable input ports.Use type @ref XMC_POSIF_INPUT_PORT_t for this enum.
 158:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the respective input selector(INSELX) bitfields of \a PCONF register.
 159:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It selects, which input is used for the phase or Hall input function (depending on the module is
 160:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Quadrature Decoder or Hall Sensor Mode). Same enum can be used to configure pattern update signa
 161:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \a PCONF register's \a MSETS bit field.
 162:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 163:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_PORT
 164:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 165:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_A = 0U, /**< INPUT-A */
 166:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_B,      /**< INPUT-B */
 167:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_C,      /**< INPUT-C */
 168:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_D,      /**< INPUT-D */
 169:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_E,      /**< INPUT-E */
 170:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_F,      /**< INPUT-F */
 171:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_G,      /**< INPUT-G */
 172:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_H       /**< INPUT-H */
 173:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_PORT_t;
 174:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 175:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 176:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines active level of an input signal.Use type @ref XMC_POSIF_INPUT_ACTIVE_LEVEL_t for this e
 177:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 178:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_ACTIVE_LEVEL
 179:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 180:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_HIGH  = 0U, /**< Input - Active High */
 181:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_LOW         /**< Input - Active Low */
 182:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_ACTIVE_LEVEL_t;
 183:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 184:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 185:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF input debounce filter configuration.POSIF inputs are connected to low pass filter 
 186:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * this enum is used to configure low pass filters cut off frequency.
 187:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_FILTER_t for this enum.
 188:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the low pass filter configuration(LPC) bitfield of \a PCONF register.
 189:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 190:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_FILTER
 191:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 192:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_DISABLED     = 0U, /**< No filtering */
 193:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_1_CLOCK_CYCLE,     /**< Filter of 1 Clock Cycle */
 194:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_2_CLOCK_CYCLE,     /**< Filter of 2 Clock Cycles */
 195:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_4_CLOCK_CYCLE,     /**< Filter of 4 Clock Cycles */
 196:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_8_CLOCK_CYCLE,     /**< Filter of 8 Clock Cycles */
 197:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_16_CLOCK_CYCLE,    /**< Filter of 16 Clock Cycles */
 198:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_32_CLOCK_CYCLE,    /**< Filter of 32 Clock Cycles */
 199:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_64_CLOCK_CYCLE     /**< Filter of 64 Clock Cycles */
 200:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_FILTER_t;
 201:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 202:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 203:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF events.Use type @ref XMC_POSIF_IRQ_EVENT_t for this enum.
 204:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines available event sources.It is used to configure which event to be used for
 205:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * interrupt generation using \a PFLGE register. [ PFLG,SPFLG,RPFLG]
 206:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 207:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_IRQ_EVENT
 208:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 209:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CHE                  = 0U, /**< Hall Mode : Correct Hall Event */
 210:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_WHE                  = 1U, /**< Hall Mode : Wrong Hall Event */
 211:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_HALL_INPUT           = 2U, /**< Hall Mode : Hall Input update */
 212:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_MCP_SHADOW_TRANSFER  = 4U, /**< Hall Mode + MCM Mode : MC Pattern shadow tran
 213:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_INDX                 = 8U, /**< Quadrature Mode : Index event detection */
 214:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_ERR                  = 9U, /**< Quadrature Mode : Quadrature Phase Error */
 215:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CNT                  = 10U, /**< Quadrature Mode : Quadrature Clock event */
 216:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_DIR                  = 11U, /**< Quadrature Mode : Quadrature Direction chang
 217:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_PCLK                 = 12U  /**< Quadrature Mode : Quadrature period clock ge
 218:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_IRQ_EVENT_t;
 219:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 220:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 221:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF service request lines.Use type @ref XMC_POSIF_SR_ID_t for this enum.
 222:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to connect POSIF event to required service request line.
 223:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * in \a PFLGE register for interrupt generation.
 224:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 225:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_SR_ID
 226:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 227:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_0 = 0U, /**< SR-0 */
 228:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_1      /**< SR-1 */
 229:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_SR_ID_t;
 230:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 231:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 232:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines position decoder mode selection.Use type @ref XMC_POSIF_QD_MODE_t for this enum.
 233:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines configuration for the operation of the quadrature decoder mode.
 234:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to configure \a QDC register.
 235:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 236:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_MODE
 237:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 238:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_QUADRATURE       = 0U, /**< Standard Quadrature Mode */
 239:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_DIRECTION_COUNT       /**< Direction Count Mode */
 240:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_MODE_t;
 241:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 242:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 243:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines motor rotation direction.Use type @ref XMC_POSIF_QD_DIR_t for this enum.
 244:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * The member defines the direction in quadrature mode.
 245:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 246:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_DIR
 247:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 248:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_COUNTERCLOCKWISE  = 0U, /**< Counter Clockwise */
 249:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_CLOCKWISE              /**< Clockwise */
 250:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_DIR_t;
 251:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 252:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 253:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines frequency of index signal generation.Use type @ref XMC_POSIF_QD_INDEX_GENERATION_t for t
 254:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Member represents available configuration for index marker generation using \a ICM  bit field in
 255:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 256:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_INDEX_GENERATION
 257:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 258:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_NEVER  = 0U, /**< Never generate the index marker signal */
 259:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ONCE,       /**< Generate only once after the first revolution */
 260:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ALWAYS      /**< Index marker generated upon every revolution */
 261:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_INDEX_GENERATION_t;
 262:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 263:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 264:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines trigger edge in hall sensor mode.Use type @ref XMC_POSIF_HSC_TRIGGER_EDGE_t for this en
 265:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  It can be used to configure \a PCONF register's \a SPES and \a MSES bit fields.
 266:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 267:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_HSC_TRIGGER_EDGE
 268:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 269:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_RISING  = 0U, /**< Rising edge */
 270:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_FALLING      /**< Falling edge */
 271:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_TRIGGER_EDGE_t;
 272:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 273:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 274:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * DATA STRUCTURES
 275:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 276:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 277:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard start*/
 278:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 279:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #pragma push
 280:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #pragma anon_unions
 281:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 282:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning 586
 283:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 284:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 285:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 286:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 287:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF peripheral register structure.Use type @ref XMC_POSIF_t for this data structure.
 288:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 289:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef POSIF_GLOBAL_TypeDef XMC_POSIF_t;
 290:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 291:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 292:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF quadrature decoder initialization data structure.
 293:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_QD_CONFIG_t for this data structure.
 294:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  It used to configure Quadrature mode using \a QDC register.
 295:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 296:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_QD_CONFIG
 297:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 298:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_t mode;      /**< Operational Mode of the quadrature encoder and decoder */
 299:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   union
 300:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   {
 301:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 302:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     {
 303:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_a: 1;       /**< Phase-A active level configuration */
 304:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_b: 1;       /**< Phase-B active level configuration */
 305:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t phase_leader: 1;  /**< Which of the two phase signals[Phase A or Phase B] leads the 
 306:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 1;
 307:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t index: 2;        /**< Index signal generation control. Use @ref XMC_POSIF_QD_INDEX_G
 308:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 26;
 309:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     };
 310:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t qdc;
 311:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   };
 312:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_CONFIG_t;
 313:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 314:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 315:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF hall sensor control initialization data structure.
 316:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_HSC_CONFIG_t for this data structure.
 317:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize hall sensor mode configuration using \a PCONF register.
 318:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 319:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_HSC_CONFIG
 320:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 321:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   union
 322:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   {
 323:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 324:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     {
 325:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 4;
 326:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t disable_idle_signal: 1;   /**< Should idle signal be disabled upon wrong hall event?
 327:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 11;
 328:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger: 1;      /**< Of HSDA and HSDB, which one is to be used to trigger 
 329:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger_edge: 1; /**< Which edge of the sampling trigger signal is to be co
 330:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 331:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_port: 2;    /**< Of the 4 external error ports, which one is to be co
 332:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_enable: 1;  /**< Should external errors lead to Wrong Hall event? */
 333:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_level: 1;   /**< What should be the active level of external error si
 334:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 4;
 335:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     };
 336:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t hall_config;
 337:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   };
 338:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_CONFIG_t;
 339:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 340:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 341:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Defines POSIF multi-channel mode initialization data structure.
 342:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_MCM_CONFIG_t for this data structure.
 343:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It used to initialize multi channel mode configuration using \a PCONF register.
 344:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 345:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_MCM_CONFIG
 346:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 347:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   union
 348:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   {
 349:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 350:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     {
 351:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 5;
 352:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_sw_update: 1; /**< should multi channel pattern updated by SW ? */
 353:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 12;
 354:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_update_trigger: 3; /**< Of the 8 update triggers, which one is to be conside
 355:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_trigger_edge: 1;  /**< Which edge of the pattern update trigger is to be con
 356:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t pwm_sync: 2;         /**< Of the 4 pwm sync inputs, which one is to be considered? *
 357:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 8;
 358:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     };
 359:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t mcm_config;
 360:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   };
 361:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MCM_CONFIG_t;
 362:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 363:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 364:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF module initialization data structure.
 365:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_CONFIG_t for this data structure.
 366:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *  It is used to initialize POSIF module using \a PCONF register.
 367:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 368:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_CONFIG
 369:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 370:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   union
 371:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   {
 372:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     struct
 373:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     {
 374:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t mode: 2;    /**< POSIF Operational mode. Use @ref XMC_POSIF_MODE_t to configure */
 375:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 6;
 376:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input0: 2; /**< Choice of input for Input-1 */
 377:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input1: 2; /**< Choice of input for Input-2 */
 378:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t input2: 2; /**< Choice of input for Input-3 */
 379:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t : 14;
 380:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t filter: 3; /**< Input filter configuration */
 381:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****       uint32_t: 1;
 382:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     };
 383:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****     uint32_t pconf;
 384:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   };
 385:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_CONFIG_t;
 386:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 387:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard end*/
 388:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 389:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #pragma pop
 390:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 391:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #pragma warning restore
 392:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 393:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 394:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 395:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * API Prototypes
 396:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 397:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #ifdef __cplusplus
 398:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** extern "C" {
 399:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** #endif
 400:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 401:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 402:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 403:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 404:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 405:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 406:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * De-asserts the POSIF module from reset and enables the clock.\n
 407:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bit field depends upon \a peripheral.
 408:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then it will ungate the peripheral clock.
 409:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 410:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 411:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * This is the first API which application must invoke to configure POSIF.
 412:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It is internally called by XMC_POSIF_Init().
 413:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 414:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 415:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Disable(),XMC_POSIF_Init() \n\n\n
 416:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 417:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral);
 418:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 419:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 420:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 421:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 422:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 423:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 424:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Asserts the POSIF module into reset and disables the clock.\n
 425:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then in addition it will gate the peripheral clock.
 426:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bitfield depends upon \a peripheral.
 427:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 428:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 429:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Enable()\n\n\n
 430:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 431:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral);
 432:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 433:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 434:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 435:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to POSIF configuration data(operation mode,input selection and filter conf
 436:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 437:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 438:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 439:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Initialize POSIF module with \a config.\n
 440:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF global registers.This is the first API which application must invoke to configu
 441:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It sets up parameters common to all the POSIF modes - hall sensor,quadrature decoder and multi-c
 442:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with mode of operation,input selection and filter configuration.
 443:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 444:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init(),XMC_POSIF_MCM_Init() \n\n\n
 446:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** */
 447:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config);
 448:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 449:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 450:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 451:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to hall sensor control initialization data of type @ref XMC_POSIF_HSC_CONF
 452:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t  Returns @ref XMC_POSIF_STATUS_OK if configured in Hall Sensor Mode
 453:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *                             else return @ref XMC_POSIF_STATUS_ERROR.
 454:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 455:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 456:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes hall sensor control mode.\n
 457:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with which POSIF input trigger to be used for
 458:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * sampling hall pattern.Configures \a PCONF register for idle signal generation for wrong hall eve
 459:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 460:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 461:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Hall sensor mode before invocation of t
 462:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 463:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 464:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 465:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 466:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 467:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 468:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 469:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 470:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 471:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns quadrature mode initialization status of type @ref XMC_POSIF_
 472:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 473:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 474:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes quadrature decoder control mode.\n
 475:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with quadrature mode using @ref XMC_POSIF_QD_MODE_t data structure.
 476:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes \a QDC register with quadrature mode configuration using @ref XMC_POSIF_QD_CONFIG_t 
 477:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 478:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 479:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Quadrature decoder mode before invocati
 480:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 481:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 482:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 483:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 484:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t *co
 485:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 486:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 487:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 488:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 489:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns multi channel pattern initialization status of type @ref XMC_
 490:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 491:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 492:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Initializes multi channel mode in Hall mode, standalone multi-channel mode and quadrature with m
 493:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with multi channel mode using @ref XMC_POSIF_MCM_CONFIG_t data stru
 494:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 495:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 496:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * It is necessary to call XMC_POSIF_Init first before invocation of this API.
 497:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_HALL_SENSOR, it is necessary to have called XMC_POSIF_HSC_Init before invocat
 498:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_MCM_QD, it is necessary to have called XMC_POSIF_QD_Init before invocation of
 499:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 500:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 501:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init(),XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init() \n\n\n
 502:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 503:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 504:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 505:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 506:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 507:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param mode POSIF operating mode of type @ref XMC_POSIF_MODE_t
 508:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 509:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 510:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 511:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures POSIF module for \a mode.\n
 512:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's a\ FSEL bitfield with \a mode.
 513:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Refer @ref XMC_POSIF_MODE_t for available options.
 514:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 515:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 516:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * POSIF module should be in stopped state while changing the operating mode.
 517:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 518:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 519:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop() \n\n\n
 520:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 521:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_SetMode(XMC_POSIF_t *const peripheral, const XMC_POSIF_MODE_t mode)
 522:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 523:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)(POSIF_PCONF_FSEL_Msk)) |
 524:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****                        (((uint32_t)mode << POSIF_PCONF_FSEL_Pos) & (uint32_t)POSIF_PCONF_FSEL_Msk))
 525:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** }
 526:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 527:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 528:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 529:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input0 Choice of input for input 0 [0-3]
 530:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input1 Choice of input for input 1 [0-3]
 531:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param input2 Choice of input for input 2 [0-3]
 532:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 533:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 534:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 535:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input to be connected to POSIF module. \n
 536:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's INSEL0,INSEL1,INSEL2 bit fields with source for the input connect
 537:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \a input1, \a input2 respectively.
 538:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 539:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 540:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures which input is used for the Phase X or Hall input X function depending upon the modul
 541:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * set for Quadrature Decoder or Hall Sensor Mode.
 542:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 543:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 544:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 545:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 546:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_SelectInputSource(XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input0
 547:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****                                  const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t 
 548:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 549:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 550:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 551:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 552:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 553:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 554:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 555:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF \a peripheral functional state machine.\n
 556:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Starts POSIF state machine for \a peripheral.Configures \a PRUNS register's \a SRB bit field wit
 557:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 558:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 559:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Global properties of POSIF along with mode specific properties should have been initialized befo
 560:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * FSM.
 561:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 562:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 563:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop(),XMC_POSIF_IsRunning() \n\n\n
 564:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 565:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Start(XMC_POSIF_t *const peripheral)
 566:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
 567:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNS = (uint32_t)POSIF_PRUNS_SRB_Msk;
 568:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** }
 569:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** 
 570:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** /**
 571:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 572:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * @retval None
 573:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 574:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 575:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Stops POSIF \a peripheral functional state machine.\n
 576:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Stop POSIF functional state machine and clears current internal status of the \a peripheral.
 577:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * Configures \a PRUNC register's \a CRB bit field with 1.
 578:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  *
 579:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 580:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_IsRunning() \n\n\n
 581:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****  */
 582:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Stop(XMC_POSIF_t *const peripheral)
 583:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** {
  25              	 .loc 1 583 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
 584:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNC = (uint32_t)(POSIF_PRUNC_CRB_Msk | POSIF_PRUNC_CSM_Msk);
  39              	 .loc 1 584 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 0322     	 mov r2,#3
  42 000c DA60     	 str r2,[r3,#12]
 585:C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc\xmc_posif.h **** }
  43              	 .loc 1 585 0
  44 000e BD46     	 mov sp,r7
  45 0010 02B0     	 add sp,sp,#8
  46              	 
  47 0012 80BD     	 pop {r7,pc}
  48              	 .cfi_endproc
  49              	.LFE62:
  51              	 .section .text.XMC_POSIF_Enable,"ax",%progbits
  52              	 .align 2
  53              	 .global XMC_POSIF_Enable
  54              	 .code 16
  55              	 .thumb_func
  57              	XMC_POSIF_Enable:
  58              	.LFB85:
  59              	 .file 2 "../Libraries/XMCLib/src/xmc_posif.c"
   1:../Libraries/XMCLib/src/xmc_posif.c **** /**
   2:../Libraries/XMCLib/src/xmc_posif.c ****  * @file xmc_posif.c
   3:../Libraries/XMCLib/src/xmc_posif.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_posif.c ****  *
   5:../Libraries/XMCLib/src/xmc_posif.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_posif.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_posif.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_posif.c ****  *
   9:../Libraries/XMCLib/src/xmc_posif.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_posif.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_posif.c ****  *
  12:../Libraries/XMCLib/src/xmc_posif.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_posif.c ****  *
  14:../Libraries/XMCLib/src/xmc_posif.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_posif.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_posif.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_posif.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_posif.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_posif.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_posif.c ****  *
  21:../Libraries/XMCLib/src/xmc_posif.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_posif.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_posif.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_posif.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_posif.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_posif.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_posif.c ****  *
  28:../Libraries/XMCLib/src/xmc_posif.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_posif.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_posif.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_posif.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_posif.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_posif.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_posif.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_posif.c ****  *
  36:../Libraries/XMCLib/src/xmc_posif.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_posif.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_posif.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_posif.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_posif.c ****  *
  41:../Libraries/XMCLib/src/xmc_posif.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_posif.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_posif.c ****  *
  44:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-02-18:
  45:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Initial version
  46:../Libraries/XMCLib/src/xmc_posif.c ****  *
  47:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-02-20:
  48:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Driver description added <BR>
  49:../Libraries/XMCLib/src/xmc_posif.c ****  *
  50:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-04-30:
  51:../Libraries/XMCLib/src/xmc_posif.c ****  *     - XMC_POSIF_Enable and XMC_POSIF_Disable APIs updated for POSIF1 peripheral check <BR>
  52:../Libraries/XMCLib/src/xmc_posif.c ****  *
  53:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-06-19:
  54:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Removed GetDriverVersion API <BR>
  55:../Libraries/XMCLib/src/xmc_posif.c ****  *
  56:../Libraries/XMCLib/src/xmc_posif.c ****  * 2017-02-25:
  57:../Libraries/XMCLib/src/xmc_posif.c ****  *     - XMC_POSIF_Enable() and XMC_POSIF_Disable() fixed compilation warnings
  58:../Libraries/XMCLib/src/xmc_posif.c ****  *
  59:../Libraries/XMCLib/src/xmc_posif.c ****  * 2019-12-16:
  60:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  61:../Libraries/XMCLib/src/xmc_posif.c ****  *
  62:../Libraries/XMCLib/src/xmc_posif.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_posif.c ****  *
  64:../Libraries/XMCLib/src/xmc_posif.c ****  */
  65:../Libraries/XMCLib/src/xmc_posif.c **** 
  66:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_posif.c ****  * HEADER FILES
  68:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_posif.c **** #include "xmc_posif.h"
  70:../Libraries/XMCLib/src/xmc_posif.c **** 
  71:../Libraries/XMCLib/src/xmc_posif.c **** /* POSIF is not available on XMC1100 and XMC1200 */
  72:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF0)
  73:../Libraries/XMCLib/src/xmc_posif.c **** #include "xmc_scu.h"
  74:../Libraries/XMCLib/src/xmc_posif.c **** 
  75:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  76:../Libraries/XMCLib/src/xmc_posif.c ****  * MACROS
  77:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_PCONF_INSEL_Msk        (0x3fUL << POSIF_PCONF_INSEL0_Pos) /*< Mask for input pins
  79:../Libraries/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_INSEL_MAX              (4U) /*< Maximum possible input selector */
  80:../Libraries/XMCLib/src/xmc_posif.c **** 
  81:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_posif.c ****  * LOCAL ROUTINES
  83:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_posif.c **** #ifdef XMC_ASSERT_ENABLE
  85:../Libraries/XMCLib/src/xmc_posif.c **** __STATIC_INLINE bool XMC_POSIF_IsPeripheralValid(const XMC_POSIF_t *const peripheral)
  86:../Libraries/XMCLib/src/xmc_posif.c **** {
  87:../Libraries/XMCLib/src/xmc_posif.c ****   bool tmp;
  88:../Libraries/XMCLib/src/xmc_posif.c **** 
  89:../Libraries/XMCLib/src/xmc_posif.c ****   tmp = (peripheral == POSIF0);
  90:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
  91:../Libraries/XMCLib/src/xmc_posif.c ****   tmp |= (peripheral == POSIF1);
  92:../Libraries/XMCLib/src/xmc_posif.c **** #endif
  93:../Libraries/XMCLib/src/xmc_posif.c **** 
  94:../Libraries/XMCLib/src/xmc_posif.c ****   return tmp;
  95:../Libraries/XMCLib/src/xmc_posif.c **** }
  96:../Libraries/XMCLib/src/xmc_posif.c **** #endif
  97:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_posif.c ****  * API IMPLEMENTATION
  99:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
 100:../Libraries/XMCLib/src/xmc_posif.c **** 
 101:../Libraries/XMCLib/src/xmc_posif.c **** /* API to enable the POSIF module */
 102:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral)
 103:../Libraries/XMCLib/src/xmc_posif.c **** {
  60              	 .loc 2 103 0
  61              	 .cfi_startproc
  62 0000 80B5     	 push {r7,lr}
  63              	.LCFI3:
  64              	 .cfi_def_cfa_offset 8
  65              	 .cfi_offset 7,-8
  66              	 .cfi_offset 14,-4
  67 0002 82B0     	 sub sp,sp,#8
  68              	.LCFI4:
  69              	 .cfi_def_cfa_offset 16
  70 0004 00AF     	 add r7,sp,#0
  71              	.LCFI5:
  72              	 .cfi_def_cfa_register 7
  73 0006 7860     	 str r0,[r7,#4]
 104:../Libraries/XMCLib/src/xmc_posif.c **** #if UC_FAMILY == XMC4
 105:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 106:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 107:../Libraries/XMCLib/src/xmc_posif.c **** 
 108:../Libraries/XMCLib/src/xmc_posif.c ****   if (peripheral == POSIF0)
  74              	 .loc 2 108 0
  75 0008 7B68     	 ldr r3,[r7,#4]
  76 000a 044A     	 ldr r2,.L4
  77 000c 9342     	 cmp r3,r2
  78 000e 02D1     	 bne .L2
 109:../Libraries/XMCLib/src/xmc_posif.c ****   {
 110:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 111:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
  79              	 .loc 2 111 0
  80 0010 8020     	 mov r0,#128
  81 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  82              	.L2:
 112:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 113:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 114:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 115:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 116:../Libraries/XMCLib/src/xmc_posif.c ****   }
 117:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 118:../Libraries/XMCLib/src/xmc_posif.c ****   else if (peripheral == POSIF1)
 119:../Libraries/XMCLib/src/xmc_posif.c ****   {
 120:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 121:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 122:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 123:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 124:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 125:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 126:../Libraries/XMCLib/src/xmc_posif.c ****   }
 127:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 128:../Libraries/XMCLib/src/xmc_posif.c ****   else
 129:../Libraries/XMCLib/src/xmc_posif.c ****   {
 130:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 131:../Libraries/XMCLib/src/xmc_posif.c ****   }
 132:../Libraries/XMCLib/src/xmc_posif.c **** }
  83              	 .loc 2 132 0
  84 0016 BD46     	 mov sp,r7
  85 0018 02B0     	 add sp,sp,#8
  86              	 
  87 001a 80BD     	 pop {r7,pc}
  88              	.L5:
  89              	 .align 2
  90              	.L4:
  91 001c 00000150 	 .word 1342242816
  92              	 .cfi_endproc
  93              	.LFE85:
  95              	 .section .text.XMC_POSIF_Disable,"ax",%progbits
  96              	 .align 2
  97              	 .global XMC_POSIF_Disable
  98              	 .code 16
  99              	 .thumb_func
 101              	XMC_POSIF_Disable:
 102              	.LFB86:
 133:../Libraries/XMCLib/src/xmc_posif.c **** 
 134:../Libraries/XMCLib/src/xmc_posif.c **** /* API to disable the POSIF module */
 135:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral)
 136:../Libraries/XMCLib/src/xmc_posif.c **** {
 103              	 .loc 2 136 0
 104              	 .cfi_startproc
 105 0000 80B5     	 push {r7,lr}
 106              	.LCFI6:
 107              	 .cfi_def_cfa_offset 8
 108              	 .cfi_offset 7,-8
 109              	 .cfi_offset 14,-4
 110 0002 82B0     	 sub sp,sp,#8
 111              	.LCFI7:
 112              	 .cfi_def_cfa_offset 16
 113 0004 00AF     	 add r7,sp,#0
 114              	.LCFI8:
 115              	 .cfi_def_cfa_register 7
 116 0006 7860     	 str r0,[r7,#4]
 137:../Libraries/XMCLib/src/xmc_posif.c ****   if (peripheral == POSIF0)
 117              	 .loc 2 137 0
 118 0008 7B68     	 ldr r3,[r7,#4]
 119 000a 044A     	 ldr r2,.L8
 120 000c 9342     	 cmp r3,r2
 121 000e 02D1     	 bne .L6
 138:../Libraries/XMCLib/src/xmc_posif.c ****   {
 139:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 140:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 141:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 142:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 143:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
 122              	 .loc 2 143 0
 123 0010 8020     	 mov r0,#128
 124 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 125              	.L6:
 144:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 145:../Libraries/XMCLib/src/xmc_posif.c ****   }
 146:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 147:../Libraries/XMCLib/src/xmc_posif.c ****   else if (peripheral == POSIF1)
 148:../Libraries/XMCLib/src/xmc_posif.c ****   {
 149:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 150:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 151:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 152:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 153:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 154:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 155:../Libraries/XMCLib/src/xmc_posif.c ****   }
 156:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 157:../Libraries/XMCLib/src/xmc_posif.c ****   else
 158:../Libraries/XMCLib/src/xmc_posif.c ****   {
 159:../Libraries/XMCLib/src/xmc_posif.c ****     XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 160:../Libraries/XMCLib/src/xmc_posif.c ****   }
 161:../Libraries/XMCLib/src/xmc_posif.c **** }
 126              	 .loc 2 161 0
 127 0016 BD46     	 mov sp,r7
 128 0018 02B0     	 add sp,sp,#8
 129              	 
 130 001a 80BD     	 pop {r7,pc}
 131              	.L9:
 132              	 .align 2
 133              	.L8:
 134 001c 00000150 	 .word 1342242816
 135              	 .cfi_endproc
 136              	.LFE86:
 138              	 .section .text.XMC_POSIF_Init,"ax",%progbits
 139              	 .align 2
 140              	 .global XMC_POSIF_Init
 141              	 .code 16
 142              	 .thumb_func
 144              	XMC_POSIF_Init:
 145              	.LFB87:
 162:../Libraries/XMCLib/src/xmc_posif.c **** 
 163:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize POSIF global resources */
 164:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config)
 165:../Libraries/XMCLib/src/xmc_posif.c **** {
 146              	 .loc 2 165 0
 147              	 .cfi_startproc
 148 0000 80B5     	 push {r7,lr}
 149              	.LCFI9:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 7,-8
 152              	 .cfi_offset 14,-4
 153 0002 82B0     	 sub sp,sp,#8
 154              	.LCFI10:
 155              	 .cfi_def_cfa_offset 16
 156 0004 00AF     	 add r7,sp,#0
 157              	.LCFI11:
 158              	 .cfi_def_cfa_register 7
 159 0006 7860     	 str r0,[r7,#4]
 160 0008 3960     	 str r1,[r7]
 166:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 167:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:NULL Pointer", (config != (XMC_POSIF_CONFIG_t *)NULL) );
 168:../Libraries/XMCLib/src/xmc_posif.c **** 
 169:../Libraries/XMCLib/src/xmc_posif.c ****   /* Enable the POSIF module */
 170:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Enable(peripheral);
 161              	 .loc 2 170 0
 162 000a 7B68     	 ldr r3,[r7,#4]
 163 000c 181C     	 mov r0,r3
 164 000e FFF7FEFF 	 bl XMC_POSIF_Enable
 171:../Libraries/XMCLib/src/xmc_posif.c **** 
 172:../Libraries/XMCLib/src/xmc_posif.c ****   /* Stop POSIF */
 173:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Stop(peripheral);
 165              	 .loc 2 173 0
 166 0012 7B68     	 ldr r3,[r7,#4]
 167 0014 181C     	 mov r0,r3
 168 0016 FFF7FEFF 	 bl XMC_POSIF_Stop
 174:../Libraries/XMCLib/src/xmc_posif.c **** 
 175:../Libraries/XMCLib/src/xmc_posif.c ****   /* Program the operational mode, input selectors and debounce filter */
 176:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = config->pconf;
 169              	 .loc 2 176 0
 170 001a 3B68     	 ldr r3,[r7]
 171 001c 1A68     	 ldr r2,[r3]
 172 001e 7B68     	 ldr r3,[r7,#4]
 173 0020 1A60     	 str r2,[r3]
 177:../Libraries/XMCLib/src/xmc_posif.c **** }
 174              	 .loc 2 177 0
 175 0022 BD46     	 mov sp,r7
 176 0024 02B0     	 add sp,sp,#8
 177              	 
 178 0026 80BD     	 pop {r7,pc}
 179              	 .cfi_endproc
 180              	.LFE87:
 182              	 .section .text.XMC_POSIF_HSC_Init,"ax",%progbits
 183              	 .align 2
 184              	 .global XMC_POSIF_HSC_Init
 185              	 .code 16
 186              	 .thumb_func
 188              	XMC_POSIF_HSC_Init:
 189              	.LFB88:
 178:../Libraries/XMCLib/src/xmc_posif.c **** 
 179:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize hall sensor interface */
 180:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 181:../Libraries/XMCLib/src/xmc_posif.c **** {
 190              	 .loc 2 181 0
 191              	 .cfi_startproc
 192 0000 80B5     	 push {r7,lr}
 193              	.LCFI12:
 194              	 .cfi_def_cfa_offset 8
 195              	 .cfi_offset 7,-8
 196              	 .cfi_offset 14,-4
 197 0002 84B0     	 sub sp,sp,#16
 198              	.LCFI13:
 199              	 .cfi_def_cfa_offset 24
 200 0004 00AF     	 add r7,sp,#0
 201              	.LCFI14:
 202              	 .cfi_def_cfa_register 7
 203 0006 7860     	 str r0,[r7,#4]
 204 0008 3960     	 str r1,[r7]
 182:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 183:../Libraries/XMCLib/src/xmc_posif.c **** 
 184:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:Invalid module pointer\n", XMC_POSIF_IsPeripheralValid(peripheral)
 185:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:NULL Pointer\n", (config != (XMC_POSIF_HSC_CONFIG_t *)NULL) );
 186:../Libraries/XMCLib/src/xmc_posif.c **** 
 187:../Libraries/XMCLib/src/xmc_posif.c ****   if (XMC_POSIF_MODE_HALL_SENSOR == (XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_
 205              	 .loc 2 187 0
 206 000a 7B68     	 ldr r3,[r7,#4]
 207 000c 1B68     	 ldr r3,[r3]
 208 000e DBB2     	 uxtb r3,r3
 209 0010 1A1C     	 mov r2,r3
 210 0012 0323     	 mov r3,#3
 211 0014 1340     	 and r3,r2
 212 0016 0BD1     	 bne .L12
 188:../Libraries/XMCLib/src/xmc_posif.c ****   {
 189:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->hall_config;
 213              	 .loc 2 189 0
 214 0018 7B68     	 ldr r3,[r7,#4]
 215 001a 1A68     	 ldr r2,[r3]
 216 001c 3B68     	 ldr r3,[r7]
 217 001e 1B68     	 ldr r3,[r3]
 218 0020 1A43     	 orr r2,r3
 219 0022 7B68     	 ldr r3,[r7,#4]
 220 0024 1A60     	 str r2,[r3]
 190:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 221              	 .loc 2 190 0
 222 0026 0F23     	 mov r3,#15
 223 0028 FB18     	 add r3,r7,r3
 224 002a 0022     	 mov r2,#0
 225 002c 1A70     	 strb r2,[r3]
 226 002e 03E0     	 b .L13
 227              	.L12:
 191:../Libraries/XMCLib/src/xmc_posif.c ****   }
 192:../Libraries/XMCLib/src/xmc_posif.c ****   else
 193:../Libraries/XMCLib/src/xmc_posif.c ****   {
 194:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 228              	 .loc 2 194 0
 229 0030 0F23     	 mov r3,#15
 230 0032 FB18     	 add r3,r7,r3
 231 0034 0122     	 mov r2,#1
 232 0036 1A70     	 strb r2,[r3]
 233              	.L13:
 195:../Libraries/XMCLib/src/xmc_posif.c ****   }
 196:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 234              	 .loc 2 196 0
 235 0038 0F23     	 mov r3,#15
 236 003a FB18     	 add r3,r7,r3
 237 003c 1B78     	 ldrb r3,[r3]
 197:../Libraries/XMCLib/src/xmc_posif.c **** }
 238              	 .loc 2 197 0
 239 003e 181C     	 mov r0,r3
 240 0040 BD46     	 mov sp,r7
 241 0042 04B0     	 add sp,sp,#16
 242              	 
 243 0044 80BD     	 pop {r7,pc}
 244              	 .cfi_endproc
 245              	.LFE88:
 247 0046 C046     	 .section .text.XMC_POSIF_QD_Init,"ax",%progbits
 248              	 .align 2
 249              	 .global XMC_POSIF_QD_Init
 250              	 .code 16
 251              	 .thumb_func
 253              	XMC_POSIF_QD_Init:
 254              	.LFB89:
 198:../Libraries/XMCLib/src/xmc_posif.c **** 
 199:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize quadrature decoder interface */
 200:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t *co
 201:../Libraries/XMCLib/src/xmc_posif.c **** {
 255              	 .loc 2 201 0
 256              	 .cfi_startproc
 257 0000 80B5     	 push {r7,lr}
 258              	.LCFI15:
 259              	 .cfi_def_cfa_offset 8
 260              	 .cfi_offset 7,-8
 261              	 .cfi_offset 14,-4
 262 0002 84B0     	 sub sp,sp,#16
 263              	.LCFI16:
 264              	 .cfi_def_cfa_offset 24
 265 0004 00AF     	 add r7,sp,#0
 266              	.LCFI17:
 267              	 .cfi_def_cfa_register 7
 268 0006 7860     	 str r0,[r7,#4]
 269 0008 3960     	 str r1,[r7]
 202:../Libraries/XMCLib/src/xmc_posif.c ****   uint8_t reg;
 203:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 204:../Libraries/XMCLib/src/xmc_posif.c **** 
 205:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 206:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:NULL Pointer", (config != (XMC_POSIF_QD_CONFIG_t *)NULL) );
 207:../Libraries/XMCLib/src/xmc_posif.c **** 
 208:../Libraries/XMCLib/src/xmc_posif.c ****   reg = (uint8_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk);
 270              	 .loc 2 208 0
 271 000a 7B68     	 ldr r3,[r7,#4]
 272 000c 1B68     	 ldr r3,[r3]
 273 000e DAB2     	 uxtb r2,r3
 274 0010 0E23     	 mov r3,#14
 275 0012 FB18     	 add r3,r7,r3
 276 0014 0321     	 mov r1,#3
 277 0016 0A40     	 and r2,r1
 278 0018 1A70     	 strb r2,[r3]
 209:../Libraries/XMCLib/src/xmc_posif.c ****   if (((uint32_t)XMC_POSIF_MODE_QD == reg) || ((uint32_t)XMC_POSIF_MODE_MCM_QD == reg))
 279              	 .loc 2 209 0
 280 001a 0E23     	 mov r3,#14
 281 001c FB18     	 add r3,r7,r3
 282 001e 1B78     	 ldrb r3,[r3]
 283 0020 012B     	 cmp r3,#1
 284 0022 04D0     	 beq .L16
 285              	 .loc 2 209 0 is_stmt 0 discriminator 1
 286 0024 0E23     	 mov r3,#14
 287 0026 FB18     	 add r3,r7,r3
 288 0028 1B78     	 ldrb r3,[r3]
 289 002a 032B     	 cmp r3,#3
 290 002c 10D1     	 bne .L17
 291              	.L16:
 210:../Libraries/XMCLib/src/xmc_posif.c ****   {
 211:../Libraries/XMCLib/src/xmc_posif.c ****     /* Program the quadrature mode */
 212:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= (uint32_t)(config->mode) << POSIF_PCONF_QDCM_Pos;
 292              	 .loc 2 212 0 is_stmt 1
 293 002e 7B68     	 ldr r3,[r7,#4]
 294 0030 1A68     	 ldr r2,[r3]
 295 0032 3B68     	 ldr r3,[r7]
 296 0034 1B78     	 ldrb r3,[r3]
 297 0036 9B00     	 lsl r3,r3,#2
 298 0038 1A43     	 orr r2,r3
 299 003a 7B68     	 ldr r3,[r7,#4]
 300 003c 1A60     	 str r2,[r3]
 213:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->QDC = config->qdc;
 301              	 .loc 2 213 0
 302 003e 3B68     	 ldr r3,[r7]
 303 0040 5A68     	 ldr r2,[r3,#4]
 304 0042 7B68     	 ldr r3,[r7,#4]
 305 0044 1A66     	 str r2,[r3,#96]
 214:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 306              	 .loc 2 214 0
 307 0046 0F23     	 mov r3,#15
 308 0048 FB18     	 add r3,r7,r3
 309 004a 0022     	 mov r2,#0
 310 004c 1A70     	 strb r2,[r3]
 311 004e 03E0     	 b .L18
 312              	.L17:
 215:../Libraries/XMCLib/src/xmc_posif.c ****   }
 216:../Libraries/XMCLib/src/xmc_posif.c ****   else
 217:../Libraries/XMCLib/src/xmc_posif.c ****   {
 218:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 313              	 .loc 2 218 0
 314 0050 0F23     	 mov r3,#15
 315 0052 FB18     	 add r3,r7,r3
 316 0054 0122     	 mov r2,#1
 317 0056 1A70     	 strb r2,[r3]
 318              	.L18:
 219:../Libraries/XMCLib/src/xmc_posif.c ****   }
 220:../Libraries/XMCLib/src/xmc_posif.c **** 
 221:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 319              	 .loc 2 221 0
 320 0058 0F23     	 mov r3,#15
 321 005a FB18     	 add r3,r7,r3
 322 005c 1B78     	 ldrb r3,[r3]
 222:../Libraries/XMCLib/src/xmc_posif.c **** }
 323              	 .loc 2 222 0
 324 005e 181C     	 mov r0,r3
 325 0060 BD46     	 mov sp,r7
 326 0062 04B0     	 add sp,sp,#16
 327              	 
 328 0064 80BD     	 pop {r7,pc}
 329              	 .cfi_endproc
 330              	.LFE89:
 332 0066 C046     	 .section .text.XMC_POSIF_MCM_Init,"ax",%progbits
 333              	 .align 2
 334              	 .global XMC_POSIF_MCM_Init
 335              	 .code 16
 336              	 .thumb_func
 338              	XMC_POSIF_MCM_Init:
 339              	.LFB90:
 223:../Libraries/XMCLib/src/xmc_posif.c **** 
 224:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize multi-channel mode.
 225:../Libraries/XMCLib/src/xmc_posif.c ****  * This is used in Hall mode, standalone multi-channel mode and quadrature with multi-channel mode
 226:../Libraries/XMCLib/src/xmc_posif.c ****  */
 227:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 228:../Libraries/XMCLib/src/xmc_posif.c **** {
 340              	 .loc 2 228 0
 341              	 .cfi_startproc
 342 0000 80B5     	 push {r7,lr}
 343              	.LCFI18:
 344              	 .cfi_def_cfa_offset 8
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 84B0     	 sub sp,sp,#16
 348              	.LCFI19:
 349              	 .cfi_def_cfa_offset 24
 350 0004 00AF     	 add r7,sp,#0
 351              	.LCFI20:
 352              	 .cfi_def_cfa_register 7
 353 0006 7860     	 str r0,[r7,#4]
 354 0008 3960     	 str r1,[r7]
 229:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 230:../Libraries/XMCLib/src/xmc_posif.c **** 
 231:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 232:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:NULL Pointer", (config != (XMC_POSIF_MCM_CONFIG_t *)NULL) );
 233:../Libraries/XMCLib/src/xmc_posif.c **** 
 234:../Libraries/XMCLib/src/xmc_posif.c ****   if ((XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk) != XMC_POSIF_MODE_QD
 355              	 .loc 2 234 0
 356 000a 7B68     	 ldr r3,[r7,#4]
 357 000c 1B68     	 ldr r3,[r3]
 358 000e DBB2     	 uxtb r3,r3
 359 0010 1A1C     	 mov r2,r3
 360 0012 0323     	 mov r3,#3
 361 0014 1340     	 and r3,r2
 362 0016 012B     	 cmp r3,#1
 363 0018 0BD0     	 beq .L21
 235:../Libraries/XMCLib/src/xmc_posif.c ****   {
 236:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->mcm_config;
 364              	 .loc 2 236 0
 365 001a 7B68     	 ldr r3,[r7,#4]
 366 001c 1A68     	 ldr r2,[r3]
 367 001e 3B68     	 ldr r3,[r7]
 368 0020 1B68     	 ldr r3,[r3]
 369 0022 1A43     	 orr r2,r3
 370 0024 7B68     	 ldr r3,[r7,#4]
 371 0026 1A60     	 str r2,[r3]
 237:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 372              	 .loc 2 237 0
 373 0028 0F23     	 mov r3,#15
 374 002a FB18     	 add r3,r7,r3
 375 002c 0022     	 mov r2,#0
 376 002e 1A70     	 strb r2,[r3]
 377 0030 03E0     	 b .L22
 378              	.L21:
 238:../Libraries/XMCLib/src/xmc_posif.c ****   }
 239:../Libraries/XMCLib/src/xmc_posif.c ****   else
 240:../Libraries/XMCLib/src/xmc_posif.c ****   {
 241:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 379              	 .loc 2 241 0
 380 0032 0F23     	 mov r3,#15
 381 0034 FB18     	 add r3,r7,r3
 382 0036 0122     	 mov r2,#1
 383 0038 1A70     	 strb r2,[r3]
 384              	.L22:
 242:../Libraries/XMCLib/src/xmc_posif.c ****   }
 243:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 385              	 .loc 2 243 0
 386 003a 0F23     	 mov r3,#15
 387 003c FB18     	 add r3,r7,r3
 388 003e 1B78     	 ldrb r3,[r3]
 244:../Libraries/XMCLib/src/xmc_posif.c **** }
 389              	 .loc 2 244 0
 390 0040 181C     	 mov r0,r3
 391 0042 BD46     	 mov sp,r7
 392 0044 04B0     	 add sp,sp,#16
 393              	 
 394 0046 80BD     	 pop {r7,pc}
 395              	 .cfi_endproc
 396              	.LFE90:
 398              	 .section .text.XMC_POSIF_SelectInputSource,"ax",%progbits
 399              	 .align 2
 400              	 .global XMC_POSIF_SelectInputSource
 401              	 .code 16
 402              	 .thumb_func
 404              	XMC_POSIF_SelectInputSource:
 405              	.LFB91:
 245:../Libraries/XMCLib/src/xmc_posif.c **** 
 246:../Libraries/XMCLib/src/xmc_posif.c **** /* API to configure input source */
 247:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SelectInputSource (XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input
 248:../Libraries/XMCLib/src/xmc_posif.c ****                                   const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t
 249:../Libraries/XMCLib/src/xmc_posif.c **** {
 406              	 .loc 2 249 0
 407              	 .cfi_startproc
 408 0000 90B5     	 push {r4,r7,lr}
 409              	.LCFI21:
 410              	 .cfi_def_cfa_offset 12
 411              	 .cfi_offset 4,-12
 412              	 .cfi_offset 7,-8
 413              	 .cfi_offset 14,-4
 414 0002 85B0     	 sub sp,sp,#20
 415              	.LCFI22:
 416              	 .cfi_def_cfa_offset 32
 417 0004 00AF     	 add r7,sp,#0
 418              	.LCFI23:
 419              	 .cfi_def_cfa_register 7
 420 0006 7860     	 str r0,[r7,#4]
 421 0008 0C1C     	 mov r4,r1
 422 000a 101C     	 mov r0,r2
 423 000c 191C     	 mov r1,r3
 424 000e FB1C     	 add r3,r7,#3
 425 0010 221C     	 add r2,r4,#0
 426 0012 1A70     	 strb r2,[r3]
 427 0014 BB1C     	 add r3,r7,#2
 428 0016 021C     	 add r2,r0,#0
 429 0018 1A70     	 strb r2,[r3]
 430 001a 7B1C     	 add r3,r7,#1
 431 001c 0A1C     	 add r2,r1,#0
 432 001e 1A70     	 strb r2,[r3]
 250:../Libraries/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 251:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peri
 252:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input0", (input0 < XMC_POSIF_INSEL_MAX))
 253:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input1", (input1 < XMC_POSIF_INSEL_MAX))
 254:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input2", (input2 < XMC_POSIF_INSEL_MAX))
 255:../Libraries/XMCLib/src/xmc_posif.c **** 
 256:../Libraries/XMCLib/src/xmc_posif.c ****   reg = (uint32_t)((((uint32_t)input0 << POSIF_PCONF_INSEL0_Pos) & (uint32_t)POSIF_PCONF_INSEL0_Msk
 433              	 .loc 2 256 0
 434 0020 FB1C     	 add r3,r7,#3
 435 0022 1B78     	 ldrb r3,[r3]
 436 0024 1A02     	 lsl r2,r3,#8
 437 0026 C023     	 mov r3,#192
 438 0028 9B00     	 lsl r3,r3,#2
 439 002a 1A40     	 and r2,r3
 257:../Libraries/XMCLib/src/xmc_posif.c ****                    (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk
 440              	 .loc 2 257 0
 441 002c BB1C     	 add r3,r7,#2
 442 002e 1B78     	 ldrb r3,[r3]
 443 0030 9902     	 lsl r1,r3,#10
 444 0032 C023     	 mov r3,#192
 445 0034 1B01     	 lsl r3,r3,#4
 446 0036 0B40     	 and r3,r1
 256:../Libraries/XMCLib/src/xmc_posif.c ****                    (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk
 447              	 .loc 2 256 0
 448 0038 1A43     	 orr r2,r3
 258:../Libraries/XMCLib/src/xmc_posif.c ****                    (((uint32_t)input2 << POSIF_PCONF_INSEL2_Pos) & (uint32_t)POSIF_PCONF_INSEL2_Msk
 449              	 .loc 2 258 0
 450 003a 7B1C     	 add r3,r7,#1
 451 003c 1B78     	 ldrb r3,[r3]
 452 003e 1903     	 lsl r1,r3,#12
 453 0040 C023     	 mov r3,#192
 454 0042 9B01     	 lsl r3,r3,#6
 455 0044 0B40     	 and r3,r1
 256:../Libraries/XMCLib/src/xmc_posif.c ****                    (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk
 456              	 .loc 2 256 0
 457 0046 1343     	 orr r3,r2
 458 0048 FB60     	 str r3,[r7,#12]
 259:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)XMC_POSIF_PCONF_INSEL_Msk) | reg);
 459              	 .loc 2 259 0
 460 004a 7B68     	 ldr r3,[r7,#4]
 461 004c 1B68     	 ldr r3,[r3]
 462 004e 044A     	 ldr r2,.L25
 463 0050 1A40     	 and r2,r3
 464 0052 FB68     	 ldr r3,[r7,#12]
 465 0054 1A43     	 orr r2,r3
 466 0056 7B68     	 ldr r3,[r7,#4]
 467 0058 1A60     	 str r2,[r3]
 260:../Libraries/XMCLib/src/xmc_posif.c **** }
 468              	 .loc 2 260 0
 469 005a BD46     	 mov sp,r7
 470 005c 05B0     	 add sp,sp,#20
 471              	 
 472 005e 90BD     	 pop {r4,r7,pc}
 473              	.L26:
 474              	 .align 2
 475              	.L25:
 476 0060 FFC0FFFF 	 .word -16129
 477              	 .cfi_endproc
 478              	.LFE91:
 480              	 .section .text.XMC_POSIF_SetInterruptNode,"ax",%progbits
 481              	 .align 2
 482              	 .global XMC_POSIF_SetInterruptNode
 483              	 .code 16
 484              	 .thumb_func
 486              	XMC_POSIF_SetInterruptNode:
 487              	.LFB92:
 261:../Libraries/XMCLib/src/xmc_posif.c **** 
 262:../Libraries/XMCLib/src/xmc_posif.c **** /* API to select an interrupt node */
 263:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SetInterruptNode(XMC_POSIF_t *const peripheral, const XMC_POSIF_IRQ_EVENT_t event, c
 264:../Libraries/XMCLib/src/xmc_posif.c **** {
 488              	 .loc 2 264 0
 489              	 .cfi_startproc
 490 0000 80B5     	 push {r7,lr}
 491              	.LCFI24:
 492              	 .cfi_def_cfa_offset 8
 493              	 .cfi_offset 7,-8
 494              	 .cfi_offset 14,-4
 495 0002 84B0     	 sub sp,sp,#16
 496              	.LCFI25:
 497              	 .cfi_def_cfa_offset 24
 498 0004 00AF     	 add r7,sp,#0
 499              	.LCFI26:
 500              	 .cfi_def_cfa_register 7
 501 0006 7860     	 str r0,[r7,#4]
 502 0008 081C     	 mov r0,r1
 503 000a 111C     	 mov r1,r2
 504 000c FB1C     	 add r3,r7,#3
 505 000e 021C     	 add r2,r0,#0
 506 0010 1A70     	 strb r2,[r3]
 507 0012 BB1C     	 add r3,r7,#2
 508 0014 0A1C     	 add r2,r1,#0
 509 0016 1A70     	 strb r2,[r3]
 265:../Libraries/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 266:../Libraries/XMCLib/src/xmc_posif.c **** 
 267:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Invalid module pointer", XMC_POSIF_IsPeripheralValid(perip
 268:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong IRQ event", (event <= XMC_POSIF_IRQ_EVENT_PCLK) );
 269:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong SR ID", (sr <= XMC_POSIF_SR_ID_1) );
 270:../Libraries/XMCLib/src/xmc_posif.c **** 
 271:../Libraries/XMCLib/src/xmc_posif.c ****   reg = peripheral->PFLGE;
 510              	 .loc 2 271 0
 511 0018 7B68     	 ldr r3,[r7,#4]
 512 001a 5B6F     	 ldr r3,[r3,#116]
 513 001c FB60     	 str r3,[r7,#12]
 272:../Libraries/XMCLib/src/xmc_posif.c ****   reg &= ~((uint32_t)1 << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos));
 514              	 .loc 2 272 0
 515 001e FB1C     	 add r3,r7,#3
 516 0020 1B78     	 ldrb r3,[r3]
 517 0022 1033     	 add r3,r3,#16
 518 0024 1A1C     	 mov r2,r3
 519 0026 0123     	 mov r3,#1
 520 0028 9340     	 lsl r3,r3,r2
 521 002a DA43     	 mvn r2,r3
 522 002c FB68     	 ldr r3,[r7,#12]
 523 002e 1340     	 and r3,r2
 524 0030 FB60     	 str r3,[r7,#12]
 273:../Libraries/XMCLib/src/xmc_posif.c ****   reg |= (uint32_t)sr << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos);
 525              	 .loc 2 273 0
 526 0032 BB1C     	 add r3,r7,#2
 527 0034 1B78     	 ldrb r3,[r3]
 528 0036 FA1C     	 add r2,r7,#3
 529 0038 1278     	 ldrb r2,[r2]
 530 003a 1032     	 add r2,r2,#16
 531 003c 9340     	 lsl r3,r3,r2
 532 003e FA68     	 ldr r2,[r7,#12]
 533 0040 1343     	 orr r3,r2
 534 0042 FB60     	 str r3,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PFLGE = reg;
 535              	 .loc 2 274 0
 536 0044 7B68     	 ldr r3,[r7,#4]
 537 0046 FA68     	 ldr r2,[r7,#12]
 538 0048 5A67     	 str r2,[r3,#116]
 275:../Libraries/XMCLib/src/xmc_posif.c **** }
 539              	 .loc 2 275 0
 540 004a BD46     	 mov sp,r7
 541 004c 04B0     	 add sp,sp,#16
 542              	 
 543 004e 80BD     	 pop {r7,pc}
 544              	 .cfi_endproc
 545              	.LFE92:
 547              	 .text
 548              	.Letext0:
 549              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 550              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 551              	 .file 5 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 552              	 .file 6 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/XMCLib/inc/xmc1_scu.h"
 553              	 .file 7 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Include/cmsis_gcc.h"
 554              	 .file 8 "C:/Users/AlbrechAndre/Documents/Office/IMM_2024/Dave/PWM_example/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_posif.c
    {standard input}:18     .text.XMC_POSIF_Stop:00000000 $t
    {standard input}:22     .text.XMC_POSIF_Stop:00000000 XMC_POSIF_Stop
    {standard input}:52     .text.XMC_POSIF_Enable:00000000 $t
    {standard input}:57     .text.XMC_POSIF_Enable:00000000 XMC_POSIF_Enable
    {standard input}:91     .text.XMC_POSIF_Enable:0000001c $d
    {standard input}:96     .text.XMC_POSIF_Disable:00000000 $t
    {standard input}:101    .text.XMC_POSIF_Disable:00000000 XMC_POSIF_Disable
    {standard input}:134    .text.XMC_POSIF_Disable:0000001c $d
    {standard input}:139    .text.XMC_POSIF_Init:00000000 $t
    {standard input}:144    .text.XMC_POSIF_Init:00000000 XMC_POSIF_Init
    {standard input}:183    .text.XMC_POSIF_HSC_Init:00000000 $t
    {standard input}:188    .text.XMC_POSIF_HSC_Init:00000000 XMC_POSIF_HSC_Init
    {standard input}:248    .text.XMC_POSIF_QD_Init:00000000 $t
    {standard input}:253    .text.XMC_POSIF_QD_Init:00000000 XMC_POSIF_QD_Init
    {standard input}:333    .text.XMC_POSIF_MCM_Init:00000000 $t
    {standard input}:338    .text.XMC_POSIF_MCM_Init:00000000 XMC_POSIF_MCM_Init
    {standard input}:399    .text.XMC_POSIF_SelectInputSource:00000000 $t
    {standard input}:404    .text.XMC_POSIF_SelectInputSource:00000000 XMC_POSIF_SelectInputSource
    {standard input}:476    .text.XMC_POSIF_SelectInputSource:00000060 $d
    {standard input}:481    .text.XMC_POSIF_SetInterruptNode:00000000 $t
    {standard input}:486    .text.XMC_POSIF_SetInterruptNode:00000000 XMC_POSIF_SetInterruptNode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
